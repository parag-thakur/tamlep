Script started on 2024-03-12 17:47:24+05:30 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="133" LINES="33"]
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur[00m$ exitcp my_unix_session /mnt/c/Users/parag.thakur/Desktop[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cd[Kscript -a ~/my_unix_sessionexit[Kwc -l $(find . -name "*.dat") | sort -n^C[?2004l[?2004h[?2004l
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur[00m$ exitcp my_unix_session /mnt/c/Users/parag.thakur/Desktop[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cd[Kscript -a ~/my_unix_sessionexit[Kwc -l $(find . -name "*.dat") | sort -ngrep -v "unicorn" $(find creatures -name "*.dat")[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[5Pfind creatures -name *.dat | grep -v unicorn[2@"*.dat"[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[6Pgrep "searching" $(find . -name "*.txt")^C[?2004l[?2004h[?2004l
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur[00m$ [7m sudo apt install git-all[27m sudo apt install git-all
[?2004l[sudo] password for parag: 
Sorry, try again.
[sudo] password for parag: 
Reading package lists... 0%Reading package lists... 100%Reading package lists... Done
Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%Building dependency tree... Done
Reading state information... 0% Reading state information... 0%Reading state information... Done
git-all is already the newest version (1:2.34.1-1ubuntu1.10).
0 upgraded, 0 newly installed, 0 to remove and 80 not upgraded.
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur[00m$ [7mgit config --global user.name "Parag Thakur"[27mgit config --global user.name "Parag Thakur"
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur[00m$ [7mgit config --global user.email parag.thakur@tigeranalytics.com[27m[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cgit config --global user.email parag.thakur@tigeranalytics.com
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur[00m$ [7mgit config --global core.editor vim[27mgit config --global core.editor vim
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur[00m$ [7mgit config --global init.defaultBranch main[27mgit config --global init.defaultBranch main
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur[00m$ [7mgit config --list[27mgit config --list
[?2004l[?1h=user.name=Parag Thakur[m
user.email=parag.thakur@tigeranalytics.com[m
core.editor=vim[m
init.defaultbranch=main[m
[K[?1l>[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur[00m$ git help config
[?2004l[?1049h[22;0;0t[?1h=GIT-CONFIG(1)                                               Git Manual                                              GIT-CONFIG(1)[m
[m
[1mNAME[0m[m
       git-config - Get and set repository or global options[m
[m
[1mSYNOPSIS[0m[m
       [4mgit[24m [4mconfig[24m [<file-option>] [--type=<type>] [--fixed-value] [--show-origin] [--show-scope] [-z|--null] name [value [value-patte[m rn]][m
       [4mgit[24m [4mconfig[24m [<file-option>] [--type=<type>] --add name value[m
       [4mgit[24m [4mconfig[24m [<file-option>] [--type=<type>] [--fixed-value] --replace-all name value [value-pattern][m
       [4mgit[24m [4mconfig[24m [<file-option>] [--type=<type>] [--show-origin] [--show-scope] [-z|--null] [--fixed-value] --get name [value-patter[m n][m
       [4mgit[24m [4mconfig[24m [<file-option>] [--type=<type>] [--show-origin] [--show-scope] [-z|--null] [--fixed-value] --get-all name [value-pa[m ttern][m
       [4mgit[24m [4mconfig[24m [<file-option>] [--type=<type>] [--show-origin] [--show-scope] [-z|--null] [--fixed-value] [--name-only] --get-rege[m xp name_regex [value-pattern][m
       [4mgit[24m [4mconfig[24m [<file-option>] [--type=<type>] [-z|--null] --get-urlmatch name URL[m
       [4mgit[24m [4mconfig[24m [<file-option>] [--fixed-value] --unset name [value-pattern][m
       [4mgit[24m [4mconfig[24m [<file-option>] [--fixed-value] --unset-all name [value-pattern][m
       [4mgit[24m [4mconfig[24m [<file-option>] --rename-section old_name new_name[m
       [4mgit[24m [4mconfig[24m [<file-option>] --remove-section name[m
       [4mgit[24m [4mconfig[24m [<file-option>] [--show-origin] [--show-scope] [-z|--null] [--name-only] -l | --list[m
       [4mgit[24m [4mconfig[24m [<file-option>] --get-color name [default][m
       [4mgit[24m [4mconfig[24m [<file-option>] --get-colorbool name [stdout-is-tty][m
       [4mgit[24m [4mconfig[24m [<file-option>] -e | --edit[m
[m
[1mDESCRIPTION[0m[m
       You can query/set/replace/unset options with this command. The name is actually the section and the key separated by a[m
       dot, and the value will be escaped.[m
[m
       Multiple lines can be added to an option by using the [1m--add[0m option. If you want to update or unset an option which can[m
       occur on multiple lines, a [1mvalue-pattern[0m (which is an extended regular expression, unless the [1m--fixed-value[0m option is[m
[7m Manual page git-config(1) line 1 (press h for help or q to quit)[27m[K[K[K[7m Manual page git-config(1) line 1 (press h for help or q to quit)[27m[K[K       given) needs to be given. Only the existing values that match the pattern are updated or unset. If you want to handle the[m
       lines that do [1mnot[0m match the pattern, just prepend a single exclamation mark in front (see also the section called[m
       ‚ÄúEXAMPLES‚Äù), but note that this only works when the [1m--fixed-value[0m option is not in use.[m
[m
       The [1m--type=<type>[0m option instructs [4mgit[24m [4mconfig[24m to ensure that incoming and outgoing values are canonicalize-able under the[m
       given <type>. If no [1m--type=<type>[0m is given, no canonicalization will be performed. Callers may unset an existing [1m--type[0m[m
       specifier with [1m--no-type[0m.[m
[m
       When reading, the values are read from the system, global and repository local configuration files by default, and options[m
       [1m--system[0m, [1m--global[0m, [1m--local[0m, [1m--worktree[0m and [1m--file[0m [1m<filename>[0m can be used to tell the command to read from only that[m
       location (see the section called ‚ÄúFILES‚Äù).[m
[m
       When writing, the new value is written to the repository local configuration file by default, and options [1m--system[0m,[m
       [1m--global[0m, [1m--worktree[0m, [1m--file[0m [1m<filename>[0m can be used to tell the command to write to that location (you can say [1m--local[0m but[m
       that is the default).[m
[m
       This command will fail with non-zero status upon error. Some exit codes are:[m
[m
       ‚Ä¢   The section or key is invalid (ret=1),[m
[m
       ‚Ä¢   no section or name was provided (ret=2),[m
[m
       ‚Ä¢   the config file is invalid (ret=3),[m
[m
       ‚Ä¢   the config file cannot be written (ret=4),[m
[m
       ‚Ä¢   you try to unset an option which does not exist (ret=5),[m
[m
       ‚Ä¢   you try to unset/set an option for which multiple lines match (ret=5), or[m
[m
       ‚Ä¢   you try to use an invalid regexp (ret=6).[m
[m
[7m Manual page git-config(1) line 29 (press h for help or q to quit)[27m[K[K       On success, the command returns the exit code 0.[m
[m
       A list of all available configuration variables can be obtained using the [1mgit[0m [1mhelp[0m [1m--config[0m command.[m
[m
[1mOPTIONS[0m[m
       --replace-all[m
           Default behavior is to replace at most one line. This replaces all lines matching the key (and optionally the[m
           [1mvalue-pattern[0m).[m
[m
       --add[m
           Adds a new line to the option without altering any existing values. This is the same as providing [4m^$[24m as the[m
           [1mvalue-pattern[0m in [1m--replace-all[0m.[m
[m
       --get[m
           Get the value for a given key (optionally filtered by a regex matching the value). Returns error code 1 if the key was[m
           not found and the last value if multiple key values were found.[m
[m
       --get-all[m
           Like get, but returns all values for a multi-valued key.[m
[m
       --get-regexp[m
           Like --get-all, but interprets the name as a regular expression and writes out the key names. Regular expression[m
           matching is currently case-sensitive and done against a canonicalized version of the key in which section and variable[m
           names are lowercased, but subsection names are not.[m
[m
       --get-urlmatch name URL[m
           When given a two-part name section.key, the value for section.<url>.key whose <url> part matches the best to the given[m
           URL is returned (if no such key exists, the value for section.key is used as a fallback). When given just the section[m
           as name, do so for all the keys in the section and list them. Returns error code 1 if no value is found.[m
[m
       --global[m
           For writing options: write to global [1m~/.gitconfig[0m file rather than the repository [1m.git/config[0m, write to[m
[7m Manual page git-config(1) line 61 (press h for help or q to quit)[27m[K[K           [1m$XDG_CONFIG_HOME/git/config[0m file if this file exists and the [1m~/.gitconfig[0m file doesn‚Äôt.[m
[m
           For reading options: read only from global [1m~/.gitconfig[0m and from [1m$XDG_CONFIG_HOME/git/config[0m rather than from all[m
           available files.[m
[m
           See also the section called ‚ÄúFILES‚Äù.[m
[m
       --system[m
           For writing options: write to system-wide [1m$(prefix)/etc/gitconfig[0m rather than the repository [1m.git/config[0m.[m
[m
           For reading options: read only from system-wide [1m$(prefix)/etc/gitconfig[0m rather than from all available files.[m
[m
           See also the section called ‚ÄúFILES‚Äù.[m
[m
       --local[m
           For writing options: write to the repository [1m.git/config[0m file. This is the default behavior.[m
[m
           For reading options: read only from the repository [1m.git/config[0m rather than from all available files.[m
[m
           See also the section called ‚ÄúFILES‚Äù.[m
[m
       --worktree[m
           Similar to [1m--local[0m except that [1m.git/config.worktree[0m is read from or written to if [1mextensions.worktreeConfig[0m is[m
           present. If not it‚Äôs the same as [1m--local[0m.[m
[m
       -f config-file, --file config-file[m
           For writing options: write to the specified file rather than the repository [1m.git/config[0m.[m
[m
           For reading options: read only from the specified file rather than from all available files.[m
[m
           See also the section called ‚ÄúFILES‚Äù.[m
[m
[7m Manual page git-config(1) line 93 (press h for help or q to quit)[27m[K[K       --blob blob[m
           Similar to [1m--file[0m but use the given blob instead of a file. E.g. you can use [4mmaster:.gitmodules[24m to read values from[m
           the file [4m.gitmodules[24m in the master branch. See "SPECIFYING REVISIONS" section in [1mgitrevisions[0m(7) for a more complete[m
           list of ways to spell blob names.[m
[m
       --remove-section[m
           Remove the given section from the configuration file.[m
[m
       --rename-section[m
           Rename the given section to a new name.[m
[m
       --unset[m
           Remove the line matching the key from config file.[m
[m
       --unset-all[m
           Remove all lines matching the key from config file.[m
[m
       -l, --list[m
           List all variables set in config file, along with their values.[m
[m
       --fixed-value[m
           When used with the [1mvalue-pattern[0m argument, treat [1mvalue-pattern[0m as an exact string instead of a regular expression.[m
           This will restrict the name/value pairs that are matched to only those where the value is exactly equal to the[m
           [1mvalue-pattern[0m.[m
[m
       --type <type>[m
           [4mgit[24m [4mconfig[24m will ensure that any input or output is valid under the given type constraint(s), and will canonicalize[m
           outgoing values in [1m<type>[0m's canonical form.[m
[m
           Valid [1m<type>[0m's include:[m
[m
           ‚Ä¢   [4mbool[24m: canonicalize values as either "true" or "false".[m
[7m Manual page git-config(1) line 125 (press h for help or q to quit)[27m[K[K[m
           ‚Ä¢   [4mint[24m: canonicalize values as simple decimal numbers. An optional suffix of [4mk[24m, [4mm[24m, or [4mg[24m will cause the value to be[m
               multiplied by 1024, 1048576, or 1073741824 upon input.[m
[m
           ‚Ä¢   [4mbool-or-int[24m: canonicalize according to either [4mbool[24m or [4mint[24m, as described above.[m
[m
           ‚Ä¢   [4mpath[24m: canonicalize by adding a leading [1m~[0m to the value of [1m$HOME[0m and [1m~user[0m to the home directory for the specified[m
               user. This specifier has no effect when setting the value (but you can use [1mgit[0m [1mconfig[0m [1msection.variable[0m [1m~/[0m from the[m
               command line to let your shell do the expansion.)[m
[m
           ‚Ä¢   [4mexpiry-date[24m: canonicalize by converting from a fixed or relative date-string to a timestamp. This specifier has no[m
               effect when setting the value.[m
[m
           ‚Ä¢   [4mcolor[24m: When getting a value, canonicalize by converting to an ANSI color escape sequence. When setting a value, a[m
               sanity-check is performed to ensure that the given value is canonicalize-able as an ANSI color, but it is written[m
               as-is.[m
[m
       --bool, --int, --bool-or-int, --path, --expiry-date[m
           Historical options for selecting a type specifier. Prefer instead [1m--type[0m (see above).[m
[m
       --no-type[m
           Un-sets the previously set type specifier (if one was previously set). This option requests that [4mgit[24m [4mconfig[24m not[m
           canonicalize the retrieved variable.  [1m--no-type[0m has no effect without [1m--type=<type>[0m or [1m--<type>[0m.[m
[m
       -z, --null[m
           For all options that output values and/or keys, always end values with the null character (instead of a newline). Use[m
           newline instead as a delimiter between key and value. This allows for secure parsing of the output without getting[m
           confused e.g. by values that contain line breaks.[m
[m
       --name-only[m
           Output only the names of config variables for [1m--list[0m or [1m--get-regexp[0m.[m
[m
[7m Manual page git-config(1) line 157 (press h for help or q to quit)[27m[K[K       --show-origin[m
           Augment the output of all queried config options with the origin type (file, standard input, blob, command line) and[m
           the actual origin (config file path, ref, or blob id if applicable).[m
[m
       --show-scope[m
           Similar to [1m--show-origin[0m in that it augments the output of all queried config options with the scope of that value[m
           (local, global, system, command).[m
[m
       --get-colorbool name [stdout-is-tty][m
           Find the color setting for [1mname[0m (e.g.  [1mcolor.diff[0m) and output "true" or "false".  [1mstdout-is-tty[0m should be either[m
           "true" or "false", and is taken into account when configuration says "auto". If [1mstdout-is-tty[0m is missing, then checks[m
           the standard output of the command itself, and exits with status 0 if color is to be used, or exits with status 1[m
           otherwise. When the color setting for [1mname[0m is undefined, the command uses [1mcolor.ui[0m as fallback.[m
[m
       --get-color name [default][m
           Find the color configured for [1mname[0m (e.g.  [1mcolor.diff.new[0m) and output it as the ANSI color escape sequence to the[m
           standard output. The optional [1mdefault[0m parameter is used instead, if there is no color configured for [1mname[0m.[m
[m
           [1m--type=color[0m [1m[--default=<default>][0m is preferred over [1m--get-color[0m (but note that [1m--get-color[0m will omit the trailing[m
           newline printed by [1m--type=color[0m).[m
[m
       -e, --edit[m
           Opens an editor to modify the specified config file; either [1m--system[0m, [1m--global[0m, or repository (default).[m
[m
       --[no-]includes[m
           Respect [1minclude.*[0m  directives in config files when looking up values. Defaults to [1moff[0m when a specific file is given[m
           (e.g., using [1m--file[0m, [1m--global[0m, etc) and [1mon[0m when searching all config files.[m
[m
       --default <value>[m
           When using [1m--get[0m, and the requested variable is not found, behave as if <value> were the value assigned to the that[m
           variable.[m
[m
[7m Manual page git-config(1) line 189 (press h for help or q to quit)[27m[K[K[1mCONFIGURATION[0m[m
       [1mpager.config[0m is only respected when listing configuration, i.e., when using [1m--list[0m or any of the [1m--get-*[0m which may return[m
       multiple results. The default is to use a pager.[m
[m
[1mFILES[0m[m
       If not set explicitly with [1m--file[0m, there are four files where [4mgit[24m [4mconfig[24m will search for configuration options:[m
[m
       $(prefix)/etc/gitconfig[m
           System-wide configuration file.[m
[m
       $XDG_CONFIG_HOME/git/config[m
           Second user-specific configuration file. If $XDG_CONFIG_HOME is not set or empty, [1m$HOME/.config/git/config[0m will be[m
           used. Any single-valued variable set in this file will be overwritten by whatever is in [1m~/.gitconfig[0m. It is a good[m
           idea not to create this file if you sometimes use older versions of Git, as support for this file was added fairly[m
           recently.[m
[m
       ~/.gitconfig[m
           User-specific configuration file. Also called "global" configuration file.[m
[m
       $GIT_DIR/config[m
           Repository specific configuration file.[m
[m
       $GIT_DIR/config.worktree[m
           This is optional and is only searched when [1mextensions.worktreeConfig[0m is present in $GIT_DIR/config.[m
[m
       If no further options are given, all reading options will read all of these files that are available. If the global or the[m
       system-wide configuration file are not available they will be ignored. If the repository configuration file is not[m
       available or readable, [4mgit[24m [4mconfig[24m will exit with a non-zero error code. However, in neither case will an error message be[m
       issued.[m
[m
       The files are read in the order given above, with last value found taking precedence over values read earlier. When[m
       multiple values are taken then all values of a key from all files will be used.[m
[7m Manual page git-config(1) line 221 (press h for help or q to quit)[27m[K[K[m
       You may override individual configuration parameters when running any git command by using the [1m-c[0m option. See [1mgit[0m(1) for[m
       details.[m
[m
       All writing options will per default write to the repository specific configuration file. Note that this also affects[m
       options like [1m--replace-all[0m and [1m--unset[0m. [4mgit[24m [4mconfig[24m [1mwill[0m [1monly[0m [1mever[0m [1mchange[0m [1mone[0m [1mfile[0m [1mat[0m [1ma[0m [1mtime[0m.[m
[m
       You can override these rules using the [1m--global[0m, [1m--system[0m, [1m--local[0m, [1m--worktree[0m, and [1m--file[0m command-line options; see the[m
       section called ‚ÄúOPTIONS‚Äù above.[m
[m
[1mENVIRONMENT[0m[m
       GIT_CONFIG_GLOBAL, GIT_CONFIG_SYSTEM[m
           Take the configuration from the given files instead from global or system-level configuration. See [1mgit[0m(1) for details.[m
[m
       GIT_CONFIG_NOSYSTEM[m
           Whether to skip reading settings from the system-wide $(prefix)/etc/gitconfig file. See [1mgit[0m(1) for details.[m
[m
       See also the section called ‚ÄúFILES‚Äù.[m
[m
       GIT_CONFIG_COUNT, GIT_CONFIG_KEY_<n>, GIT_CONFIG_VALUE_<n>[m
           If GIT_CONFIG_COUNT is set to a positive number, all environment pairs GIT_CONFIG_KEY_<n> and GIT_CONFIG_VALUE_<n> up[m
           to that number will be added to the process‚Äôs runtime configuration. The config pairs are zero-indexed. Any missing[m
           key or value is treated as an error. An empty GIT_CONFIG_COUNT is treated the same as GIT_CONFIG_COUNT=0, namely no[m
           pairs are processed. These environment variables will override values in configuration files, but will be overridden[m
           by any explicit options passed via [1mgit[0m [1m-c[0m.[m
[m
           This is useful for cases where you want to spawn multiple git commands with a common configuration but cannot depend[m
           on a configuration file, for example when writing scripts.[m
[m
       GIT_CONFIG[m
           If no [1m--file[0m option is provided to [1mgit[0m [1mconfig[0m, use the file given by [1mGIT_CONFIG[0m as if it were provided via [1m--file[0m.[m
           This variable has no effect on other Git commands, and is mostly for historical compatibility; there is generally no[m
[7m Manual page git-config(1) line 253 (press h for help or q to quit)[27m[K[K           reason to use it instead of the [1m--file[0m option.[m
[m
[1mEXAMPLES[0m[m
       Given a .git/config like this:[m
[m
           #[m
           # This is the config file, and[m
           # a '#' or ';' character indicates[m
           # a comment[m
           #[m
[m
           ; core variables[m
           [core][m
                   ; Don't trust file modes[m
                   filemode = false[m
[m
           ; Our diff algorithm[m
           [diff][m
                   external = /usr/local/bin/diff-wrapper[m
                   renames = true[m
[m
           ; Proxy settings[m
           [core][m
                   gitproxy=proxy-command for kernel.org[m
                   gitproxy=default-proxy ; for all the rest[m
[m
           ; HTTP[m
           [http][m
                   sslVerify[m
           [http "https://weak.example.com"][m
                   sslVerify = false[m
                   cookieFile = /tmp/cookie.txt[m
[7m Manual page git-config(1) line 285 (press h for help or q to quit)[27m[K[K[m
       you can set the filemode to true with[m
[m
           % git config core.filemode true[m
[m
       The hypothetical proxy command entries actually have a postfix to discern what URL they apply to. Here is how to change[m
       the entry for kernel.org to "ssh".[m
[m
           % git config core.gitproxy '"ssh" for kernel.org' 'for kernel.org$'[m
[m
       This makes sure that only the key/value pair for kernel.org is replaced.[m
[m
       To delete the entry for renames, do[m
[m
           % git config --unset diff.renames[m
[m
       If you want to delete an entry for a multivar (like core.gitproxy above), you have to provide a regex matching the value[m
       of exactly one line.[m
[m
       To query the value for a given key, do[m
[m
           % git config --get core.filemode[m
[m
       or[m
[m
           % git config core.filemode[m
[m
       or, to query a multivar:[m
[m
           % git config --get core.gitproxy "for kernel.org$"[m
[m
       If you want to know all the values for a multivar, do:[m
[7m Manual page git-config(1) line 317 (press h for help or q to quit)[27m[K[K[m
           % git config --get-all core.gitproxy[m
[m
       If you like to live dangerously, you can replace [1mall[0m core.gitproxy by a new one with[m
[m
           % git config --replace-all core.gitproxy ssh[m
[m
       However, if you really only want to replace the line for the default proxy, i.e. the one without a "for ..." postfix, do[m
       something like this:[m
[m
           % git config core.gitproxy ssh '! for '[m
[m
       To actually match only values with an exclamation mark, you have to[m
[m
           % git config section.key value '[!]'[m
[m
       To add a new proxy, without altering any of the existing ones, use[m
[m
           % git config --add core.gitproxy '"proxy-command" for example.com'[m
[m
       An example to use customized color from the configuration in your script:[m
[m
           #!/bin/sh[m
           WS=$(git config --get-color color.diff.whitespace "blue reverse")[m
           RESET=$(git config --get-color "" "reset")[m
           echo "${WS}your whitespace color or blue reverse${RESET}"[m
[m
       For URLs in [1mhttps://weak.example.com[0m, [1mhttp.sslVerify[0m is set to false, while it is set to [1mtrue[0m for all others:[m
[m
           % git config --type=bool --get-urlmatch http.sslverify https://good.example.com[m
           true[m
           % git config --type=bool --get-urlmatch http.sslverify https://weak.example.com[m
[7m Manual page git-config(1) line 349 (press h for help or q to quit)[27m[K[K           false[m
           % git config --get-urlmatch http https://weak.example.com[m
           http.cookieFile /tmp/cookie.txt[m
           http.sslverify false[m
[m
[1mCONFIGURATION[0m [1mFILE[0m[m
       The Git configuration file contains a number of variables that affect the Git commands' behavior. The files [1m.git/config[0m[m
       and optionally [1mconfig.worktree[0m (see the "CONFIGURATION FILE" section of [1mgit-worktree[0m(1)) in each repository are used to[m
       store the configuration for that repository, and [1m$HOME/.gitconfig[0m is used to store a per-user configuration as fallback[m
       values for the [1m.git/config[0m file. The file [1m/etc/gitconfig[0m can be used to store a system-wide default configuration.[m
[m
       The configuration variables are used by both the Git plumbing and the porcelains. The variables are divided into sections,[m
       wherein the fully qualified variable name of the variable itself is the last dot-separated segment and the section name is[m
       everything before the last dot. The variable names are case-insensitive, allow only alphanumeric characters and [1m-[0m, and[m
       must start with an alphabetic character. Some variables may appear multiple times; we say then that the variable is[m
       multivalued.[m
[m
   [1mSyntax[0m[m
       The syntax is fairly flexible and permissive; whitespaces are mostly ignored. The [4m#[24m and [4m;[24m characters begin comments to the[m
       end of line, blank lines are ignored.[m
[m
       The file consists of sections and variables. A section begins with the name of the section in square brackets and[m
       continues until the next section begins. Section names are case-insensitive. Only alphanumeric characters, [1m-[0m and [1m.[0m are[m
       allowed in section names. Each variable must belong to some section, which means that there must be a section header[m
       before the first setting of a variable.[m
[m
       Sections can be further divided into subsections. To begin a subsection put its name in double quotes, separated by space[m
       from the section name, in the section header, like in the example below:[m
[m
                   [section "subsection"][m
[m
       Subsection names are case sensitive and can contain any characters except newline and the null byte. Doublequote [1m"[0m and[m
[7m Manual page git-config(1) line 381 (press h for help or q to quit)[27m[K[K       backslash can be included by escaping them as [1m\"[0m and [1m\\[0m, respectively. Backslashes preceding other characters are dropped[m
       when reading; for example, [1m\t[0m is read as [1mt[0m and [1m\0[0m is read as [1m0[0m. Section headers cannot span multiple lines. Variables may[m
       belong directly to a section or to a given subsection. You can have [1m[section][0m if you have [1m[section[0m [1m"subsection"][0m, but you[m
       don‚Äôt need to.[m
[m
       There is also a deprecated [1m[section.subsection][0m syntax. With this syntax, the subsection name is converted to lower-case[m
       and is also compared case sensitively. These subsection names follow the same restrictions as section names.[m
[m
       All the other lines (and the remainder of the line after the section header) are recognized as setting variables, in the[m
       form [4mname[24m [4m=[24m [4mvalue[24m (or just [4mname[24m, which is a short-hand to say that the variable is the boolean "true"). The variable names[m
       are case-insensitive, allow only alphanumeric characters and [1m-[0m, and must start with an alphabetic character.[m
[m
       A line that defines a value can be continued to the next line by ending it with a [1m\[0m; the backslash and the end-of-line are[m
       stripped. Leading whitespaces after [4mname[24m [4m=[24m, the remainder of the line after the first comment character [4m#[24m or [4m;[24m, and[m
       trailing whitespaces of the line are discarded unless they are enclosed in double quotes. Internal whitespaces within the[m
       value are retained verbatim.[m
[m
       Inside double quotes, double quote [1m"[0m and backslash [1m\[0m characters must be escaped: use [1m\"[0m for [1m"[0m and [1m\\[0m for [1m\[0m.[m
[m
       The following escape sequences (beside [1m\"[0m and [1m\\[0m) are recognized: [1m\n[0m for newline character (NL), [1m\t[0m for horizontal[m
       tabulation (HT, TAB) and [1m\b[0m for backspace (BS). Other char escape sequences (including octal escape sequences) are[m
       invalid.[m
[m
   [1mIncludes[0m[m
       The [1minclude[0m and [1mincludeIf[0m sections allow you to include config directives from another source. These sections behave[m
       identically to each other with the exception that [1mincludeIf[0m sections may be ignored if their condition does not evaluate[m
       to true; see "Conditional includes" below.[m
[m
       You can include a config file from another by setting the special [1minclude.path[0m (or [1mincludeIf.*.path[0m) variable to the name[m
       of the file to be included. The variable takes a pathname as its value, and is subject to tilde expansion. These variables[m
       can be given multiple times.[m
[m
[7m Manual page git-config(1) line 413 (press h for help or q to quit)[27m[K[K       The contents of the included file are inserted immediately, as if they had been found at the location of the include[m
       directive. If the value of the variable is a relative path, the path is considered to be relative to the configuration[m
       file in which the include directive was found. See below for examples.[m
[m
   [1mConditional[0m [1mincludes[0m[m
       You can include a config file from another conditionally by setting a [1mincludeIf.<condition>.path[0m variable to the name of[m
       the file to be included.[m
[m
       The condition starts with a keyword followed by a colon and some data whose format and meaning depends on the keyword.[m
       Supported keywords are:[m
[m
       [1mgitdir[0m[m
           The data that follows the keyword [1mgitdir:[0m is used as a glob pattern. If the location of the .git directory matches the[m
           pattern, the include condition is met.[m
[m
           The .git location may be auto-discovered, or come from [1m$GIT_DIR[0m environment variable. If the repository is auto[m
           discovered via a .git file (e.g. from submodules, or a linked worktree), the .git location would be the final location[m
           where the .git directory is, not where the .git file is.[m
[m
           The pattern can contain standard globbing wildcards and two additional ones, [1m**/[0m and [1m/**[0m, that can match multiple path[m
           components. Please refer to [1mgitignore[0m(5) for details. For convenience:[m
[m
           ‚Ä¢   If the pattern starts with [1m~/[0m, [1m~[0m will be substituted with the content of the environment variable [1mHOME[0m.[m
[m
           ‚Ä¢   If the pattern starts with [1m./[0m, it is replaced with the directory containing the current config file.[m
[m
           ‚Ä¢   If the pattern does not start with either [1m~/[0m, [1m./[0m or [1m/[0m, [1m**/[0m will be automatically prepended. For example, the[m
               pattern [1mfoo/bar[0m becomes [1m**/foo/bar[0m and would match [1m/any/path/to/foo/bar[0m.[m
[m
           ‚Ä¢   If the pattern ends with [1m/[0m, [1m**[0m will be automatically added. For example, the pattern [1mfoo/[0m becomes [1mfoo/**[0m. In other[m
               words, it matches "foo" and everything inside, recursively.[m
[m
[7m Manual page git-config(1) line 445 (press h for help or q to quit)[27m[K[K       [1mgitdir/i[0m[m
           This is the same as [1mgitdir[0m except that matching is done case-insensitively (e.g. on case-insensitive file systems)[m
[m
       [1monbranch[0m[m
           The data that follows the keyword [1monbranch:[0m is taken to be a pattern with standard globbing wildcards and two[m
           additional ones, [1m**/[0m and [1m/**[0m, that can match multiple path components. If we are in a worktree where the name of the[m
           branch that is currently checked out matches the pattern, the include condition is met.[m
[m
           If the pattern ends with [1m/[0m, [1m**[0m will be automatically added. For example, the pattern [1mfoo/[0m becomes [1mfoo/**[0m. In other[m
           words, it matches all branches that begin with [1mfoo/[0m. This is useful if your branches are organized hierarchically and[m
           you would like to apply a configuration to all the branches in that hierarchy.[m
[m
       A few more notes on matching via [1mgitdir[0m and [1mgitdir/i[0m:[m
[m
       ‚Ä¢   Symlinks in [1m$GIT_DIR[0m are not resolved before matching.[m
[m
       ‚Ä¢   Both the symlink & realpath versions of paths will be matched outside of [1m$GIT_DIR[0m. E.g. if ~/git is a symlink to[m
           /mnt/storage/git, both [1mgitdir:~/git[0m and [1mgitdir:/mnt/storage/git[0m will match.[m
[m
           This was not the case in the initial release of this feature in v2.13.0, which only matched the realpath version.[m
           Configuration that wants to be compatible with the initial release of this feature needs to either specify only the[m
           realpath version, or both versions.[m
[m
       ‚Ä¢   Note that "../" is not special and will match literally, which is unlikely what you want.[m
[m
   [1mExample[0m[m
           # Core variables[m
           [core][m
                   ; Don't trust file modes[m
                   filemode = false[m
[m
           # Our diff algorithm[m
[7m Manual page git-config(1) line 477 (press h for help or q to quit)[27m[K[K           [diff][m
                   external = /usr/local/bin/diff-wrapper[m
                   renames = true[m
[m
           [branch "devel"][m
                   remote = origin[m
                   merge = refs/heads/devel[m
[m
           # Proxy settings[m
           [core][m
                   gitProxy="ssh" for "kernel.org"[m
                   gitProxy=default-proxy ; for the rest[m
[m
           [include][m
                   path = /path/to/foo.inc ; include by absolute path[m
                   path = foo.inc ; find "foo.inc" relative to the current file[m
                   path = ~/foo.inc ; find "foo.inc" in your `$HOME` directory[m
[m
           ; include if $GIT_DIR is /path/to/foo/.git[m
           [includeIf "gitdir:/path/to/foo/.git"][m
                   path = /path/to/foo.inc[m
[m
           ; include for all repositories inside /path/to/group[m
           [includeIf "gitdir:/path/to/group/"][m
                   path = /path/to/foo.inc[m
[m
           ; include for all repositories inside $HOME/to/group[m
           [includeIf "gitdir:~/to/group/"][m
                   path = /path/to/foo.inc[m
[m
           ; relative paths are always relative to the including[m
           ; file (if the condition is true); their location is not[m
[7m Manual page git-config(1) line 509 (press h for help or q to quit)[27m[K[K           ; affected by the condition[m
           [includeIf "gitdir:/path/to/group/"][m
                   path = foo.inc[m
[m
           ; include only if we are in a worktree where foo-branch is[m
           ; currently checked out[m
           [includeIf "onbranch:foo-branch"][m
                   path = foo.inc[m
[m
   [1mValues[0m[m
       Values of many variables are treated as a simple string, but there are variables that take values of specific types and[m
       there are rules as to how to spell them.[m
[m
       boolean[m
           When a variable is said to take a boolean value, many synonyms are accepted for [4mtrue[24m and [4mfalse[24m; these are all[m
           case-insensitive.[m
[m
           true[m
               Boolean true literals are [1myes[0m, [1mon[0m, [1mtrue[0m, and [1m1[0m. Also, a variable defined without [1m=[0m [1m<value>[0m is taken as true.[m
[m
           false[m
               Boolean false literals are [1mno[0m, [1moff[0m, [1mfalse[0m, [1m0[0m and the empty string.[m
[m
               When converting a value to its canonical form using the [1m--type=bool[0m type specifier, [4mgit[24m [4mconfig[24m will ensure that[m
               the output is "true" or "false" (spelled in lowercase).[m
[m
       integer[m
           The value for many variables that specify various sizes can be suffixed with [1mk[0m, [1mM[0m,... to mean "scale the number by[m
           1024", "by 1024x1024", etc.[m
[m
       color[m
           The value for a variable that takes a color is a list of colors (at most two, one for foreground and one for[m
[7m Manual page git-config(1) line 541 (press h for help or q to quit)[27m[K[K           background) and attributes (as many as you want), separated by spaces.[m
[m
           The basic colors accepted are [1mnormal[0m, [1mblack[0m, [1mred[0m, [1mgreen[0m, [1myellow[0m, [1mblue[0m, [1mmagenta[0m, [1mcyan[0m and [1mwhite[0m. The first color given[m
           is the foreground; the second is the background. All the basic colors except [1mnormal[0m have a bright variant that can be[m
           specified by prefixing the color with [1mbright[0m, like [1mbrightred[0m.[m
[m
           Colors may also be given as numbers between 0 and 255; these use ANSI 256-color mode (but note that not all terminals[m
           may support this). If your terminal supports it, you may also specify 24-bit RGB values as hex, like [1m#ff0ab3[0m.[m
[m
           The accepted attributes are [1mbold[0m, [1mdim[0m, [1mul[0m, [1mblink[0m, [1mreverse[0m, [1mitalic[0m, and [1mstrike[0m (for crossed-out or "strikethrough"[m
           letters). The position of any attributes with respect to the colors (before, after, or in between), doesn‚Äôt matter.[m
           Specific attributes may be turned off by prefixing them with [1mno[0m or [1mno-[0m (e.g., [1mnoreverse[0m, [1mno-ul[0m, etc).[m
[m
           An empty color string produces no color effect at all. This can be used to avoid coloring specific elements without[m
           disabling color entirely.[m
[m
           For git‚Äôs pre-defined color slots, the attributes are meant to be reset at the beginning of each item in the colored[m
           output. So setting [1mcolor.decorate.branch[0m to [1mblack[0m will paint that branch name in a plain [1mblack[0m, even if the previous[m
           thing on the same output line (e.g. opening parenthesis before the list of branch names in [1mlog[0m [1m--decorate[0m output) is[m
           set to be painted with [1mbold[0m or some other attribute. However, custom log formats may do more complicated and layered[m
           coloring, and the negated forms may be useful there.[m
[m
       pathname[m
           A variable that takes a pathname value can be given a string that begins with "[1m~/[0m" or "[1m~user/[0m", and the usual tilde[m
           expansion happens to such a string: [1m~/[0m is expanded to the value of [1m$HOME[0m, and [1m~user/[0m to the specified user‚Äôs home[m
           directory.[m
[m
           If a path starts with [1m%(prefix)/[0m, the remainder is interpreted as a path relative to Git‚Äôs "runtime prefix", i.e.[m
           relative to the location where Git itself was installed. For example, [1m%(prefix)/bin/[0m refers to the directory in which[m
           the Git executable itself lives. If Git was compiled without runtime prefix support, the compiled-in prefix will be[m
           substituted instead. In the unlikely event that a literal path needs to be specified that should [4mnot[24m be expanded, it[m
           needs to be prefixed by [1m./[0m, like so: [1m./%(prefix)/bin[0m.[m
[7m Manual page git-config(1) line 573 (press h for help or q to quit)[27m[K[K[m
   [1mVariables[0m[m
       Note that this list is non-comprehensive and not necessarily complete. For command-specific variables, you will find a[m
       more detailed description in the appropriate manual page.[m
[m
       Other git-related tools may and do use their own variables. When inventing new variables for use in your own tool, make[m
       sure their names do not conflict with those that are used by Git itself and other popular tools, and describe them in your[m
       documentation.[m
[m
       advice.*[m
           These variables control various optional help messages designed to aid new users. All [4madvice.*[24m  variables default to[m
           [4mtrue[24m, and you can tell Git that you do not need help by setting these to [4mfalse[24m:[m
[m
           fetchShowForcedUpdates[m
               Advice shown when [1mgit-fetch[0m(1) takes a long time to calculate forced updates after ref updates, or to warn that[m
               the check is disabled.[m
[m
           pushUpdateRejected[m
               Set this variable to [4mfalse[24m if you want to disable [4mpushNonFFCurrent[24m, [4mpushNonFFMatching[24m, [4mpushAlreadyExists[24m,[m
               [4mpushFetchFirst[24m, [4mpushNeedsForce[24m, and [4mpushRefNeedsUpdate[24m simultaneously.[m
[m
           pushNonFFCurrent[m
               Advice shown when [1mgit-push[0m(1) fails due to a non-fast-forward update to the current branch.[m
[m
           pushNonFFMatching[m
               Advice shown when you ran [1mgit-push[0m(1) and pushed [4mmatching[24m [4mrefs[24m explicitly (i.e. you used [4m:[24m, or specified a refspec[m
               that isn‚Äôt your current branch) and it resulted in a non-fast-forward error.[m
[m
           pushAlreadyExists[m
               Shown when [1mgit-push[0m(1) rejects an update that does not qualify for fast-forwarding (e.g., a tag.)[m
[m
           pushFetchFirst[m
[7m Manual page git-config(1) line 605 (press h for help or q to quit)[27m[K[K               Shown when [1mgit-push[0m(1) rejects an update that tries to overwrite a remote ref that points at an object we do not[m
               have.[m
[m
           pushNeedsForce[m
               Shown when [1mgit-push[0m(1) rejects an update that tries to overwrite a remote ref that points at an object that is not[m
               a commit-ish, or make the remote ref point at an object that is not a commit-ish.[m
[m
           pushUnqualifiedRefname[m
               Shown when [1mgit-push[0m(1) gives up trying to guess based on the source and destination refs what remote ref namespace[m
               the source belongs in, but where we can still suggest that the user push to either refs/heads/* or refs/tags/*[m
               based on the type of the source object.[m
[m
           pushRefNeedsUpdate[m
               Shown when [1mgit-push[0m(1) rejects a forced update of a branch when its remote-tracking ref has updates that we do not[m
               have locally.[m
[m
           skippedCherryPicks[m
               Shown when [1mgit-rebase[0m(1) skips a commit that has already been cherry-picked onto the upstream branch.[m
[m
           statusAheadBehind[m
               Shown when [1mgit-status[0m(1) computes the ahead/behind counts for a local ref compared to its remote tracking ref, and[m
               that calculation takes longer than expected. Will not appear if [1mstatus.aheadBehind[0m is false or the option[m
               [1m--no-ahead-behind[0m is given.[m
[m
           statusHints[m
               Show directions on how to proceed from the current state in the output of [1mgit-status[0m(1), in the template shown[m
               when writing commit messages in [1mgit-commit[0m(1), and in the help message shown by [1mgit-switch[0m(1) or [1mgit-checkout[0m(1)[m
               when switching branch.[m
[m
           statusUoption[m
               Advise to consider using the [1m-u[0m option to [1mgit-status[0m(1) when the command takes more than 2 seconds to enumerate[m
               untracked files.[m
[7m Manual page git-config(1) line 637 (press h for help or q to quit)[27m[K[K[m
           commitBeforeMerge[m
               Advice shown when [1mgit-merge[0m(1) refuses to merge to avoid overwriting local changes.[m
[m
           resetQuiet[m
               Advice to consider using the [1m--quiet[0m option to [1mgit-reset[0m(1) when the command takes more than 2 seconds to[m
               enumerate unstaged changes after reset.[m
[m
           resolveConflict[m
               Advice shown by various commands when conflicts prevent the operation from being performed.[m
[m
           sequencerInUse[m
               Advice shown when a sequencer command is already in progress.[m
[m
           implicitIdentity[m
               Advice on how to set your identity configuration when your information is guessed from the system username and[m
               domain name.[m
[m
           detachedHead[m
               Advice shown when you used [1mgit-switch[0m(1) or [1mgit-checkout[0m(1) to move to the detach HEAD state, to instruct how to[m
               create a local branch after the fact.[m
[m
           checkoutAmbiguousRemoteBranchName[m
               Advice shown when the argument to [1mgit-checkout[0m(1) and [1mgit-switch[0m(1) ambiguously resolves to a remote tracking[m
               branch on more than one remote in situations where an unambiguous argument would have otherwise caused a[m
               remote-tracking branch to be checked out. See the [1mcheckout.defaultRemote[0m configuration variable for how to set a[m
               given remote to used by default in some situations where this advice would be printed.[m
[m
           amWorkDir[m
               Advice that shows the location of the patch file when [1mgit-am[0m(1) fails to apply it.[m
[m
           rmHints[m
[7m Manual page git-config(1) line 669 (press h for help or q to quit)[27m[K[K               In case of failure in the output of [1mgit-rm[0m(1), show directions on how to proceed from the current state.[m
[m
           addEmbeddedRepo[m
               Advice on what to do when you‚Äôve accidentally added one git repo inside of another.[m
[m
           ignoredHook[m
               Advice shown if a hook is ignored because the hook is not set as executable.[m
[m
           waitingForEditor[m
               Print a message to the terminal whenever Git is waiting for editor input from the user.[m
[m
           nestedTag[m
               Advice shown if a user attempts to recursively tag a tag object.[m
[m
           submoduleAlternateErrorStrategyDie[m
               Advice shown when a submodule.alternateErrorStrategy option configured to "die" causes a fatal error.[m
[m
           addIgnoredFile[m
               Advice shown if a user attempts to add an ignored file to the index.[m
[m
           addEmptyPathspec[m
               Advice shown if a user runs the add command without providing the pathspec parameter.[m
[m
           updateSparsePath[m
               Advice shown when either [1mgit-add[0m(1) or [1mgit-rm[0m(1) is asked to update index entries outside the current sparse[m
               checkout.[m
[m
       core.fileMode[m
           Tells Git if the executable bit of files in the working tree is to be honored.[m
[m
           Some filesystems lose the executable bit when a file that is marked as executable is checked out, or checks out a[m
           non-executable file with executable bit on.  [1mgit-clone[0m(1) or [1mgit-init[0m(1) probe the filesystem to see if it handles the[m
[7m Manual page git-config(1) line 701 (press h for help or q to quit)[27m[K[K           executable bit correctly and this variable is automatically set as necessary.[m
[m
           A repository, however, may be on a filesystem that handles the filemode correctly, and this variable is set to [4mtrue[24m[m
           when created, but later may be made accessible from another environment that loses the filemode (e.g. exporting ext4[m
           via CIFS mount, visiting a Cygwin created repository with Git for Windows or Eclipse). In such a case it may be[m
           necessary to set this variable to [4mfalse[24m. See [1mgit-update-index[0m(1).[m
[m
           The default is true (when core.filemode is not specified in the config file).[m
[m
       core.hideDotFiles[m
           (Windows-only) If true, mark newly-created directories and files whose name starts with a dot as hidden. If[m
           [4mdotGitOnly[24m, only the [1m.git/[0m directory is hidden, but no other files starting with a dot. The default mode is[m
           [4mdotGitOnly[24m.[m
[m
       core.ignoreCase[m
           Internal variable which enables various workarounds to enable Git to work better on filesystems that are not case[m
           sensitive, like APFS, HFS+, FAT, NTFS, etc. For example, if a directory listing finds "makefile" when Git expects[m
           "Makefile", Git will assume it is really the same file, and continue to remember it as "Makefile".[m
[m
           The default is false, except [1mgit-clone[0m(1) or [1mgit-init[0m(1) will probe and set core.ignoreCase true if appropriate when[m
           the repository is created.[m
[m
           Git relies on the proper configuration of this variable for your operating and file system. Modifying this value may[m
           result in unexpected behavior.[m
[m
       core.precomposeUnicode[m
           This option is only used by Mac OS implementation of Git. When core.precomposeUnicode=true, Git reverts the unicode[m
           decomposition of filenames done by Mac OS. This is useful when sharing a repository between Mac OS and Linux or[m
           Windows. (Git for Windows 1.7.10 or higher is needed, or Git under cygwin 1.7). When false, file names are handled[m
           fully transparent by Git, which is backward compatible with older versions of Git.[m
[m
       core.protectHFS[m
[7m Manual page git-config(1) line 733 (press h for help or q to quit)[27m[K[K           If set to true, do not allow checkout of paths that would be considered equivalent to [1m.git[0m on an HFS+ filesystem.[m
           Defaults to [1mtrue[0m on Mac OS, and [1mfalse[0m elsewhere.[m
[m
       core.protectNTFS[m
           If set to true, do not allow checkout of paths that would cause problems with the NTFS filesystem, e.g. conflict with[m
           8.3 "short" names. Defaults to [1mtrue[0m on Windows, and [1mfalse[0m elsewhere.[m
[m
       core.fsmonitor[m
           If set, the value of this variable is used as a command which will identify all files that may have changed since the[m
           requested date/time. This information is used to speed up git by avoiding unnecessary processing of files that have[m
           not changed. See the "fsmonitor-watchman" section of [1mgithooks[0m(5).[m
[m
       core.fsmonitorHookVersion[m
           Sets the version of hook that is to be used when calling fsmonitor. There are currently versions 1 and 2. When this is[m
           not set, version 2 will be tried first and if it fails then version 1 will be tried. Version 1 uses a timestamp as[m
           input to determine which files have changes since that time but some monitors like watchman have race conditions when[m
           used with a timestamp. Version 2 uses an opaque string so that the monitor can return something that can be used to[m
           determine what files have changed without race conditions.[m
[m
       core.trustctime[m
           If false, the ctime differences between the index and the working tree are ignored; useful when the inode change time[m
           is regularly modified by something outside Git (file system crawlers and some backup systems). See [1mgit-update-[0m[m
           [1mindex[0m(1). True by default.[m
[m
       core.splitIndex[m
           If true, the split-index feature of the index will be used. See [1mgit-update-index[0m(1). False by default.[m
[m
       core.untrackedCache[m
           Determines what to do about the untracked cache feature of the index. It will be kept, if this variable is unset or[m
           set to [1mkeep[0m. It will automatically be added if set to [1mtrue[0m. And it will automatically be removed, if set to [1mfalse[0m.[m
           Before setting it to [1mtrue[0m, you should check that mtime is working properly on your system. See [1mgit-update-index[0m(1).[m
           [1mkeep[0m by default, unless [1mfeature.manyFiles[0m is enabled which sets this setting to [1mtrue[0m by default.[m
[7m Manual page git-config(1) line 765 (press h for help or q to quit)[27m[K[K[m
       core.checkStat[m
           When missing or is set to [1mdefault[0m, many fields in the stat structure are checked to detect if a file has been modified[m
           since Git looked at it. When this configuration variable is set to [1mminimal[0m, sub-second part of mtime and ctime, the[m
           uid and gid of the owner of the file, the inode number (and the device number, if Git was compiled to use it), are[m
           excluded from the check among these fields, leaving only the whole-second part of mtime (and ctime, if [1mcore.trustCtime[0m[m
           is set) and the filesize to be checked.[m
[m
           There are implementations of Git that do not leave usable values in some fields (e.g. JGit); by excluding these fields[m
           from the comparison, the [1mminimal[0m mode may help interoperability when the same repository is used by these other[m
           systems at the same time.[m
[m
       core.quotePath[m
           Commands that output paths (e.g.  [4mls-files[24m, [4mdiff[24m), will quote "unusual" characters in the pathname by enclosing the[m
           pathname in double-quotes and escaping those characters with backslashes in the same way C escapes control characters[m
           (e.g.  [1m\t[0m for TAB, [1m\n[0m for LF, [1m\\[0m for backslash) or bytes with values larger than 0x80 (e.g. octal [1m\302\265[0m for "micro"[m
           in UTF-8). If this variable is set to false, bytes higher than 0x80 are not considered "unusual" any more.[m
           Double-quotes, backslash and control characters are always escaped regardless of the setting of this variable. A[m
           simple space character is not considered "unusual". Many commands can output pathnames completely verbatim using the[m
           [1m-z[0m option. The default value is true.[m
[m
       core.eol[m
           Sets the line ending type to use in the working directory for files that are marked as text (either by having the [1mtext[0m[m
           attribute set, or by having [1mtext=auto[0m and Git auto-detecting the contents as text). Alternatives are [4mlf[24m, [4mcrlf[24m and[m
           [4mnative[24m, which uses the platform‚Äôs native line ending. The default value is [1mnative[0m. See [1mgitattributes[0m(5) for more[m
           information on end-of-line conversion. Note that this value is ignored if [1mcore.autocrlf[0m is set to [1mtrue[0m or [1minput[0m.[m
[m
       core.safecrlf[m
           If true, makes Git check if converting [1mCRLF[0m is reversible when end-of-line conversion is active. Git will verify if a[m
           command modifies a file in the work tree either directly or indirectly. For example, committing a file followed by[m
           checking out the same file should yield the original file in the work tree. If this is not the case for the current[m
           setting of [1mcore.autocrlf[0m, Git will reject the file. The variable can be set to "warn", in which case Git will only[m
[7m Manual page git-config(1) line 797 (press h for help or q to quit)[27m[K[K           warn about an irreversible conversion but continue the operation.[m
[m
           CRLF conversion bears a slight chance of corrupting data. When it is enabled, Git will convert CRLF to LF during[m
           commit and LF to CRLF during checkout. A file that contains a mixture of LF and CRLF before the commit cannot be[m
           recreated by Git. For text files this is the right thing to do: it corrects line endings such that we have only LF[m
           line endings in the repository. But for binary files that are accidentally classified as text the conversion can[m
           corrupt data.[m
[m
           If you recognize such corruption early you can easily fix it by setting the conversion type explicitly in[m
           .gitattributes. Right after committing you still have the original file in your work tree and this file is not yet[m
           corrupted. You can explicitly tell Git that this file is binary and Git will handle the file appropriately.[m
[m
           Unfortunately, the desired effect of cleaning up text files with mixed line endings and the undesired effect of[m
           corrupting binary files cannot be distinguished. In both cases CRLFs are removed in an irreversible way. For text[m
           files this is the right thing to do because CRLFs are line endings, while for binary files converting CRLFs corrupts[m
           data.[m
[m
           Note, this safety check does not mean that a checkout will generate a file identical to the original file for a[m
           different setting of [1mcore.eol[0m and [1mcore.autocrlf[0m, but only for the current one. For example, a text file with [1mLF[0m would[m
           be accepted with [1mcore.eol=lf[0m and could later be checked out with [1mcore.eol=crlf[0m, in which case the resulting file would[m
           contain [1mCRLF[0m, although the original file contained [1mLF[0m. However, in both work trees the line endings would be[m
           consistent, that is either all [1mLF[0m or all [1mCRLF[0m, but never mixed. A file with mixed line endings would be reported by[m
           the [1mcore.safecrlf[0m mechanism.[m
[m
       core.autocrlf[m
           Setting this variable to "true" is the same as setting the [1mtext[0m attribute to "auto" on all files and core.eol to[m
           "crlf". Set to true if you want to have [1mCRLF[0m line endings in your working directory and the repository has LF line[m
           endings. This variable can be set to [4minput[24m, in which case no output conversion is performed.[m
[m
       core.checkRoundtripEncoding[m
           A comma and/or whitespace separated list of encodings that Git performs UTF-8 round trip checks on if they are used in[m
           an [1mworking-tree-encoding[0m attribute (see [1mgitattributes[0m(5)). The default value is [1mSHIFT-JIS[0m.[m
[7m Manual page git-config(1) line 829 (press h for help or q to quit)[27m[K[K[m
       core.symlinks[m
           If false, symbolic links are checked out as small plain files that contain the link text.  [1mgit-update-index[0m(1) and[m
           [1mgit-add[0m(1) will not change the recorded type to regular file. Useful on filesystems like FAT that do not support[m
           symbolic links.[m
[m
           The default is true, except [1mgit-clone[0m(1) or [1mgit-init[0m(1) will probe and set core.symlinks false if appropriate when the[m
           repository is created.[m
[m
       core.gitProxy[m
           A "proxy command" to execute (as [4mcommand[24m [4mhost[24m [4mport[24m) instead of establishing direct connection to the remote server[m
           when using the Git protocol for fetching. If the variable value is in the "COMMAND for DOMAIN" format, the command is[m
           applied only on hostnames ending with the specified domain string. This variable may be set multiple times and is[m
           matched in the given order; the first match wins.[m
[m
           Can be overridden by the [1mGIT_PROXY_COMMAND[0m environment variable (which always applies universally, without the special[m
           "for" handling).[m
[m
           The special string [1mnone[0m can be used as the proxy command to specify that no proxy be used for a given domain pattern.[m
           This is useful for excluding servers inside a firewall from proxy use, while defaulting to a common proxy for external[m
           domains.[m
[m
       core.sshCommand[m
           If this variable is set, [1mgit[0m [1mfetch[0m and [1mgit[0m [1mpush[0m will use the specified command instead of [1mssh[0m when they need to[m
           connect to a remote system. The command is in the same form as the [1mGIT_SSH_COMMAND[0m environment variable and is[m
           overridden when the environment variable is set.[m
[m
       core.ignoreStat[m
           If true, Git will avoid using lstat() calls to detect if files have changed by setting the "assume-unchanged" bit for[m
           those tracked files which it has updated identically in both the index and working tree.[m
[m
           When files are modified outside of Git, the user will need to stage the modified files explicitly (e.g. see [4mExamples[24m[m
[7m Manual page git-config(1) line 861 (press h for help or q to quit)[27m[K[K           section in [1mgit-update-index[0m(1)). Git will not normally detect changes to those files.[m
[m
           This is useful on systems where lstat() calls are very slow, such as CIFS/Microsoft Windows.[m
[m
           False by default.[m
[m
       core.preferSymlinkRefs[m
           Instead of the default "symref" format for HEAD and other symbolic reference files, use symbolic links. This is[m
           sometimes needed to work with old scripts that expect HEAD to be a symbolic link.[m
[m
       core.alternateRefsCommand[m
           When advertising tips of available history from an alternate, use the shell to execute the specified command instead[m
           of [1mgit-for-each-ref[0m(1). The first argument is the absolute path of the alternate. Output must contain one hex object[m
           id per line (i.e., the same as produced by [1mgit[0m [1mfor-each-ref[0m [1m--format='%(objectname)'[0m).[m
[m
           Note that you cannot generally put [1mgit[0m [1mfor-each-ref[0m directly into the config value, as it does not take a repository[m
           path as an argument (but you can wrap the command above in a shell script).[m
[m
       core.alternateRefsPrefixes[m
           When listing references from an alternate, list only references that begin with the given prefix. Prefixes match as if[m
           they were given as arguments to [1mgit-for-each-ref[0m(1). To list multiple prefixes, separate them with whitespace. If[m
           [1mcore.alternateRefsCommand[0m is set, setting [1mcore.alternateRefsPrefixes[0m has no effect.[m
[m
       core.bare[m
           If true this repository is assumed to be [4mbare[24m and has no working directory associated with it. If this is the case a[m
           number of commands that require a working directory will be disabled, such as [1mgit-add[0m(1) or [1mgit-merge[0m(1).[m
[m
           This setting is automatically guessed by [1mgit-clone[0m(1) or [1mgit-init[0m(1) when the repository was created. By default a[m
           repository that ends in "/.git" is assumed to be not bare (bare = false), while all other repositories are assumed to[m
           be bare (bare = true).[m
[m
       core.worktree[m
[7m Manual page git-config(1) line 893 (press h for help or q to quit)[27m[K[K           Set the path to the root of the working tree. If [1mGIT_COMMON_DIR[0m environment variable is set, core.worktree is ignored[m
           and not used for determining the root of working tree. This can be overridden by the [1mGIT_WORK_TREE[0m environment[m
           variable and the [1m--work-tree[0m command-line option. The value can be an absolute path or relative to the path to the[m
           .git directory, which is either specified by --git-dir or GIT_DIR, or automatically discovered. If --git-dir or[m
           GIT_DIR is specified but none of --work-tree, GIT_WORK_TREE and core.worktree is specified, the current working[m
           directory is regarded as the top level of your working tree.[m
[m
           Note that this variable is honored even when set in a configuration file in a ".git" subdirectory of a directory and[m
           its value differs from the latter directory (e.g. "/path/to/.git/config" has core.worktree set to "/different/path"),[m
           which is most likely a misconfiguration. Running Git commands in the "/path/to" directory will still use[m
           "/different/path" as the root of the work tree and can cause confusion unless you know what you are doing (e.g. you[m
           are creating a read-only snapshot of the same index to a location different from the repository‚Äôs usual working tree).[m
[m
       core.logAllRefUpdates[m
           Enable the reflog. Updates to a ref <ref> is logged to the file "[1m$GIT_DIR/logs/<ref>[0m", by appending the new and old[m
           SHA-1, the date/time and the reason of the update, but only when the file exists. If this configuration variable is[m
           set to [1mtrue[0m, missing "[1m$GIT_DIR/logs/<ref>[0m" file is automatically created for branch heads (i.e. under [1mrefs/heads/[0m),[m
           remote refs (i.e. under [1mrefs/remotes/[0m), note refs (i.e. under [1mrefs/notes/[0m), and the symbolic ref [1mHEAD[0m. If it is set to[m
           [1malways[0m, then a missing reflog is automatically created for any ref under [1mrefs/[0m.[m
[m
           This information can be used to determine what commit was the tip of a branch "2 days ago".[m
[m
           This value is true by default in a repository that has a working directory associated with it, and false by default in[m
           a bare repository.[m
[m
       core.repositoryFormatVersion[m
           Internal variable identifying the repository format and layout version.[m
[m
       core.sharedRepository[m
           When [4mgroup[24m (or [4mtrue[24m), the repository is made shareable between several users in a group (making sure all the files and[m
           objects are group-writable). When [4mall[24m (or [4mworld[24m or [4meverybody[24m), the repository will be readable by all users,[m
           additionally to being group-shareable. When [4mumask[24m (or [4mfalse[24m), Git will use permissions reported by umask(2). When[m
[7m Manual page git-config(1) line 925 (press h for help or q to quit)[27m[K[K           [4m0xxx[24m, where [4m0xxx[24m is an octal number, files in the repository will have this mode value.  [4m0xxx[24m will override user‚Äôs[m
           umask value (whereas the other options will only override requested parts of the user‚Äôs umask value). Examples: [4m0660[24m[m
           will make the repo read/write-able for the owner and group, but inaccessible to others (equivalent to [4mgroup[24m unless[m
           umask is e.g.  [4m0022[24m).  [4m0640[24m is a repository that is group-readable but not group-writable. See [1mgit-init[0m(1). False by[m
           default.[m
[m
       core.warnAmbiguousRefs[m
           If true, Git will warn you if the ref name you passed it is ambiguous and might match multiple refs in the repository.[m
           True by default.[m
[m
       core.compression[m
           An integer -1..9, indicating a default compression level. -1 is the zlib default. 0 means no compression, and 1..9 are[m
           various speed/size tradeoffs, 9 being slowest. If set, this provides a default to other compression variables, such as[m
           [1mcore.looseCompression[0m and [1mpack.compression[0m.[m
[m
       core.looseCompression[m
           An integer -1..9, indicating the compression level for objects that are not in a pack file. -1 is the zlib default. 0[m
           means no compression, and 1..9 are various speed/size tradeoffs, 9 being slowest. If not set, defaults to[m
           core.compression. If that is not set, defaults to 1 (best speed).[m
[m
       core.packedGitWindowSize[m
           Number of bytes of a pack file to map into memory in a single mapping operation. Larger window sizes may allow your[m
           system to process a smaller number of large pack files more quickly. Smaller window sizes will negatively affect[m
           performance due to increased calls to the operating system‚Äôs memory manager, but may improve performance when[m
           accessing a large number of large pack files.[m
[m
           Default is 1 MiB if NO_MMAP was set at compile time, otherwise 32 MiB on 32 bit platforms and 1 GiB on 64 bit[m
           platforms. This should be reasonable for all users/operating systems. You probably do not need to adjust this value.[m
[m
           Common unit suffixes of [4mk[24m, [4mm[24m, or [4mg[24m are supported.[m
[m
       core.packedGitLimit[m
[7m Manual page git-config(1) line 957 (press h for help or q to quit)[27m[K[K           Maximum number of bytes to map simultaneously into memory from pack files. If Git needs to access more than this many[m
           bytes at once to complete an operation it will unmap existing regions to reclaim virtual address space within the[m
           process.[m
[m
           Default is 256 MiB on 32 bit platforms and 32 TiB (effectively unlimited) on 64 bit platforms. This should be[m
           reasonable for all users/operating systems, except on the largest projects. You probably do not need to adjust this[m
           value.[m
[m
           Common unit suffixes of [4mk[24m, [4mm[24m, or [4mg[24m are supported.[m
[m
       core.deltaBaseCacheLimit[m
           Maximum number of bytes per thread to reserve for caching base objects that may be referenced by multiple deltified[m
           objects. By storing the entire decompressed base objects in a cache Git is able to avoid unpacking and decompressing[m
           frequently used base objects multiple times.[m
[m
           Default is 96 MiB on all platforms. This should be reasonable for all users/operating systems, except on the largest[m
           projects. You probably do not need to adjust this value.[m
[m
           Common unit suffixes of [4mk[24m, [4mm[24m, or [4mg[24m are supported.[m
[m
       core.bigFileThreshold[m
           Files larger than this size are stored deflated, without attempting delta compression. Storing large files without[m
           delta compression avoids excessive memory usage, at the slight expense of increased disk usage. Additionally files[m
           larger than this size are always treated as binary.[m
[m
           Default is 512 MiB on all platforms. This should be reasonable for most projects as source code and other text files[m
           can still be delta compressed, but larger binary media files won‚Äôt be.[m
[m
           Common unit suffixes of [4mk[24m, [4mm[24m, or [4mg[24m are supported.[m
[m
       core.excludesFile[m
           Specifies the pathname to the file that contains patterns to describe paths that are not meant to be tracked, in[m
[7m Manual page git-config(1) line 989 (press h for help or q to quit)[27m[K[K           addition to [1m.gitignore[0m (per-directory) and [1m.git/info/exclude[0m. Defaults to [1m$XDG_CONFIG_HOME/git/ignore[0m. If[m
           [1m$XDG_CONFIG_HOME[0m is either not set or empty, [1m$HOME/.config/git/ignore[0m is used instead. See [1mgitignore[0m(5).[m
[m
       core.askPass[m
           Some commands (e.g. svn and http interfaces) that interactively ask for a password can be told to use an external[m
           program given via the value of this variable. Can be overridden by the [1mGIT_ASKPASS[0m environment variable. If not set,[m
           fall back to the value of the [1mSSH_ASKPASS[0m environment variable or, failing that, a simple password prompt. The[m
           external program shall be given a suitable prompt as command-line argument and write the password on its STDOUT.[m
[m
       core.attributesFile[m
           In addition to [1m.gitattributes[0m (per-directory) and [1m.git/info/attributes[0m, Git looks into this file for attributes (see[m
           [1mgitattributes[0m(5)). Path expansions are made the same way as for [1mcore.excludesFile[0m. Its default value is[m
           [1m$XDG_CONFIG_HOME/git/attributes[0m. If [1m$XDG_CONFIG_HOME[0m is either not set or empty, [1m$HOME/.config/git/attributes[0m is used[m
           instead.[m
[m
       core.hooksPath[m
           By default Git will look for your hooks in the [1m$GIT_DIR/hooks[0m directory. Set this to different path, e.g.[m
           [1m/etc/git/hooks[0m, and Git will try to find your hooks in that directory, e.g.  [1m/etc/git/hooks/pre-receive[0m instead of in[m
           [1m$GIT_DIR/hooks/pre-receive[0m.[m
[m
           The path can be either absolute or relative. A relative path is taken as relative to the directory where the hooks are[m
           run (see the "DESCRIPTION" section of [1mgithooks[0m(5)).[m
[m
           This configuration variable is useful in cases where you‚Äôd like to centrally configure your Git hooks instead of[m
           configuring them on a per-repository basis, or as a more flexible and centralized alternative to having an[m
           [1minit.templateDir[0m where you‚Äôve changed default hooks.[m
[m
       core.editor[m
           Commands such as [1mcommit[0m and [1mtag[0m that let you edit messages by launching an editor use the value of this variable when[m
           it is set, and the environment variable [1mGIT_EDITOR[0m is not set. See [1mgit-var[0m(1).[m
[m
       core.commentChar[m
[7m Manual page git-config(1) line 1021 (press h for help or q to quit)[27m[K[K           Commands such as [1mcommit[0m and [1mtag[0m that let you edit messages consider a line that begins with this character commented,[m
           and removes them after the editor returns (default [4m#[24m).[m
[m
           If set to "auto", [1mgit-commit[0m would select a character that is not the beginning character of any line in existing[m
           commit messages.[m
[m
       core.filesRefLockTimeout[m
           The length of time, in milliseconds, to retry when trying to lock an individual reference. Value 0 means not to retry[m
           at all; -1 means to try indefinitely. Default is 100 (i.e., retry for 100ms).[m
[m
       core.packedRefsTimeout[m
           The length of time, in milliseconds, to retry when trying to lock the [1mpacked-refs[0m file. Value 0 means not to retry at[m
           all; -1 means to try indefinitely. Default is 1000 (i.e., retry for 1 second).[m
[m
       core.pager[m
           Text viewer for use by Git commands (e.g., [4mless[24m). The value is meant to be interpreted by the shell. The order of[m
           preference is the [1m$GIT_PAGER[0m environment variable, then [1mcore.pager[0m configuration, then [1m$PAGER[0m, and then the default[m
           chosen at compile time (usually [4mless[24m).[m
[m
           When the [1mLESS[0m environment variable is unset, Git sets it to [1mFRX[0m (if [1mLESS[0m environment variable is set, Git does not[m
           change it at all). If you want to selectively override Git‚Äôs default setting for [1mLESS[0m, you can set [1mcore.pager[0m to e.g.[m
           [1mless[0m [1m-S[0m. This will be passed to the shell by Git, which will translate the final command to [1mLESS=FRX[0m [1mless[0m [1m-S[0m. The[m
           environment does not set the [1mS[0m option but the command line does, instructing less to truncate long lines. Similarly,[m
           setting [1mcore.pager[0m to [1mless[0m [1m-+F[0m will deactivate the [1mF[0m option specified by the environment from the command-line,[m
           deactivating the "quit if one screen" behavior of [1mless[0m. One can specifically activate some flags for particular[m
           commands: for example, setting [1mpager.blame[0m to [1mless[0m [1m-S[0m enables line truncation only for [1mgit[0m [1mblame[0m.[m
[m
           Likewise, when the [1mLV[0m environment variable is unset, Git sets it to [1m-c[0m. You can override this setting by exporting [1mLV[0m[m
           with another value or setting [1mcore.pager[0m to [1mlv[0m [1m+c[0m.[m
[m
       core.whitespace[m
           A comma separated list of common whitespace problems to notice.  [4mgit[24m [4mdiff[24m will use [1mcolor.diff.whitespace[0m to highlight[m
[7m Manual page git-config(1) line 1053 (press h for help or q to quit)[27m[K[K           them, and [4mgit[24m [4mapply[24m [4m--whitespace=error[24m will consider them as errors. You can prefix [1m-[0m to disable any of them (e.g.[m
           [1m-trailing-space[0m):[m
[m
           ‚Ä¢   [1mblank-at-eol[0m treats trailing whitespaces at the end of the line as an error (enabled by default).[m
[m
           ‚Ä¢   [1mspace-before-tab[0m treats a space character that appears immediately before a tab character in the initial indent[m
               part of the line as an error (enabled by default).[m
[m
           ‚Ä¢   [1mindent-with-non-tab[0m treats a line that is indented with space characters instead of the equivalent tabs as an[m
               error (not enabled by default).[m
[m
           ‚Ä¢   [1mtab-in-indent[0m treats a tab character in the initial indent part of the line as an error (not enabled by default).[m
[m
           ‚Ä¢   [1mblank-at-eof[0m treats blank lines added at the end of file as an error (enabled by default).[m
[m
           ‚Ä¢   [1mtrailing-space[0m is a short-hand to cover both [1mblank-at-eol[0m and [1mblank-at-eof[0m.[m
[m
           ‚Ä¢   [1mcr-at-eol[0m treats a carriage-return at the end of line as part of the line terminator, i.e. with it, [1mtrailing-space[0m[m
               does not trigger if the character before such a carriage-return is not a whitespace (not enabled by default).[m
[m
           ‚Ä¢   [1mtabwidth=<n>[0m tells how many character positions a tab occupies; this is relevant for [1mindent-with-non-tab[0m and when[m
               Git fixes [1mtab-in-indent[0m errors. The default tab width is 8. Allowed values are 1 to 63.[m
[m
       core.fsyncObjectFiles[m
           This boolean will enable [4mfsync()[24m when writing object files.[m
[m
           This is a total waste of time and effort on a filesystem that orders data writes properly, but can be useful for[m
           filesystems that do not use journalling (traditional UNIX filesystems) or that only journal metadata and not file[m
           contents (OS X‚Äôs HFS+, or Linux ext3 with "data=writeback").[m
[m
       core.preloadIndex[m
           Enable parallel index preload for operations like [4mgit[24m [4mdiff[24m[m
[7m Manual page git-config(1) line 1085 (press h for help or q to quit)[27m[K[K[m
           This can speed up operations like [4mgit[24m [4mdiff[24m and [4mgit[24m [4mstatus[24m especially on filesystems like NFS that have weak caching[m
           semantics and thus relatively high IO latencies. When enabled, Git will do the index comparison to the filesystem data[m
           in parallel, allowing overlapping IO‚Äôs. Defaults to true.[m
[m
       core.unsetenvvars[m
           Windows-only: comma-separated list of environment variables' names that need to be unset before spawning any other[m
           process. Defaults to [1mPERL5LIB[0m to account for the fact that Git for Windows insists on using its own Perl interpreter.[m
[m
       core.restrictinheritedhandles[m
           Windows-only: override whether spawned processes inherit only standard file handles ([1mstdin[0m, [1mstdout[0m and [1mstderr[0m) or all[m
           handles. Can be [1mauto[0m, [1mtrue[0m or [1mfalse[0m. Defaults to [1mauto[0m, which means [1mtrue[0m on Windows 7 and later, and [1mfalse[0m on older[m
           Windows versions.[m
[m
       core.createObject[m
           You can set this to [4mlink[24m, in which case a hardlink followed by a delete of the source are used to make sure that[m
           object creation will not overwrite existing objects.[m
[m
           On some file system/operating system combinations, this is unreliable. Set this config setting to [4mrename[24m there;[m
           However, This will remove the check that makes sure that existing object files will not get overwritten.[m
[m
       core.notesRef[m
           When showing commit messages, also show notes which are stored in the given ref. The ref must be fully qualified. If[m
           the given ref does not exist, it is not an error but means that no notes should be printed.[m
[m
           This setting defaults to "refs/notes/commits", and it can be overridden by the [1mGIT_NOTES_REF[0m environment variable. See[m
           [1mgit-notes[0m(1).[m
[m
       core.commitGraph[m
           If true, then git will read the commit-graph file (if it exists) to parse the graph structure of commits. Defaults to[m
           true. See [1mgit-commit-graph[0m(1) for more information.[m
[m
[7m Manual page git-config(1) line 1117 (press h for help or q to quit)[27m[K[K       core.useReplaceRefs[m
           If set to [1mfalse[0m, behave as if the [1m--no-replace-objects[0m option was given on the command line. See [1mgit[0m(1) and [1mgit-[0m[m
           [1mreplace[0m(1) for more information.[m
[m
       core.multiPackIndex[m
           Use the multi-pack-index file to track multiple packfiles using a single index. See [1mgit-multi-pack-index[0m(1) for more[m
           information. Defaults to true.[m
[m
       core.sparseCheckout[m
           Enable "sparse checkout" feature. See [1mgit-sparse-checkout[0m(1) for more information.[m
[m
       core.sparseCheckoutCone[m
           Enables the "cone mode" of the sparse checkout feature. When the sparse-checkout file contains a limited set of[m
           patterns, then this mode provides significant performance advantages. See [1mgit-sparse-checkout[0m(1) for more information.[m
[m
       core.abbrev[m
           Set the length object names are abbreviated to. If unspecified or set to "auto", an appropriate value is computed[m
           based on the approximate number of packed objects in your repository, which hopefully is enough for abbreviated object[m
           names to stay unique for some time. If set to "no", no abbreviation is made and the object names are shown in their[m
           full length. The minimum length is 4.[m
[m
       add.ignoreErrors, add.ignore-errors (deprecated)[m
           Tells [4mgit[24m [4madd[24m to continue adding files when some files cannot be added due to indexing errors. Equivalent to the[m
           [1m--ignore-errors[0m option of [1mgit-add[0m(1).  [1madd.ignore-errors[0m is deprecated, as it does not follow the usual naming[m
           convention for configuration variables.[m
[m
       add.interactive.useBuiltin[m
           [EXPERIMENTAL] Set to [1mtrue[0m to use the experimental built-in implementation of the interactive version of [1mgit-add[0m(1)[m
           instead of the Perl script version. Is [1mfalse[0m by default.[m
[m
       alias.*[m
           Command aliases for the [1mgit[0m(1) command wrapper - e.g. after defining [1malias.last[0m [1m=[0m [1mcat-file[0m [1mcommit[0m [1mHEAD[0m, the invocation[m
[7m Manual page git-config(1) line 1149 (press h for help or q to quit)[27m[K[K           [1mgit[0m [1mlast[0m is equivalent to [1mgit[0m [1mcat-file[0m [1mcommit[0m [1mHEAD[0m. To avoid confusion and troubles with script usage, aliases that[m
           hide existing Git commands are ignored. Arguments are split by spaces, the usual shell quoting and escaping is[m
           supported. A quote pair or a backslash can be used to quote them.[m
[m
           Note that the first word of an alias does not necessarily have to be a command. It can be a command-line option that[m
           will be passed into the invocation of [1mgit[0m. In particular, this is useful when used with [1m-c[0m to pass in one-time[m
           configurations or [1m-p[0m to force pagination. For example, [1mloud-rebase[0m [1m=[0m [1m-c[0m [1mcommit.verbose=true[0m [1mrebase[0m can be defined such[m
           that running [1mgit[0m [1mloud-rebase[0m would be equivalent to [1mgit[0m [1m-c[0m [1mcommit.verbose=true[0m [1mrebase[0m. Also, [1mps[0m [1m=[0m [1m-p[0m [1mstatus[0m would be a[m
           helpful alias since [1mgit[0m [1mps[0m would paginate the output of [1mgit[0m [1mstatus[0m where the original command does not.[m
[m
           If the alias expansion is prefixed with an exclamation point, it will be treated as a shell command. For example,[m
           defining [1malias.new[0m [1m=[0m [1m!gitk[0m [1m--all[0m [1m--not[0m [1mORIG_HEAD[0m, the invocation [1mgit[0m [1mnew[0m is equivalent to running the shell command[m
           [1mgitk[0m [1m--all[0m [1m--not[0m [1mORIG_HEAD[0m. Note that shell commands will be executed from the top-level directory of a repository,[m
           which may not necessarily be the current directory.  [1mGIT_PREFIX[0m is set as returned by running [1mgit[0m [1mrev-parse[0m[m
           [1m--show-prefix[0m from the original current directory. See [1mgit-rev-parse[0m(1).[m
[m
       am.keepcr[m
           If true, git-am will call git-mailsplit for patches in mbox format with parameter [1m--keep-cr[0m. In this case[m
           git-mailsplit will not remove [1m\r[0m from lines ending with [1m\r\n[0m. Can be overridden by giving [1m--no-keep-cr[0m from the[m
           command line. See [1mgit-am[0m(1), [1mgit-mailsplit[0m(1).[m
[m
       am.threeWay[m
           By default, [1mgit[0m [1mam[0m will fail if the patch does not apply cleanly. When set to true, this setting tells [1mgit[0m [1mam[0m to fall[m
           back on 3-way merge if the patch records the identity of blobs it is supposed to apply to and we have those blobs[m
           available locally (equivalent to giving the [1m--3way[0m option from the command line). Defaults to [1mfalse[0m. See [1mgit-am[0m(1).[m
[m
       apply.ignoreWhitespace[m
           When set to [4mchange[24m, tells [4mgit[24m [4mapply[24m to ignore changes in whitespace, in the same way as the [1m--ignore-space-change[0m[m
           option. When set to one of: no, none, never, false tells [4mgit[24m [4mapply[24m to respect all whitespace differences. See [1mgit-[0m[m
           [1mapply[0m(1).[m
[m
       apply.whitespace[m
[7m Manual page git-config(1) line 1181 (press h for help or q to quit)[27m[K[K           Tells [4mgit[24m [4mapply[24m how to handle whitespaces, in the same way as the [1m--whitespace[0m option. See [1mgit-apply[0m(1).[m
[m
       blame.blankBoundary[m
           Show blank commit object name for boundary commits in [1mgit-blame[0m(1). This option defaults to false.[m
[m
       blame.coloring[m
           This determines the coloring scheme to be applied to blame output. It can be [4mrepeatedLines[24m, [4mhighlightRecent[24m, or [4mnone[24m[m
           which is the default.[m
[m
       blame.date[m
           Specifies the format used to output dates in [1mgit-blame[0m(1). If unset the iso format is used. For supported values, see[m
           the discussion of the [1m--date[0m option at [1mgit-log[0m(1).[m
[m
       blame.showEmail[m
           Show the author email instead of author name in [1mgit-blame[0m(1). This option defaults to false.[m
[m
       blame.showRoot[m
           Do not treat root commits as boundaries in [1mgit-blame[0m(1). This option defaults to false.[m
[m
       blame.ignoreRevsFile[m
           Ignore revisions listed in the file, one unabbreviated object name per line, in [1mgit-blame[0m(1). Whitespace and comments[m
           beginning with [1m#[0m are ignored. This option may be repeated multiple times. Empty file names will reset the list of[m
           ignored revisions. This option will be handled before the command line option [1m--ignore-revs-file[0m.[m
[m
       blame.markUnblamableLines[m
           Mark lines that were changed by an ignored revision that we could not attribute to another commit with a [4m*[24m in the[m
           output of [1mgit-blame[0m(1).[m
[m
       blame.markIgnoredLines[m
           Mark lines that were changed by an ignored revision that we attributed to another commit with a [4m?[24m  in the output of[m
           [1mgit-blame[0m(1).[m
[m
[7m Manual page git-config(1) line 1213 (press h for help or q to quit)[27m[K[K       branch.autoSetupMerge[m
           Tells [4mgit[24m [4mbranch[24m, [4mgit[24m [4mswitch[24m and [4mgit[24m [4mcheckout[24m to set up new branches so that [1mgit-pull[0m(1) will appropriately merge from[m
           the starting point branch. Note that even if this option is not set, this behavior can be chosen per-branch using the[m
           [1m--track[0m and [1m--no-track[0m options. The valid settings are: [1mfalse[0m ‚Äî no automatic setup is done; [1mtrue[0m ‚Äî automatic setup is[m
           done when the starting point is a remote-tracking branch; [1malways[0m ‚Äî  automatic setup is done when the starting point is[m
           either a local branch or remote-tracking branch. This option defaults to true.[m
[m
       branch.autoSetupRebase[m
           When a new branch is created with [4mgit[24m [4mbranch[24m, [4mgit[24m [4mswitch[24m or [4mgit[24m [4mcheckout[24m that tracks another branch, this variable[m
           tells Git to set up pull to rebase instead of merge (see "branch.<name>.rebase"). When [1mnever[0m, rebase is never[m
           automatically set to true. When [1mlocal[0m, rebase is set to true for tracked branches of other local branches. When[m
           [1mremote[0m, rebase is set to true for tracked branches of remote-tracking branches. When [1malways[0m, rebase will be set to[m
           true for all tracking branches. See "branch.autoSetupMerge" for details on how to set up a branch to track another[m
           branch. This option defaults to never.[m
[m
       branch.sort[m
           This variable controls the sort ordering of branches when displayed by [1mgit-branch[0m(1). Without the "--sort=<value>"[m
           option provided, the value of this variable will be used as the default. See [1mgit-for-each-ref[0m(1) field names for valid[m
           values.[m
[m
       branch.<name>.remote[m
           When on branch <name>, it tells [4mgit[24m [4mfetch[24m and [4mgit[24m [4mpush[24m which remote to fetch from/push to. The remote to push to may[m
           be overridden with [1mremote.pushDefault[0m (for all branches). The remote to push to, for the current branch, may be[m
           further overridden by [1mbranch.<name>.pushRemote[0m. If no remote is configured, or if you are not on any branch, it[m
           defaults to [1morigin[0m for fetching and [1mremote.pushDefault[0m for pushing. Additionally, [1m.[0m  (a period) is the current local[m
           repository (a dot-repository), see [1mbranch.<name>.merge[0m's final note below.[m
[m
       branch.<name>.pushRemote[m
           When on branch <name>, it overrides [1mbranch.<name>.remote[0m for pushing. It also overrides [1mremote.pushDefault[0m for pushing[m
           from branch <name>. When you pull from one place (e.g. your upstream) and push to another place (e.g. your own[m
           publishing repository), you would want to set [1mremote.pushDefault[0m to specify the remote to push to for all branches,[m
           and use this option to override it for a specific branch.[m
[7m Manual page git-config(1) line 1245 (press h for help or q to quit)[27m[K[K[m
       branch.<name>.merge[m
           Defines, together with branch.<name>.remote, the upstream branch for the given branch. It tells [4mgit[24m [4mfetch[24m/[4mgit[24m [4mpull[24m/[4mgit[24m[m
           [4mrebase[24m which branch to merge and can also affect [4mgit[24m [4mpush[24m (see push.default). When in branch <name>, it tells [4mgit[24m[m
           [4mfetch[24m the default refspec to be marked for merging in FETCH_HEAD. The value is handled like the remote part of a[m
           refspec, and must match a ref which is fetched from the remote given by "branch.<name>.remote". The merge information[m
           is used by [4mgit[24m [4mpull[24m (which at first calls [4mgit[24m [4mfetch[24m) to lookup the default branch for merging. Without this option,[m
           [4mgit[24m [4mpull[24m defaults to merge the first refspec fetched. Specify multiple values to get an octopus merge. If you wish to[m
           setup [4mgit[24m [4mpull[24m so that it merges into <name> from another branch in the local repository, you can point[m
           branch.<name>.merge to the desired branch, and use the relative path setting [1m.[0m  (a period) for branch.<name>.remote.[m
[m
       branch.<name>.mergeOptions[m
           Sets default options for merging into branch <name>. The syntax and supported options are the same as those of [1mgit-[0m[m
           [1mmerge[0m(1), but option values containing whitespace characters are currently not supported.[m
[m
       branch.<name>.rebase[m
           When true, rebase the branch <name> on top of the fetched branch, instead of merging the default branch from the[m
           default remote when "git pull" is run. See "pull.rebase" for doing this in a non branch-specific manner.[m
[m
           When [1mmerges[0m (or just [4mm[24m), pass the [1m--rebase-merges[0m option to [4mgit[24m [4mrebase[24m so that the local merge commits are included in[m
           the rebase (see [1mgit-rebase[0m(1) for details).[m
[m
           When the value is [1minteractive[0m (or just [4mi[24m), the rebase is run in interactive mode.[m
[m
           [1mNOTE[0m: this is a possibly dangerous operation; do [1mnot[0m use it unless you understand the implications (see [1mgit-rebase[0m(1)[m
           for details).[m
[m
       branch.<name>.description[m
           Branch description, can be edited with [1mgit[0m [1mbranch[0m [1m--edit-description[0m. Branch description is automatically added in the[m
           format-patch cover letter or request-pull summary.[m
[m
       browser.<tool>.cmd[m
[7m Manual page git-config(1) line 1277 (press h for help or q to quit)[27m[K[K           Specify the command to invoke the specified browser. The specified command is evaluated in shell with the URLs passed[m
           as arguments. (See [1mgit-web--browse[0m(1).)[m
[m
       browser.<tool>.path[m
           Override the path for the given tool that may be used to browse HTML help (see [1m-w[0m option in [1mgit-help[0m(1)) or a working[m
           repository in gitweb (see [1mgit-instaweb[0m(1)).[m
[m
       checkout.defaultRemote[m
           When you run [1mgit[0m [1mcheckout[0m [1m<something>[0m or [1mgit[0m [1mswitch[0m [1m<something>[0m and only have one remote, it may implicitly fall back[m
           on checking out and tracking e.g.  [1morigin/<something>[0m. This stops working as soon as you have more than one remote[m
           with a [1m<something>[0m reference. This setting allows for setting the name of a preferred remote that should always win[m
           when it comes to disambiguation. The typical use-case is to set this to [1morigin[0m.[m
[m
           Currently this is used by [1mgit-switch[0m(1) and [1mgit-checkout[0m(1) when [1mgit[0m [1mcheckout[0m [1m<something>[0m or [1mgit[0m [1mswitch[0m [1m<something>[0m[m
           will checkout the [1m<something>[0m branch on another remote, and by [1mgit-worktree[0m(1) when [1mgit[0m [1mworktree[0m [1madd[0m refers to a[m
           remote branch. This setting might be used for other checkout-like commands or functionality in the future.[m
[m
       checkout.guess[m
           Provides the default value for the [1m--guess[0m or [1m--no-guess[0m option in [1mgit[0m [1mcheckout[0m and [1mgit[0m [1mswitch[0m. See [1mgit-switch[0m(1) and[m
           [1mgit-checkout[0m(1).[m
[m
       checkout.workers[m
           The number of parallel workers to use when updating the working tree. The default is one, i.e. sequential execution.[m
           If set to a value less than one, Git will use as many workers as the number of logical cores available. This setting[m
           and [1mcheckout.thresholdForParallelism[0m affect all commands that perform checkout. E.g. checkout, clone, reset,[m
           sparse-checkout, etc.[m
[m
           Note: parallel checkout usually delivers better performance for repositories located on SSDs or over NFS. For[m
           repositories on spinning disks and/or machines with a small number of cores, the default sequential checkout often[m
           performs better. The size and compression level of a repository might also influence how well the parallel version[m
           performs.[m
[m
[7m Manual page git-config(1) line 1309 (press h for help or q to quit)[27m[K[K       checkout.thresholdForParallelism[m
           When running parallel checkout with a small number of files, the cost of subprocess spawning and inter-process[m
           communication might outweigh the parallelization gains. This setting allows to define the minimum number of files for[m
           which parallel checkout should be attempted. The default is 100.[m
[m
       clean.requireForce[m
           A boolean to make git-clean do nothing unless given -f, -i or -n. Defaults to true.[m
[m
       clone.defaultRemoteName[m
           The name of the remote to create when cloning a repository. Defaults to [1morigin[0m, and can be overridden by passing the[m
           [1m--origin[0m command-line option to [1mgit-clone[0m(1).[m
[m
       clone.rejectShallow[m
           Reject to clone a repository if it is a shallow one, can be overridden by passing option [1m--reject-shallow[0m in command[m
           line. See [1mgit-clone[0m(1)[m
[m
       color.advice[m
           A boolean to enable/disable color in hints (e.g. when a push failed, see [1madvice.*[0m  for a list). May be set to [1malways[0m,[m
           [1mfalse[0m (or [1mnever[0m) or [1mauto[0m (or [1mtrue[0m), in which case colors are used only when the error output goes to a terminal. If[m
           unset, then the value of [1mcolor.ui[0m is used ([1mauto[0m by default).[m
[m
       color.advice.hint[m
           Use customized color for hints.[m
[m
       color.blame.highlightRecent[m
           Specify the line annotation color for [1mgit[0m [1mblame[0m [1m--color-by-age[0m depending upon the age of the line.[m
[m
           This setting should be set to a comma-separated list of color and date settings, starting and ending with a color, the[m
           dates should be set from oldest to newest. The metadata will be colored with the specified colors if the line was[m
           introduced before the given timestamp, overwriting older timestamped colors.[m
[m
           Instead of an absolute timestamp relative timestamps work as well, e.g.  [1m2.weeks.ago[0m is valid to address anything[m
[7m Manual page git-config(1) line 1341 (press h for help or q to quit)[27m[K[K           older than 2 weeks.[m
[m
           It defaults to [1mblue,12[0m [1mmonth[0m [1mago,white,1[0m [1mmonth[0m [1mago,red[0m, which colors everything older than one year blue, recent[m
           changes between one month and one year old are kept white, and lines introduced within the last month are colored red.[m
[m
       color.blame.repeatedLines[m
           Use the specified color to colorize line annotations for [1mgit[0m [1mblame[0m [1m--color-lines[0m, if they come from the same commit as[m
           the preceding line. Defaults to cyan.[m
[m
       color.branch[m
           A boolean to enable/disable color in the output of [1mgit-branch[0m(1). May be set to [1malways[0m, [1mfalse[0m (or [1mnever[0m) or [1mauto[0m (or[m
           [1mtrue[0m), in which case colors are used only when the output is to a terminal. If unset, then the value of [1mcolor.ui[0m is[m
           used ([1mauto[0m by default).[m
[m
       color.branch.<slot>[m
           Use customized color for branch coloration.  [1m<slot>[0m is one of [1mcurrent[0m (the current branch), [1mlocal[0m (a local branch),[m
           [1mremote[0m (a remote-tracking branch in refs/remotes/), [1mupstream[0m (upstream tracking branch), [1mplain[0m (other refs).[m
[m
       color.diff[m
           Whether to use ANSI escape sequences to add color to patches. If this is set to [1malways[0m, [1mgit-diff[0m(1), [1mgit-log[0m(1), and[m
           [1mgit-show[0m(1) will use color for all patches. If it is set to [1mtrue[0m or [1mauto[0m, those commands will only use color when[m
           output is to the terminal. If unset, then the value of [1mcolor.ui[0m is used ([1mauto[0m by default).[m
[m
           This does not affect [1mgit-format-patch[0m(1) or the [4mgit-diff-*[24m plumbing commands. Can be overridden on the command line[m
           with the [1m--color[=<when>][0m option.[m
[m
       color.diff.<slot>[m
           Use customized color for diff colorization.  [1m<slot>[0m specifies which part of the patch to use the specified color, and[m
           is one of [1mcontext[0m (context text - [1mplain[0m is a historical synonym), [1mmeta[0m (metainformation), [1mfrag[0m (hunk header), [4mfunc[24m[m
           (function in hunk header), [1mold[0m (removed lines), [1mnew[0m (added lines), [1mcommit[0m (commit headers), [1mwhitespace[0m (highlighting[m
           whitespace errors), [1moldMoved[0m (deleted lines), [1mnewMoved[0m (added lines), [1moldMovedDimmed[0m, [1moldMovedAlternative[0m,[m
           [1moldMovedAlternativeDimmed[0m, [1mnewMovedDimmed[0m, [1mnewMovedAlternative[0m [1mnewMovedAlternativeDimmed[0m (See the [4m<mode>[24m setting of[m
[7m Manual page git-config(1) line 1373 (press h for help or q to quit)[27m[K[K           [4m--color-moved[24m in [1mgit-diff[0m(1) for details), [1mcontextDimmed[0m, [1moldDimmed[0m, [1mnewDimmed[0m, [1mcontextBold[0m, [1moldBold[0m, and [1mnewBold[0m (see[m
           [1mgit-range-diff[0m(1) for details).[m
[m
       color.decorate.<slot>[m
           Use customized color for [4mgit[24m [4mlog[24m [4m--decorate[24m output.  [1m<slot>[0m is one of [1mbranch[0m, [1mremoteBranch[0m, [1mtag[0m, [1mstash[0m or [1mHEAD[0m for[m
           local branches, remote-tracking branches, tags, stash and HEAD, respectively and [1mgrafted[0m for grafted commits.[m
[m
       color.grep[m
           When set to [1malways[0m, always highlight matches. When [1mfalse[0m (or [1mnever[0m), never. When set to [1mtrue[0m or [1mauto[0m, use color only[m
           when the output is written to the terminal. If unset, then the value of [1mcolor.ui[0m is used ([1mauto[0m by default).[m
[m
       color.grep.<slot>[m
           Use customized color for grep colorization.  [1m<slot>[0m specifies which part of the line to use the specified color, and[m
           is one of[m
[m
           [1mcontext[0m[m
               non-matching text in context lines (when using [1m-A[0m, [1m-B[0m, or [1m-C[0m)[m
[m
           [1mfilename[0m[m
               filename prefix (when not using [1m-h[0m)[m
[m
           [1mfunction[0m[m
               function name lines (when using [1m-p[0m)[m
[m
           [1mlineNumber[0m[m
               line number prefix (when using [1m-n[0m)[m
[m
           [1mcolumn[0m[m
               column number prefix (when using [1m--column[0m)[m
[m
           [1mmatch[0m[m
               matching text (same as setting [1mmatchContext[0m and [1mmatchSelected[0m)[m
[7m Manual page git-config(1) line 1405 (press h for help or q to quit)[27m[K[K[m
           [1mmatchContext[0m[m
               matching text in context lines[m
[m
           [1mmatchSelected[0m[m
               matching text in selected lines. Also, used to customize the following [1mgit-log[0m(1) subcommands: [1m--grep[0m, [1m--author[0m[m
               and [1m--committer[0m.[m
[m
           [1mselected[0m[m
               non-matching text in selected lines. Also, used to customize the following [1mgit-log[0m(1) subcommands: [1m--grep[0m,[m
               [1m--author[0m and [1m--committer[0m.[m
[m
           [1mseparator[0m[m
               separators between fields on a line ([1m:[0m, [1m-[0m, and [1m=[0m) and between hunks ([1m--[0m)[m
[m
       color.interactive[m
           When set to [1malways[0m, always use colors for interactive prompts and displays (such as those used by "git-add[m
           --interactive" and "git-clean --interactive"). When false (or [1mnever[0m), never. When set to [1mtrue[0m or [1mauto[0m, use colors only[m
           when the output is to the terminal. If unset, then the value of [1mcolor.ui[0m is used ([1mauto[0m by default).[m
[m
       color.interactive.<slot>[m
           Use customized color for [4mgit[24m [4madd[24m [4m--interactive[24m and [4mgit[24m [4mclean[24m [4m--interactive[24m output.  [1m<slot>[0m may be [1mprompt[0m, [1mheader[0m, [1mhelp[0m[m
           or [1merror[0m, for four distinct types of normal output from interactive commands.[m
[m
       color.pager[m
           A boolean to specify whether [1mauto[0m color modes should colorize output going to the pager. Defaults to true; set this to[m
           false if your pager does not understand ANSI color codes.[m
[m
       color.push[m
           A boolean to enable/disable color in push errors. May be set to [1malways[0m, [1mfalse[0m (or [1mnever[0m) or [1mauto[0m (or [1mtrue[0m), in which[m
           case colors are used only when the error output goes to a terminal. If unset, then the value of [1mcolor.ui[0m is used ([1mauto[0m[m
           by default).[m
[7m Manual page git-config(1) line 1437 (press h for help or q to quit)[27m[K[K[m
       color.push.error[m
           Use customized color for push errors.[m
[m
       color.remote[m
           If set, keywords at the start of the line are highlighted. The keywords are "error", "warning", "hint" and "success",[m
           and are matched case-insensitively. May be set to [1malways[0m, [1mfalse[0m (or [1mnever[0m) or [1mauto[0m (or [1mtrue[0m). If unset, then the value[m
           of [1mcolor.ui[0m is used ([1mauto[0m by default).[m
[m
       color.remote.<slot>[m
           Use customized color for each remote keyword.  [1m<slot>[0m may be [1mhint[0m, [1mwarning[0m, [1msuccess[0m or [1merror[0m which match the[m
           corresponding keyword.[m
[m
       color.showBranch[m
           A boolean to enable/disable color in the output of [1mgit-show-branch[0m(1). May be set to [1malways[0m, [1mfalse[0m (or [1mnever[0m) or [1mauto[0m[m
           (or [1mtrue[0m), in which case colors are used only when the output is to a terminal. If unset, then the value of [1mcolor.ui[0m[m
           is used ([1mauto[0m by default).[m
[m
       color.status[m
           A boolean to enable/disable color in the output of [1mgit-status[0m(1). May be set to [1malways[0m, [1mfalse[0m (or [1mnever[0m) or [1mauto[0m (or[m
           [1mtrue[0m), in which case colors are used only when the output is to a terminal. If unset, then the value of [1mcolor.ui[0m is[m
           used ([1mauto[0m by default).[m
[m
       color.status.<slot>[m
           Use customized color for status colorization.  [1m<slot>[0m is one of [1mheader[0m (the header text of the status message), [1madded[0m[m
           or [1mupdated[0m (files which are added but not committed), [1mchanged[0m (files which are changed but not added in the index),[m
           [1muntracked[0m (files which are not tracked by Git), [1mbranch[0m (the current branch), [1mnobranch[0m (the color the [4mno[24m [4mbranch[24m warning[m
           is shown in, defaulting to red), [1mlocalBranch[0m or [1mremoteBranch[0m (the local and remote branch names, respectively, when[m
           branch and tracking information is displayed in the status short-format), or [1munmerged[0m (files which have unmerged[m
           changes).[m
[m
       color.transport[m
[7m Manual page git-config(1) line 1469 (press h for help or q to quit)[27m[K[K           A boolean to enable/disable color when pushes are rejected. May be set to [1malways[0m, [1mfalse[0m (or [1mnever[0m) or [1mauto[0m (or [1mtrue[0m),[m
           in which case colors are used only when the error output goes to a terminal. If unset, then the value of [1mcolor.ui[0m is[m
           used ([1mauto[0m by default).[m
[m
       color.transport.rejected[m
           Use customized color when a push was rejected.[m
[m
       color.ui[m
           This variable determines the default value for variables such as [1mcolor.diff[0m and [1mcolor.grep[0m that control the use of[m
           color per command family. Its scope will expand as more commands learn configuration to set a default for the [1m--color[0m[m
           option. Set it to [1mfalse[0m or [1mnever[0m if you prefer Git commands not to use color unless enabled explicitly with some other[m
           configuration or the [1m--color[0m option. Set it to [1malways[0m if you want all output not intended for machine consumption to[m
           use color, to [1mtrue[0m or [1mauto[0m (this is the default since Git 1.8.4) if you want such output to use color when written to[m
           the terminal.[m
[m
       column.ui[m
           Specify whether supported commands should output in columns. This variable consists of a list of tokens separated by[m
           spaces or commas:[m
[m
           These options control when the feature should be enabled (defaults to [4mnever[24m):[m
[m
           [1malways[0m[m
               always show in columns[m
[m
           [1mnever[0m[m
               never show in columns[m
[m
           [1mauto[0m[m
               show in columns if the output is to the terminal[m
[m
           These options control layout (defaults to [4mcolumn[24m). Setting any of these implies [4malways[24m if none of [4malways[24m, [4mnever[24m, or[m
           [4mauto[24m are specified.[m
[7m Manual page git-config(1) line 1501 (press h for help or q to quit)[27m[K[K[m
           [1mcolumn[0m[m
               fill columns before rows[m
[m
           [1mrow[0m[m
               fill rows before columns[m
[m
           [1mplain[0m[m
               show in one column[m
[m
           Finally, these options can be combined with a layout option (defaults to [4mnodense[24m):[m
[m
           [1mdense[0m[m
               make unequal size columns to utilize more space[m
[m
           [1mnodense[0m[m
               make equal size columns[m
[m
       column.branch[m
           Specify whether to output branch listing in [1mgit[0m [1mbranch[0m in columns. See [1mcolumn.ui[0m for details.[m
[m
       column.clean[m
           Specify the layout when list items in [1mgit[0m [1mclean[0m [1m-i[0m, which always shows files and directories in columns. See [1mcolumn.ui[0m[m
           for details.[m
[m
       column.status[m
           Specify whether to output untracked files in [1mgit[0m [1mstatus[0m in columns. See [1mcolumn.ui[0m for details.[m
[m
       column.tag[m
           Specify whether to output tag listing in [1mgit[0m [1mtag[0m in columns. See [1mcolumn.ui[0m for details.[m
[m
       commit.cleanup[m
[7m Manual page git-config(1) line 1533 (press h for help or q to quit)[27m[K[K           This setting overrides the default of the [1m--cleanup[0m option in [1mgit[0m [1mcommit[0m. See [1mgit-commit[0m(1) for details. Changing the[m
           default can be useful when you always want to keep lines that begin with comment character [1m#[0m in your log message, in[m
           which case you would do [1mgit[0m [1mconfig[0m [1mcommit.cleanup[0m [1mwhitespace[0m (note that you will have to remove the help lines that[m
           begin with [1m#[0m in the commit log template yourself, if you do this).[m
[m
       commit.gpgSign[m
           A boolean to specify whether all commits should be GPG signed. Use of this option when doing operations such as rebase[m
           can result in a large number of commits being signed. It may be convenient to use an agent to avoid typing your GPG[m
           passphrase several times.[m
[m
       commit.status[m
           A boolean to enable/disable inclusion of status information in the commit message template when using an editor to[m
           prepare the commit message. Defaults to true.[m
[m
       commit.template[m
           Specify the pathname of a file to use as the template for new commit messages.[m
[m
       commit.verbose[m
           A boolean or int to specify the level of verbose with [1mgit[0m [1mcommit[0m. See [1mgit-commit[0m(1).[m
[m
       commitGraph.generationVersion[m
           Specifies the type of generation number version to use when writing or reading the commit-graph file. If version 1 is[m
           specified, then the corrected commit dates will not be written or read. Defaults to 2.[m
[m
       commitGraph.maxNewFilters[m
           Specifies the default value for the [1m--max-new-filters[0m option of [1mgit[0m [1mcommit-graph[0m [1mwrite[0m (c.f., [1mgit-commit-graph[0m(1)).[m
[m
       commitGraph.readChangedPaths[m
           If true, then git will use the changed-path Bloom filters in the commit-graph file (if it exists, and they are[m
           present). Defaults to true. See [1mgit-commit-graph[0m(1) for more information.[m
[m
       credential.helper[m
[7m Manual page git-config(1) line 1565 (press h for help or q to quit)[27m[K[K           Specify an external helper to be called when a username or password credential is needed; the helper may consult[m
           external storage to avoid prompting the user for the credentials. This is normally the name of a credential helper[m
           with possible arguments, but may also be an absolute path with arguments or, if preceded by [1m![0m, shell commands.[m
[m
           Note that multiple helpers may be defined. See [1mgitcredentials[0m(7) for details and examples.[m
[m
       credential.useHttpPath[m
           When acquiring credentials, consider the "path" component of an http or https URL to be important. Defaults to false.[m
           See [1mgitcredentials[0m(7) for more information.[m
[m
       credential.username[m
           If no username is set for a network authentication, use this username by default. See credential.<context>.* below,[m
           and [1mgitcredentials[0m(7).[m
[m
       credential.<url>.*[m
           Any of the credential.* options above can be applied selectively to some credentials. For example[m
           "credential.https://example.com.username" would set the default username only for https connections to example.com.[m
           See [1mgitcredentials[0m(7) for details on how URLs are matched.[m
[m
       credentialCache.ignoreSIGHUP[m
           Tell git-credential-cache‚Äîdaemon to ignore SIGHUP, instead of quitting.[m
[m
       credentialStore.lockTimeoutMS[m
           The length of time, in milliseconds, for git-credential-store to retry when trying to lock the credentials file. Value[m
           0 means not to retry at all; -1 means to try indefinitely. Default is 1000 (i.e., retry for 1s).[m
[m
       completion.commands[m
           This is only used by git-completion.bash to add or remove commands from the list of completed commands. Normally only[m
           porcelain commands and a few select others are completed. You can add more commands, separated by space, in this[m
           variable. Prefixing the command with [4m-[24m will remove it from the existing list.[m
[m
       diff.autoRefreshIndex[m
[7m Manual page git-config(1) line 1597 (press h for help or q to quit)[27m[K[K           When using [4mgit[24m [4mdiff[24m to compare with work tree files, do not consider stat-only change as changed. Instead, silently[m
           run [1mgit[0m [1mupdate-index[0m [1m--refresh[0m to update the cached stat information for paths whose contents in the work tree match[m
           the contents in the index. This option defaults to true. Note that this affects only [4mgit[24m [4mdiff[24m Porcelain, and not lower[m
           level [4mdiff[24m commands such as [4mgit[24m [4mdiff-files[24m.[m
[m
       diff.dirstat[m
           A comma separated list of [1m--dirstat[0m parameters specifying the default behavior of the [1m--dirstat[0m option to [1mgit-diff[0m(1)[m
           and friends. The defaults can be overridden on the command line (using [1m--dirstat=<param1,param2,...>[0m). The fallback[m
           defaults (when not changed by [1mdiff.dirstat[0m) are [1mchanges,noncumulative,3[0m. The following parameters are available:[m
[m
           [1mchanges[0m[m
               Compute the dirstat numbers by counting the lines that have been removed from the source, or added to the[m
               destination. This ignores the amount of pure code movements within a file. In other words, rearranging lines in a[m
               file is not counted as much as other changes. This is the default behavior when no parameter is given.[m
[m
           [1mlines[0m[m
               Compute the dirstat numbers by doing the regular line-based diff analysis, and summing the removed/added line[m
               counts. (For binary files, count 64-byte chunks instead, since binary files have no natural concept of lines).[m
               This is a more expensive [1m--dirstat[0m behavior than the [1mchanges[0m behavior, but it does count rearranged lines within a[m
               file as much as other changes. The resulting output is consistent with what you get from the other [1m--*stat[0m[m
               options.[m
[m
           [1mfiles[0m[m
               Compute the dirstat numbers by counting the number of files changed. Each changed file counts equally in the[m
               dirstat analysis. This is the computationally cheapest [1m--dirstat[0m behavior, since it does not have to look at the[m
               file contents at all.[m
[m
           [1mcumulative[0m[m
               Count changes in a child directory for the parent directory as well. Note that when using [1mcumulative[0m, the sum of[m
               the percentages reported may exceed 100%. The default (non-cumulative) behavior can be specified with the[m
               [1mnoncumulative[0m parameter.[m
[m
[7m Manual page git-config(1) line 1629 (press h for help or q to quit)[27m[K[K           <limit>[m
               An integer parameter specifies a cut-off percent (3% by default). Directories contributing less than this[m
               percentage of the changes are not shown in the output.[m
[m
           Example: The following will count changed files, while ignoring directories with less than 10% of the total amount of[m
           changed files, and accumulating child directory counts in the parent directories: [1mfiles,10,cumulative[0m.[m
[m
       diff.statGraphWidth[m
           Limit the width of the graph part in --stat output. If set, applies to all commands generating --stat output except[m
           format-patch.[m
[m
       diff.context[m
           Generate diffs with <n> lines of context instead of the default of 3. This value is overridden by the -U option.[m
[m
       diff.interHunkContext[m
           Show the context between diff hunks, up to the specified number of lines, thereby fusing the hunks that are close to[m
           each other. This value serves as the default for the [1m--inter-hunk-context[0m command line option.[m
[m
       diff.external[m
           If this config variable is set, diff generation is not performed using the internal diff machinery, but using the[m
           given command. Can be overridden with the ‚ÄòGIT_EXTERNAL_DIFF‚Äô environment variable. The command is called with[m
           parameters as described under "git Diffs" in [1mgit[0m(1). Note: if you want to use an external diff program only on a[m
           subset of your files, you might want to use [1mgitattributes[0m(5) instead.[m
[m
       diff.ignoreSubmodules[m
           Sets the default value of --ignore-submodules. Note that this affects only [4mgit[24m [4mdiff[24m Porcelain, and not lower level[m
           [4mdiff[24m commands such as [4mgit[24m [4mdiff-files[24m.  [4mgit[24m [4mcheckout[24m and [4mgit[24m [4mswitch[24m also honor this setting when reporting uncommitted[m
           changes. Setting it to [4mall[24m disables the submodule summary normally shown by [4mgit[24m [4mcommit[24m and [4mgit[24m [4mstatus[24m when[m
           [1mstatus.submoduleSummary[0m is set unless it is overridden by using the --ignore-submodules command-line option. The [4mgit[24m[m
           [4msubmodule[24m commands are not affected by this setting. By default this is set to untracked so that any untracked[m
           submodules are ignored.[m
[m
[7m Manual page git-config(1) line 1661 (press h for help or q to quit)[27m[K[K       diff.mnemonicPrefix[m
           If set, [4mgit[24m [4mdiff[24m uses a prefix pair that is different from the standard "a/" and "b/" depending on what is being[m
           compared. When this configuration is in effect, reverse diff output also swaps the order of the prefixes:[m
[m
           [1mgit[0m [1mdiff[0m[m
               compares the (i)ndex and the (w)ork tree;[m
[m
           [1mgit[0m [1mdiff[0m [1mHEAD[0m[m
               compares a (c)ommit and the (w)ork tree;[m
[m
           [1mgit[0m [1mdiff[0m [1m--cached[0m[m
               compares a (c)ommit and the (i)ndex;[m
[m
           [1mgit[0m [1mdiff[0m [1mHEAD:file1[0m [1mfile2[0m[m
               compares an (o)bject and a (w)ork tree entity;[m
[m
           [1mgit[0m [1mdiff[0m [1m--no-index[0m [1ma[0m [1mb[0m[m
               compares two non-git things (1) and (2).[m
[m
       diff.noprefix[m
           If set, [4mgit[24m [4mdiff[24m does not show any source or destination prefix.[m
[m
       diff.relative[m
           If set to [4mtrue[24m, [4mgit[24m [4mdiff[24m does not show changes outside of the directory and show pathnames relative to the current[m
           directory.[m
[m
       diff.orderFile[m
           File indicating how to order files within a diff. See the [4m-O[24m option to [1mgit-diff[0m(1) for details. If [1mdiff.orderFile[0m is a[m
           relative pathname, it is treated as relative to the top of the working tree.[m
[m
       diff.renameLimit[m
           The number of files to consider in the exhaustive portion of copy/rename detection; equivalent to the [4mgit[24m [4mdiff[24m option[m
[7m Manual page git-config(1) line 1693 (press h for help or q to quit)[27m[K[K           [1m-l[0m. If not set, the default value is currently 1000. This setting has no effect if rename detection is turned off.[m
[m
       diff.renames[m
           Whether and how Git detects renames. If set to "false", rename detection is disabled. If set to "true", basic rename[m
           detection is enabled. If set to "copies" or "copy", Git will detect copies, as well. Defaults to true. Note that this[m
           affects only [4mgit[24m [4mdiff[24m Porcelain like [1mgit-diff[0m(1) and [1mgit-log[0m(1), and not lower level commands such as [1mgit-diff-[0m[m
           [1mfiles[0m(1).[m
[m
       diff.suppressBlankEmpty[m
           A boolean to inhibit the standard behavior of printing a space before each empty output line. Defaults to false.[m
[m
       diff.submodule[m
           Specify the format in which differences in submodules are shown. The "short" format just shows the names of the[m
           commits at the beginning and end of the range. The "log" format lists the commits in the range like [1mgit-submodule[0m(1)[m
           [1msummary[0m does. The "diff" format shows an inline diff of the changed contents of the submodule. Defaults to "short".[m
[m
       diff.wordRegex[m
           A POSIX Extended Regular Expression used to determine what is a "word" when performing word-by-word difference[m
           calculations. Character sequences that match the regular expression are "words", all other characters are [1mignorable[0m[m
           whitespace.[m
[m
       diff.<driver>.command[m
           The custom diff driver command. See [1mgitattributes[0m(5) for details.[m
[m
       diff.<driver>.xfuncname[m
           The regular expression that the diff driver should use to recognize the hunk header. A built-in pattern may also be[m
           used. See [1mgitattributes[0m(5) for details.[m
[m
       diff.<driver>.binary[m
           Set this option to true to make the diff driver treat files as binary. See [1mgitattributes[0m(5) for details.[m
[m
       diff.<driver>.textconv[m
[7m Manual page git-config(1) line 1725 (press h for help or q to quit)[27m[K[K           The command that the diff driver should call to generate the text-converted version of a file. The result of the[m
           conversion is used to generate a human-readable diff. See [1mgitattributes[0m(5) for details.[m
[m
       diff.<driver>.wordRegex[m
           The regular expression that the diff driver should use to split words in a line. See [1mgitattributes[0m(5) for details.[m
[m
       diff.<driver>.cachetextconv[m
           Set this option to true to make the diff driver cache the text conversion outputs. See [1mgitattributes[0m(5) for details.[m
[m
       diff.tool[m
           Controls which diff tool is used by [1mgit-difftool[0m(1). This variable overrides the value configured in [1mmerge.tool[0m. The[m
           list below shows the valid built-in values. Any other value is treated as a custom diff tool and requires that a[m
           corresponding difftool.<tool>.cmd variable is defined.[m
[m
       diff.guitool[m
           Controls which diff tool is used by [1mgit-difftool[0m(1) when the -g/--gui flag is specified. This variable overrides the[m
           value configured in [1mmerge.guitool[0m. The list below shows the valid built-in values. Any other value is treated as a[m
           custom diff tool and requires that a corresponding difftool.<guitool>.cmd variable is defined.[m
[m
           ‚Ä¢   araxis[m
[m
           ‚Ä¢   bc[m
[m
           ‚Ä¢   bc3[m
[m
           ‚Ä¢   bc4[m
[m
           ‚Ä¢   codecompare[m
[m
           ‚Ä¢   deltawalker[m
[m
           ‚Ä¢   diffmerge[m
[7m Manual page git-config(1) line 1757 (press h for help or q to quit)[27m[K[K[m
           ‚Ä¢   diffuse[m
[m
           ‚Ä¢   ecmerge[m
[m
           ‚Ä¢   emerge[m
[m
           ‚Ä¢   examdiff[m
[m
           ‚Ä¢   guiffy[m
[m
           ‚Ä¢   gvimdiff[m
[m
           ‚Ä¢   gvimdiff1[m
[m
           ‚Ä¢   gvimdiff2[m
[m
           ‚Ä¢   gvimdiff3[m
[m
           ‚Ä¢   kdiff3[m
[m
           ‚Ä¢   kompare[m
[m
           ‚Ä¢   meld[m
[m
           ‚Ä¢   nvimdiff[m
[m
           ‚Ä¢   nvimdiff1[m
[m
           ‚Ä¢   nvimdiff2[m
[m
           ‚Ä¢   nvimdiff3[m
[7m Manual page git-config(1) line 1789 (press h for help or q to quit)[27m[K[K[m
           ‚Ä¢   opendiff[m
[m
           ‚Ä¢   p4merge[m
[m
           ‚Ä¢   smerge[m
[m
           ‚Ä¢   tkdiff[m
[m
           ‚Ä¢   vimdiff[m
[m
           ‚Ä¢   vimdiff1[m
[m
           ‚Ä¢   vimdiff2[m
[m
           ‚Ä¢   vimdiff3[m
[m
           ‚Ä¢   winmerge[m
[m
           ‚Ä¢   xxdiff[m
[m
       diff.indentHeuristic[m
           Set this option to [1mfalse[0m to disable the default heuristics that shift diff hunk boundaries to make patches easier to[m
           read.[m
[m
       diff.algorithm[m
           Choose a diff algorithm. The variants are as follows:[m
[m
           [1mdefault[0m, [1mmyers[0m[m
               The basic greedy diff algorithm. Currently, this is the default.[m
[m
           [1mminimal[0m[m
[7m Manual page git-config(1) line 1821 (press h for help or q to quit)[27m[K[K               Spend extra time to make sure the smallest possible diff is produced.[m
[m
           [1mpatience[0m[m
               Use "patience diff" algorithm when generating patches.[m
[m
           [1mhistogram[0m[m
               This algorithm extends the patience algorithm to "support low-occurrence common elements".[m
[m
       diff.wsErrorHighlight[m
           Highlight whitespace errors in the [1mcontext[0m, [1mold[0m or [1mnew[0m lines of the diff. Multiple values are separated by comma, [1mnone[0m[m
           resets previous values, [1mdefault[0m reset the list to [1mnew[0m and [1mall[0m is a shorthand for [1mold,new,context[0m. The whitespace[m
           errors are colored with [1mcolor.diff.whitespace[0m. The command line option [1m--ws-error-highlight=<kind>[0m overrides this[m
           setting.[m
[m
       diff.colorMoved[m
           If set to either a valid [1m<mode>[0m or a true value, moved lines in a diff are colored differently, for details of valid[m
           modes see [4m--color-moved[24m in [1mgit-diff[0m(1). If simply set to true the default color mode will be used. When set to false,[m
           moved lines are not colored.[m
[m
       diff.colorMovedWS[m
           When moved lines are colored using e.g. the [1mdiff.colorMoved[0m setting, this option controls the [1m<mode>[0m how spaces are[m
           treated for details of valid modes see [4m--color-moved-ws[24m in [1mgit-diff[0m(1).[m
[m
       difftool.<tool>.path[m
           Override the path for the given tool. This is useful in case your tool is not in the PATH.[m
[m
       difftool.<tool>.cmd[m
           Specify the command to invoke the specified diff tool. The specified command is evaluated in shell with the following[m
           variables available: [4mLOCAL[24m is set to the name of the temporary file containing the contents of the diff pre-image and[m
           [4mREMOTE[24m is set to the name of the temporary file containing the contents of the diff post-image.[m
[m
       difftool.prompt[m
[7m Manual page git-config(1) line 1853 (press h for help or q to quit)[27m[K[K           Prompt before each invocation of the diff tool.[m
[m
       extensions.objectFormat[m
           Specify the hash algorithm to use. The acceptable values are [1msha1[0m and [1msha256[0m. If not specified, [1msha1[0m is assumed. It is[m
           an error to specify this key unless [1mcore.repositoryFormatVersion[0m is 1.[m
[m
           Note that this setting should only be set by [1mgit-init[0m(1) or [1mgit-clone[0m(1). Trying to change it after initialization[m
           will not work and will produce hard-to-diagnose issues.[m
[m
       fastimport.unpackLimit[m
           If the number of objects imported by [1mgit-fast-import[0m(1) is below this limit, then the objects will be unpacked into[m
           loose object files. However if the number of imported objects equals or exceeds this limit then the pack will be[m
           stored as a pack. Storing the pack from a fast-import can make the import operation complete faster, especially on[m
           slow filesystems. If not set, the value of [1mtransfer.unpackLimit[0m is used instead.[m
[m
       feature.*[m
           The config settings that start with [1mfeature.[0m  modify the defaults of a group of other config settings. These groups[m
           are created by the Git developer community as recommended defaults and are subject to change. In particular, new[m
           config options may be added with different defaults.[m
[m
       feature.experimental[m
           Enable config options that are new to Git, and are being considered for future defaults. Config settings included here[m
           may be added or removed with each release, including minor version updates. These settings may have unintended[m
           interactions since they are so new. Please enable this setting if you are interested in providing feedback on[m
           experimental features. The new default values are:[m
[m
           ‚Ä¢   [1mfetch.negotiationAlgorithm=skipping[0m may improve fetch negotiation times by skipping more commits at a time,[m
               reducing the number of round trips.[m
[m
       feature.manyFiles[m
           Enable config options that optimize for repos with many files in the working directory. With many files, commands such[m
           as [1mgit[0m [1mstatus[0m and [1mgit[0m [1mcheckout[0m may be slow and these new defaults improve performance:[m
[7m Manual page git-config(1) line 1885 (press h for help or q to quit)[27m[K[K[m
           ‚Ä¢   [1mindex.version=4[0m enables path-prefix compression in the index.[m
[m
           ‚Ä¢   [1mcore.untrackedCache=true[0m enables the untracked cache. This setting assumes that mtime is working on your machine.[m
[m
       fetch.recurseSubmodules[m
           This option controls whether [1mgit[0m [1mfetch[0m (and the underlying fetch in [1mgit[0m [1mpull[0m) will recursively fetch into populated[m
           submodules. This option can be set either to a boolean value or to [4mon-demand[24m. Setting it to a boolean changes the[m
           behavior of fetch and pull to recurse unconditionally into submodules when set to true or to not recurse at all when[m
           set to false. When set to [4mon-demand[24m, fetch and pull will only recurse into a populated submodule when its superproject[m
           retrieves a commit that updates the submodule‚Äôs reference. Defaults to [4mon-demand[24m, or to the value of [4msubmodule.recurse[24m[m
           if set.[m
[m
       fetch.fsckObjects[m
           If it is set to true, git-fetch-pack will check all fetched objects. See [1mtransfer.fsckObjects[0m for what‚Äôs checked.[m
           Defaults to false. If not set, the value of [1mtransfer.fsckObjects[0m is used instead.[m
[m
       fetch.fsck.<msg-id>[m
           Acts like [1mfsck.<msg-id>[0m, but is used by [1mgit-fetch-pack[0m(1) instead of [1mgit-fsck[0m(1). See the [1mfsck.<msg-id>[0m documentation[m
           for details.[m
[m
       fetch.fsck.skipList[m
           Acts like [1mfsck.skipList[0m, but is used by [1mgit-fetch-pack[0m(1) instead of [1mgit-fsck[0m(1). See the [1mfsck.skipList[0m documentation[m
           for details.[m
[m
       fetch.unpackLimit[m
           If the number of objects fetched over the Git native transfer is below this limit, then the objects will be unpacked[m
           into loose object files. However if the number of received objects equals or exceeds this limit then the received pack[m
           will be stored as a pack, after adding any missing delta bases. Storing the pack from a push can make the push[m
           operation complete faster, especially on slow filesystems. If not set, the value of [1mtransfer.unpackLimit[0m is used[m
           instead.[m
[m
[7m Manual page git-config(1) line 1917 (press h for help or q to quit)[27m[K[K       fetch.prune[m
           If true, fetch will automatically behave as if the [1m--prune[0m option was given on the command line. See also[m
           [1mremote.<name>.prune[0m and the PRUNING section of [1mgit-fetch[0m(1).[m
[m
       fetch.pruneTags[m
           If true, fetch will automatically behave as if the [1mrefs/tags/*:refs/tags/*[0m refspec was provided when pruning, if not[m
           set already. This allows for setting both this option and [1mfetch.prune[0m to maintain a 1=1 mapping to upstream refs. See[m
           also [1mremote.<name>.pruneTags[0m and the PRUNING section of [1mgit-fetch[0m(1).[m
[m
       fetch.output[m
           Control how ref update status is printed. Valid values are [1mfull[0m and [1mcompact[0m. Default value is [1mfull[0m. See section OUTPUT[m
           in [1mgit-fetch[0m(1) for detail.[m
[m
       fetch.negotiationAlgorithm[m
           Control how information about the commits in the local repository is sent when negotiating the contents of the[m
           packfile to be sent by the server. Set to "skipping" to use an algorithm that skips commits in an effort to converge[m
           faster, but may result in a larger-than-necessary packfile; or set to "noop" to not send any information at all, which[m
           will almost certainly result in a larger-than-necessary packfile, but will skip the negotiation step. The default is[m
           "default" which instructs Git to use the default algorithm that never skips commits (unless the server has[m
           acknowledged it or one of its descendants). If [1mfeature.experimental[0m is enabled, then this setting defaults to[m
           "skipping". Unknown values will cause [4mgit[24m [4mfetch[24m to error out.[m
[m
           See also the [1m--negotiate-only[0m and [1m--negotiation-tip[0m options to [1mgit-fetch[0m(1).[m
[m
       fetch.showForcedUpdates[m
           Set to false to enable [1m--no-show-forced-updates[0m in [1mgit-fetch[0m(1) and [1mgit-pull[0m(1) commands. Defaults to true.[m
[m
       fetch.parallel[m
           Specifies the maximal number of fetch operations to be run in parallel at a time (submodules, or remotes when the[m
           [1m--multiple[0m option of [1mgit-fetch[0m(1) is in effect).[m
[m
           A value of 0 will give some reasonable default. If unset, it defaults to 1.[m
[7m Manual page git-config(1) line 1949 (press h for help or q to quit)[27m[K[K[m
           For submodules, this setting can be overridden using the [1msubmodule.fetchJobs[0m config setting.[m
[m
       fetch.writeCommitGraph[m
           Set to true to write a commit-graph after every [1mgit[0m [1mfetch[0m command that downloads a pack-file from a remote. Using the[m
           [1m--split[0m option, most executions will create a very small commit-graph file on top of the existing commit-graph[m
           file(s). Occasionally, these files will merge and the write may take longer. Having an updated commit-graph file helps[m
           performance of many Git commands, including [1mgit[0m [1mmerge-base[0m, [1mgit[0m [1mpush[0m [1m-f[0m, and [1mgit[0m [1mlog[0m [1m--graph[0m. Defaults to false.[m
[m
       format.attach[m
           Enable multipart/mixed attachments as the default for [4mformat-patch[24m. The value can also be a double quoted string which[m
           will enable attachments as the default and set the value as the boundary. See the --attach option in [1mgit-format-[0m[m
           [1mpatch[0m(1).[m
[m
       format.from[m
           Provides the default value for the [1m--from[0m option to format-patch. Accepts a boolean value, or a name and email[m
           address. If false, format-patch defaults to [1m--no-from[0m, using commit authors directly in the "From:" field of patch[m
           mails. If true, format-patch defaults to [1m--from[0m, using your committer identity in the "From:" field of patch mails and[m
           including a "From:" field in the body of the patch mail if different. If set to a non-boolean value, format-patch uses[m
           that value instead of your committer identity. Defaults to false.[m
[m
       format.numbered[m
           A boolean which can enable or disable sequence numbers in patch subjects. It defaults to "auto" which enables it only[m
           if there is more than one patch. It can be enabled or disabled for all messages by setting it to "true" or "false".[m
           See --numbered option in [1mgit-format-patch[0m(1).[m
[m
       format.headers[m
           Additional email headers to include in a patch to be submitted by mail. See [1mgit-format-patch[0m(1).[m
[m
       format.to, format.cc[m
           Additional recipients to include in a patch to be submitted by mail. See the --to and --cc options in [1mgit-format-[0m[m
           [1mpatch[0m(1).[m
[7m Manual page git-config(1) line 1981 (press h for help or q to quit)[27m[K[K[m
       format.subjectPrefix[m
           The default for format-patch is to output files with the [4m[PATCH][24m subject prefix. Use this variable to change that[m
           prefix.[m
[m
       format.coverFromDescription[m
           The default mode for format-patch to determine which parts of the cover letter will be populated using the branch‚Äôs[m
           description. See the [1m--cover-from-description[0m option in [1mgit-format-patch[0m(1).[m
[m
       format.signature[m
           The default for format-patch is to output a signature containing the Git version number. Use this variable to change[m
           that default. Set this variable to the empty string ("") to suppress signature generation.[m
[m
       format.signatureFile[m
           Works just like format.signature except the contents of the file specified by this variable will be used as the[m
           signature.[m
[m
       format.suffix[m
           The default for format-patch is to output files with the suffix [1m.patch[0m. Use this variable to change that suffix (make[m
           sure to include the dot if you want it).[m
[m
       format.encodeEmailHeaders[m
           Encode email headers that have non-ASCII characters with "Q-encoding" (described in RFC 2047) for email transmission.[m
           Defaults to true.[m
[m
       format.pretty[m
           The default pretty format for log/show/whatchanged command, See [1mgit-log[0m(1), [1mgit-show[0m(1), [1mgit-whatchanged[0m(1).[m
[m
       format.thread[m
           The default threading style for [4mgit[24m [4mformat-patch[24m. Can be a boolean value, or [1mshallow[0m or [1mdeep[0m.  [1mshallow[0m threading makes[m
           every mail a reply to the head of the series, where the head is chosen from the cover letter, the [1m--in-reply-to[0m, and[m
           the first patch mail, in this order.  [1mdeep[0m threading makes every mail a reply to the previous one. A true boolean[m
[7m Manual page git-config(1) line 2013 (press h for help or q to quit)[27m[K[K           value is the same as [1mshallow[0m, and a false value disables threading.[m
[m
       format.signOff[m
           A boolean value which lets you enable the [1m-s/--signoff[0m option of format-patch by default.  [1mNote:[0m Adding the[m
           [1mSigned-off-by[0m trailer to a patch should be a conscious act and means that you certify you have the rights to submit[m
           this work under the same open source license. Please see the [4mSubmittingPatches[24m document for further discussion.[m
[m
       format.coverLetter[m
           A boolean that controls whether to generate a cover-letter when format-patch is invoked, but in addition can be set to[m
           "auto", to generate a cover-letter only when there‚Äôs more than one patch. Default is false.[m
[m
       format.outputDirectory[m
           Set a custom directory to store the resulting files instead of the current working directory. All directory components[m
           will be created.[m
[m
       format.filenameMaxLength[m
           The maximum length of the output filenames generated by the [1mformat-patch[0m command; defaults to 64. Can be overridden by[m
           the [1m--filename-max-length=<n>[0m command line option.[m
[m
       format.useAutoBase[m
           A boolean value which lets you enable the [1m--base=auto[0m option of format-patch by default. Can also be set to "whenAble"[m
           to allow enabling [1m--base=auto[0m if a suitable base is available, but to skip adding base info otherwise without the[m
           format dying.[m
[m
       format.notes[m
           Provides the default value for the [1m--notes[0m option to format-patch. Accepts a boolean value, or a ref which specifies[m
           where to get notes. If false, format-patch defaults to [1m--no-notes[0m. If true, format-patch defaults to [1m--notes[0m. If set[m
           to a non-boolean value, format-patch defaults to [1m--notes=<ref>[0m, where [1mref[0m is the non-boolean value. Defaults to false.[m
[m
           If one wishes to use the ref [1mref/notes/true[0m, please use that literal instead.[m
[m
           This configuration can be specified multiple times in order to allow multiple notes refs to be included. In that case,[m
[7m Manual page git-config(1) line 2045 (press h for help or q to quit)[27m[K[K           it will behave similarly to multiple [1m--[no-]notes[=][0m options passed in. That is, a value of [1mtrue[0m will show the default[m
           notes, a value of [1m<ref>[0m will also show notes from that notes ref and a value of [1mfalse[0m will negate previous[m
           configurations and not show notes.[m
[m
           For example,[m
[m
               [format][m
                       notes = true[m
                       notes = foo[m
                       notes = false[m
                       notes = bar[m
[m
           will only show notes from [1mrefs/notes/bar[0m.[m
[m
       filter.<driver>.clean[m
           The command which is used to convert the content of a worktree file to a blob upon checkin. See [1mgitattributes[0m(5) for[m
           details.[m
[m
       filter.<driver>.smudge[m
           The command which is used to convert the content of a blob object to a worktree file upon checkout. See[m
           [1mgitattributes[0m(5) for details.[m
[m
       fsck.<msg-id>[m
           During fsck git may find issues with legacy data which wouldn‚Äôt be generated by current versions of git, and which[m
           wouldn‚Äôt be sent over the wire if [1mtransfer.fsckObjects[0m was set. This feature is intended to support working with[m
           legacy repositories containing such data.[m
[m
           Setting [1mfsck.<msg-id>[0m will be picked up by [1mgit-fsck[0m(1), but to accept pushes of such data set [1mreceive.fsck.<msg-id>[0m[m
           instead, or to clone or fetch it set [1mfetch.fsck.<msg-id>[0m.[m
[m
           The rest of the documentation discusses [1mfsck.*[0m  for brevity, but the same applies for the corresponding [1mreceive.fsck.*[0m[m
           and [1mfetch.<msg-id>.*[0m. variables.[m
[7m Manual page git-config(1) line 2077 (press h for help or q to quit)[27m[K[K[m
           Unlike variables like [1mcolor.ui[0m and [1mcore.editor[0m the [1mreceive.fsck.<msg-id>[0m and [1mfetch.fsck.<msg-id>[0m variables will not[m
           fall back on the [1mfsck.<msg-id>[0m configuration if they aren‚Äôt set. To uniformly configure the same fsck settings in[m
           different circumstances all three of them they must all set to the same values.[m
[m
           When [1mfsck.<msg-id>[0m is set, errors can be switched to warnings and vice versa by configuring the [1mfsck.<msg-id>[0m setting[m
           where the [1m<msg-id>[0m is the fsck message ID and the value is one of [1merror[0m, [1mwarn[0m or [1mignore[0m. For convenience, fsck[m
           prefixes the error/warning with the message ID, e.g. "missingEmail: invalid author/committer line - missing email"[m
           means that setting [1mfsck.missingEmail[0m [1m=[0m [1mignore[0m will hide that issue.[m
[m
           In general, it is better to enumerate existing objects with problems with [1mfsck.skipList[0m, instead of listing the kind[m
           of breakages these problematic objects share to be ignored, as doing the latter will allow new instances of the same[m
           breakages go unnoticed.[m
[m
           Setting an unknown [1mfsck.<msg-id>[0m value will cause fsck to die, but doing the same for [1mreceive.fsck.<msg-id>[0m and[m
           [1mfetch.fsck.<msg-id>[0m will only cause git to warn.[m
[m
       fsck.skipList[m
           The path to a list of object names (i.e. one unabbreviated SHA-1 per line) that are known to be broken in a non-fatal[m
           way and should be ignored. On versions of Git 2.20 and later comments ([4m#[24m), empty lines, and any leading and trailing[m
           whitespace is ignored. Everything but a SHA-1 per line will error out on older versions.[m
[m
           This feature is useful when an established project should be accepted despite early commits containing errors that can[m
           be safely ignored such as invalid committer email addresses. Note: corrupt objects cannot be skipped with this[m
           setting.[m
[m
           Like [1mfsck.<msg-id>[0m this variable has corresponding [1mreceive.fsck.skipList[0m and [1mfetch.fsck.skipList[0m variants.[m
[m
           Unlike variables like [1mcolor.ui[0m and [1mcore.editor[0m the [1mreceive.fsck.skipList[0m and [1mfetch.fsck.skipList[0m variables will not[m
           fall back on the [1mfsck.skipList[0m configuration if they aren‚Äôt set. To uniformly configure the same fsck settings in[m
           different circumstances all three of them they must all set to the same values.[m
[m
[7m Manual page git-config(1) line 2109 (press h for help or q to quit)[27m[K[K           Older versions of Git (before 2.20) documented that the object names list should be sorted. This was never a[m
           requirement, the object names could appear in any order, but when reading the list we tracked whether the list was[m
           sorted for the purposes of an internal binary search implementation, which could save itself some work with an already[m
           sorted list. Unless you had a humongous list there was no reason to go out of your way to pre-sort the list. After Git[m
           version 2.20 a hash implementation is used instead, so there‚Äôs now no reason to pre-sort the list.[m
[m
       gc.aggressiveDepth[m
           The depth parameter used in the delta compression algorithm used by [4mgit[24m [4mgc[24m [4m--aggressive[24m. This defaults to 50, which is[m
           the default for the [1m--depth[0m option when [1m--aggressive[0m isn‚Äôt in use.[m
[m
           See the documentation for the [1m--depth[0m option in [1mgit-repack[0m(1) for more details.[m
[m
       gc.aggressiveWindow[m
           The window size parameter used in the delta compression algorithm used by [4mgit[24m [4mgc[24m [4m--aggressive[24m. This defaults to 250,[m
           which is a much more aggressive window size than the default [1m--window[0m of 10.[m
[m
           See the documentation for the [1m--window[0m option in [1mgit-repack[0m(1) for more details.[m
[m
       gc.auto[m
           When there are approximately more than this many loose objects in the repository, [1mgit[0m [1mgc[0m [1m--auto[0m will pack them. Some[m
           Porcelain commands use this command to perform a light-weight garbage collection from time to time. The default value[m
           is 6700.[m
[m
           Setting this to 0 disables not only automatic packing based on the number of loose objects, but any other heuristic[m
           [1mgit[0m [1mgc[0m [1m--auto[0m will otherwise use to determine if there‚Äôs work to do, such as [1mgc.autoPackLimit[0m.[m
[m
       gc.autoPackLimit[m
           When there are more than this many packs that are not marked with [1m*.keep[0m file in the repository, [1mgit[0m [1mgc[0m [1m--auto[0m[m
           consolidates them into one larger pack. The default value is 50. Setting this to 0 disables it. Setting [1mgc.auto[0m to 0[m
           will also disable this.[m
[m
           See the [1mgc.bigPackThreshold[0m configuration variable below. When in use, it‚Äôll affect how the auto pack limit works.[m
[7m Manual page git-config(1) line 2141 (press h for help or q to quit)[27m[K[K[m
       gc.autoDetach[m
           Make [1mgit[0m [1mgc[0m [1m--auto[0m return immediately and run in background if the system supports it. Default is true.[m
[m
       gc.bigPackThreshold[m
           If non-zero, all packs larger than this limit are kept when [1mgit[0m [1mgc[0m is run. This is very similar to [1m--keep-largest-pack[0m[m
           except that all packs that meet the threshold are kept, not just the largest pack. Defaults to zero. Common unit[m
           suffixes of [4mk[24m, [4mm[24m, or [4mg[24m are supported.[m
[m
           Note that if the number of kept packs is more than gc.autoPackLimit, this configuration variable is ignored, all packs[m
           except the base pack will be repacked. After this the number of packs should go below gc.autoPackLimit and[m
           gc.bigPackThreshold should be respected again.[m
[m
           If the amount of memory estimated for [1mgit[0m [1mrepack[0m to run smoothly is not available and [1mgc.bigPackThreshold[0m is not set,[m
           the largest pack will also be excluded (this is the equivalent of running [1mgit[0m [1mgc[0m with [1m--keep-largest-pack[0m).[m
[m
       gc.writeCommitGraph[m
           If true, then gc will rewrite the commit-graph file when [1mgit-gc[0m(1) is run. When using [1mgit[0m [1mgc[0m [1m--auto[0m the commit-graph[m
           will be updated if housekeeping is required. Default is true. See [1mgit-commit-graph[0m(1) for details.[m
[m
       gc.logExpiry[m
           If the file gc.log exists, then [1mgit[0m [1mgc[0m [1m--auto[0m will print its content and exit with status zero instead of running[m
           unless that file is more than [4mgc.logExpiry[24m old. Default is "1.day". See [1mgc.pruneExpire[0m for more ways to specify its[m
           value.[m
[m
       gc.packRefs[m
           Running [1mgit[0m [1mpack-refs[0m in a repository renders it unclonable by Git versions prior to 1.5.1.2 over dumb transports such[m
           as HTTP. This variable determines whether [4mgit[24m [4mgc[24m runs [1mgit[0m [1mpack-refs[0m. This can be set to [1mnotbare[0m to enable it within[m
           all non-bare repos or it can be set to a boolean value. The default is [1mtrue[0m.[m
[m
       gc.pruneExpire[m
           When [4mgit[24m [4mgc[24m is run, it will call [4mprune[24m [4m--expire[24m [4m2.weeks.ago[24m. Override the grace period with this config variable. The[m
[7m Manual page git-config(1) line 2173 (press h for help or q to quit)[27m[K[K           value "now" may be used to disable this grace period and always prune unreachable objects immediately, or "never" may[m
           be used to suppress pruning. This feature helps prevent corruption when [4mgit[24m [4mgc[24m runs concurrently with another process[m
           writing to the repository; see the "NOTES" section of [1mgit-gc[0m(1).[m
[m
       gc.worktreePruneExpire[m
           When [4mgit[24m [4mgc[24m is run, it calls [4mgit[24m [4mworktree[24m [4mprune[24m [4m--expire[24m [4m3.months.ago[24m. This config variable can be used to set a[m
           different grace period. The value "now" may be used to disable the grace period and prune [1m$GIT_DIR/worktrees[0m[m
           immediately, or "never" may be used to suppress pruning.[m
[m
       gc.reflogExpire, gc.<pattern>.reflogExpire[m
           [4mgit[24m [4mreflog[24m [4mexpire[24m removes reflog entries older than this time; defaults to 90 days. The value "now" expires all[m
           entries immediately, and "never" suppresses expiration altogether. With "<pattern>" (e.g. "refs/stash") in the middle[m
           the setting applies only to the refs that match the <pattern>.[m
[m
       gc.reflogExpireUnreachable, gc.<pattern>.reflogExpireUnreachable[m
           [4mgit[24m [4mreflog[24m [4mexpire[24m removes reflog entries older than this time and are not reachable from the current tip; defaults to[m
           30 days. The value "now" expires all entries immediately, and "never" suppresses expiration altogether. With[m
           "<pattern>" (e.g. "refs/stash") in the middle, the setting applies only to the refs that match the <pattern>.[m
[m
           These types of entries are generally created as a result of using [1mgit[0m [1mcommit[0m [1m--amend[0m or [1mgit[0m [1mrebase[0m and are the commits[m
           prior to the amend or rebase occurring. Since these changes are not part of the current project most users will want[m
           to expire them sooner, which is why the default is more aggressive than [1mgc.reflogExpire[0m.[m
[m
       gc.rerereResolved[m
           Records of conflicted merge you resolved earlier are kept for this many days when [4mgit[24m [4mrerere[24m [4mgc[24m is run. You can also[m
           use more human-readable "1.month.ago", etc. The default is 60 days. See [1mgit-rerere[0m(1).[m
[m
       gc.rerereUnresolved[m
           Records of conflicted merge you have not resolved are kept for this many days when [4mgit[24m [4mrerere[24m [4mgc[24m is run. You can also[m
           use more human-readable "1.month.ago", etc. The default is 15 days. See [1mgit-rerere[0m(1).[m
[m
       gitcvs.commitMsgAnnotation[m
[7m Manual page git-config(1) line 2205 (press h for help or q to quit)[27m[K[K           Append this string to each commit message. Set to empty string to disable this feature. Defaults to "via git-CVS[m
           emulator".[m
[m
       gitcvs.enabled[m
           Whether the CVS server interface is enabled for this repository. See [1mgit-cvsserver[0m(1).[m
[m
       gitcvs.logFile[m
           Path to a log file where the CVS server interface well... logs various stuff. See [1mgit-cvsserver[0m(1).[m
[m
       gitcvs.usecrlfattr[m
           If true, the server will look up the end-of-line conversion attributes for files to determine the [1m-k[0m modes to use. If[m
           the attributes force Git to treat a file as text, the [1m-k[0m mode will be left blank so CVS clients will treat it as text.[m
           If they suppress text conversion, the file will be set with [4m-kb[24m mode, which suppresses any newline munging the client[m
           might otherwise do. If the attributes do not allow the file type to be determined, then [1mgitcvs.allBinary[0m is used. See[m
           [1mgitattributes[0m(5).[m
[m
       gitcvs.allBinary[m
           This is used if [1mgitcvs.usecrlfattr[0m does not resolve the correct [4m-kb[24m mode to use. If true, all unresolved files are[m
           sent to the client in mode [4m-kb[24m. This causes the client to treat them as binary files, which suppresses any newline[m
           munging it otherwise might do. Alternatively, if it is set to "guess", then the contents of the file are examined to[m
           decide if it is binary, similar to [1mcore.autocrlf[0m.[m
[m
       gitcvs.dbName[m
           Database used by git-cvsserver to cache revision information derived from the Git repository. The exact meaning[m
           depends on the used database driver, for SQLite (which is the default driver) this is a filename. Supports variable[m
           substitution (see [1mgit-cvsserver[0m(1) for details). May not contain semicolons ([1m;[0m). Default: [4m%Ggitcvs.%m.sqlite[24m[m
[m
       gitcvs.dbDriver[m
           Used Perl DBI driver. You can specify any available driver for this here, but it might not work. git-cvsserver is[m
           tested with [4mDBD::SQLite[24m, reported to work with [4mDBD::Pg[24m, and reported [1mnot[0m to work with [4mDBD::mysql[24m. Experimental[m
           feature. May not contain double colons ([1m:[0m). Default: [4mSQLite[24m. See [1mgit-cvsserver[0m(1).[m
[m
[7m Manual page git-config(1) line 2237 (press h for help or q to quit)[27m[K[K       gitcvs.dbUser, gitcvs.dbPass[m
           Database user and password. Only useful if setting [1mgitcvs.dbDriver[0m, since SQLite has no concept of database users[m
           and/or passwords.  [4mgitcvs.dbUser[24m supports variable substitution (see [1mgit-cvsserver[0m(1) for details).[m
[m
       gitcvs.dbTableNamePrefix[m
           Database table name prefix. Prepended to the names of any database tables used, allowing a single database to be used[m
           for several repositories. Supports variable substitution (see [1mgit-cvsserver[0m(1) for details). Any non-alphabetic[m
           characters will be replaced with underscores.[m
[m
       All gitcvs variables except for [1mgitcvs.usecrlfattr[0m and [1mgitcvs.allBinary[0m can also be specified as[m
       [4mgitcvs.<access_method>.<varname>[24m (where [4maccess_method[24m is one of "ext" and "pserver") to make them apply only for the given[m
       access method.[m
[m
       gitweb.category, gitweb.description, gitweb.owner, gitweb.url[m
           See [1mgitweb[0m(1) for description.[m
[m
       gitweb.avatar, gitweb.blame, gitweb.grep, gitweb.highlight, gitweb.patches, gitweb.pickaxe, gitweb.remote_heads,[m
       gitweb.showSizes, gitweb.snapshot[m
           See [1mgitweb.conf[0m(5) for description.[m
[m
       grep.lineNumber[m
           If set to true, enable [1m-n[0m option by default.[m
[m
       grep.column[m
           If set to true, enable the [1m--column[0m option by default.[m
[m
       grep.patternType[m
           Set the default matching behavior. Using a value of [4mbasic[24m, [4mextended[24m, [4mfixed[24m, or [4mperl[24m will enable the [1m--basic-regexp[0m,[m
           [1m--extended-regexp[0m, [1m--fixed-strings[0m, or [1m--perl-regexp[0m option accordingly, while the value [4mdefault[24m will return to the[m
           default matching behavior.[m
[m
       grep.extendedRegexp[m
[7m Manual page git-config(1) line 2269 (press h for help or q to quit)[27m[K[K           If set to true, enable [1m--extended-regexp[0m option by default. This option is ignored when the [1mgrep.patternType[0m option is[m
           set to a value other than [4mdefault[24m.[m
[m
       grep.threads[m
           Number of grep worker threads to use. See [1mgrep.threads[0m in [1mgit-grep[0m(1) for more information.[m
[m
       grep.fallbackToNoIndex[m
           If set to true, fall back to git grep --no-index if git grep is executed outside of a git repository. Defaults to[m
           false.[m
[m
       gpg.program[m
           Use this custom program instead of "[1mgpg[0m" found on [1m$PATH[0m when making or verifying a PGP signature. The program must[m
           support the same command-line interface as GPG, namely, to verify a detached signature, "[1mgpg[0m [1m--verify[0m [1m$signature[0m [1m-[0m[m
           [1m<$file[0m" is run, and the program is expected to signal a good signature by exiting with code 0, and to generate an[m
           ASCII-armored detached signature, the standard input of "[1mgpg[0m [1m-bsau[0m [1m$key[0m" is fed with the contents to be signed, and[m
           the program is expected to send the result to its standard output.[m
[m
       gpg.format[m
           Specifies which key format to use when signing with [1m--gpg-sign[0m. Default is "openpgp". Other possible values are[m
           "x509", "ssh".[m
[m
       gpg.<format>.program[m
           Use this to customize the program used for the signing format you chose. (see [1mgpg.program[0m and [1mgpg.format[0m) [1mgpg.program[0m[m
           can still be used as a legacy synonym for [1mgpg.openpgp.program[0m. The default value for [1mgpg.x509.program[0m is "gpgsm" and[m
           [1mgpg.ssh.program[0m is "ssh-keygen".[m
[m
       gpg.minTrustLevel[m
           Specifies a minimum trust level for signature verification. If this option is unset, then signature verification for[m
           merge operations require a key with at least [1mmarginal[0m trust. Other operations that perform signature verification[m
           require a key with at least [1mundefined[0m trust. Setting this option overrides the required trust-level for all[m
           operations. Supported values, in increasing order of significance:[m
[m
[7m Manual page git-config(1) line 2301 (press h for help or q to quit)[27m[K[K           ‚Ä¢   [1mundefined[0m[m
[m
           ‚Ä¢   [1mnever[0m[m
[m
           ‚Ä¢   [1mmarginal[0m[m
[m
           ‚Ä¢   [1mfully[0m[m
[m
           ‚Ä¢   [1multimate[0m[m
[m
       gpg.ssh.defaultKeyCommand: This command that will be run when user.signingkey is not set and a ssh signature is requested.[m
       On successful exit a valid ssh public key is expected in the first line of its output. To automatically use the first[m
       available key from your ssh-agent set this to "ssh-add -L".[m
[m
       gpg.ssh.allowedSignersFile[m
           A file containing ssh public keys which you are willing to trust. The file consists of one or more lines of principals[m
           followed by an ssh public key. e.g.: [1muser1@example.com[0m[1],[1muser2@example.com[0m[2] ssh-rsa AAAAX1... See ssh-keygen(1)[m
           "ALLOWED SIGNERS" for details. The principal is only used to identify the key and is available when verifying a[m
           signature.[m
[m
           SSH has no concept of trust levels like gpg does. To be able to differentiate between valid signatures and trusted[m
           signatures the trust level of a signature verification is set to [1mfully[0m when the public key is present in the[m
           allowedSignersFile. Otherwise the trust level is [1mundefined[0m and git verify-commit/tag will fail.[m
[m
           This file can be set to a location outside of the repository and every developer maintains their own trust store. A[m
           central repository server could generate this file automatically from ssh keys with push access to verify the code[m
           against. In a corporate setting this file is probably generated at a global location from automation that already[m
           handles developer ssh keys.[m
[m
           A repository that only allows signed commits can store the file in the repository itself using a path relative to the[m
           top-level of the working tree. This way only committers with an already valid key can add or change keys in the[m
           keyring.[m
[7m Manual page git-config(1) line 2333 (press h for help or q to quit)[27m[K[K[m
           Using a SSH CA key with the cert-authority option (see ssh-keygen(1) "CERTIFICATES") is also valid.[m
[m
       gpg.ssh.revocationFile[m
           Either a SSH KRL or a list of revoked public keys (without the principal prefix). See ssh-keygen(1) for details. If a[m
           public key is found in this file then it will always be treated as having trust level "never" and signatures will show[m
           as invalid.[m
[m
       gui.commitMsgWidth[m
           Defines how wide the commit message window is in the [1mgit-gui[0m(1). "75" is the default.[m
[m
       gui.diffContext[m
           Specifies how many context lines should be used in calls to diff made by the [1mgit-gui[0m(1). The default is "5".[m
[m
       gui.displayUntracked[m
           Determines if [1mgit-gui[0m(1) shows untracked files in the file list. The default is "true".[m
[m
       gui.encoding[m
           Specifies the default character encoding to use for displaying of file contents in [1mgit-gui[0m(1) and [1mgitk[0m(1). It can be[m
           overridden by setting the [4mencoding[24m attribute for relevant files (see [1mgitattributes[0m(5)). If this option is not set, the[m
           tools default to the locale encoding.[m
[m
       gui.matchTrackingBranch[m
           Determines if new branches created with [1mgit-gui[0m(1) should default to tracking remote branches with matching names or[m
           not. Default: "false".[m
[m
       gui.newBranchTemplate[m
           Is used as suggested name when creating new branches using the [1mgit-gui[0m(1).[m
[m
       gui.pruneDuringFetch[m
           "true" if [1mgit-gui[0m(1) should prune remote-tracking branches when performing a fetch. The default value is "false".[m
[m
[7m Manual page git-config(1) line 2365 (press h for help or q to quit)[27m[K[K       gui.trustmtime[m
           Determines if [1mgit-gui[0m(1) should trust the file modification timestamp or not. By default the timestamps are not[m
           trusted.[m
[m
       gui.spellingDictionary[m
           Specifies the dictionary used for spell checking commit messages in the [1mgit-gui[0m(1). When set to "none" spell checking[m
           is turned off.[m
[m
       gui.fastCopyBlame[m
           If true, [4mgit[24m [4mgui[24m [4mblame[24m uses [1m-C[0m instead of [1m-C[0m [1m-C[0m for original location detection. It makes blame significantly faster[m
           on huge repositories at the expense of less thorough copy detection.[m
[m
       gui.copyBlameThreshold[m
           Specifies the threshold to use in [4mgit[24m [4mgui[24m [4mblame[24m original location detection, measured in alphanumeric characters. See[m
           the [1mgit-blame[0m(1) manual for more information on copy detection.[m
[m
       gui.blamehistoryctx[m
           Specifies the radius of history context in days to show in [1mgitk[0m(1) for the selected commit, when the [1mShow[0m [1mHistory[0m[m
           [1mContext[0m menu item is invoked from [4mgit[24m [4mgui[24m [4mblame[24m. If this variable is set to zero, the whole history is shown.[m
[m
       guitool.<name>.cmd[m
           Specifies the shell command line to execute when the corresponding item of the [1mgit-gui[0m(1) [1mTools[0m menu is invoked. This[m
           option is mandatory for every tool. The command is executed from the root of the working directory, and in the[m
           environment it receives the name of the tool as [1mGIT_GUITOOL[0m, the name of the currently selected file as [4mFILENAME[24m, and[m
           the name of the current branch as [4mCUR_BRANCH[24m (if the head is detached, [4mCUR_BRANCH[24m is empty).[m
[m
       guitool.<name>.needsFile[m
           Run the tool only if a diff is selected in the GUI. It guarantees that [4mFILENAME[24m is not empty.[m
[m
       guitool.<name>.noConsole[m
           Run the command silently, without creating a window to display its output.[m
[m
[7m Manual page git-config(1) line 2397 (press h for help or q to quit)[27m[K[K       guitool.<name>.noRescan[m
           Don‚Äôt rescan the working directory for changes after the tool finishes execution.[m
[m
       guitool.<name>.confirm[m
           Show a confirmation dialog before actually running the tool.[m
[m
       guitool.<name>.argPrompt[m
           Request a string argument from the user, and pass it to the tool through the [1mARGS[0m environment variable. Since[m
           requesting an argument implies confirmation, the [4mconfirm[24m option has no effect if this is enabled. If the option is set[m
           to [4mtrue[24m, [4myes[24m, or [4m1[24m, the dialog uses a built-in generic prompt; otherwise the exact value of the variable is used.[m
[m
       guitool.<name>.revPrompt[m
           Request a single valid revision from the user, and set the [1mREVISION[0m environment variable. In other aspects this option[m
           is similar to [4margPrompt[24m, and can be used together with it.[m
[m
       guitool.<name>.revUnmerged[m
           Show only unmerged branches in the [4mrevPrompt[24m subdialog. This is useful for tools similar to merge or rebase, but not[m
           for things like checkout or reset.[m
[m
       guitool.<name>.title[m
           Specifies the title to use for the prompt dialog. The default is the tool name.[m
[m
       guitool.<name>.prompt[m
           Specifies the general prompt string to display at the top of the dialog, before subsections for [4margPrompt[24m and[m
           [4mrevPrompt[24m. The default value includes the actual command.[m
[m
       help.browser[m
           Specify the browser that will be used to display help in the [4mweb[24m format. See [1mgit-help[0m(1).[m
[m
       help.format[m
           Override the default help format used by [1mgit-help[0m(1). Values [4mman[24m, [4minfo[24m, [4mweb[24m and [4mhtml[24m are supported.  [4mman[24m is the[m
           default.  [4mweb[24m and [4mhtml[24m are the same.[m
[7m Manual page git-config(1) line 2429 (press h for help or q to quit)[27m[K[K[m
       help.autoCorrect[m
           If git detects typos and can identify exactly one valid command similar to the error, git will try to suggest the[m
           correct command or even run the suggestion automatically. Possible config values are:[m
[m
           ‚Ä¢   0 (default): show the suggested command.[m
[m
           ‚Ä¢   positive number: run the suggested command after specified deciseconds (0.1 sec).[m
[m
           ‚Ä¢   "immediate": run the suggested command immediately.[m
[m
           ‚Ä¢   "prompt": show the suggestion and prompt for confirmation to run the command.[m
[m
           ‚Ä¢   "never": don‚Äôt run or show any suggested command.[m
[m
       help.htmlPath[m
           Specify the path where the HTML documentation resides. File system paths and URLs are supported. HTML pages will be[m
           prefixed with this path when help is displayed in the [4mweb[24m format. This defaults to the documentation path of your Git[m
           installation.[m
[m
       http.proxy[m
           Override the HTTP proxy, normally configured using the [4mhttp_proxy[24m, [4mhttps_proxy[24m, and [4mall_proxy[24m environment variables[m
           (see [1mcurl(1)[0m). In addition to the syntax understood by curl, it is possible to specify a proxy string with a user name[m
           but no password, in which case git will attempt to acquire one in the same way it does for other credentials. See[m
           [1mgitcredentials[0m(7) for more information. The syntax thus is [4m[protocol://][user[:password]@]proxyhost[:port][24m. This can[m
           be overridden on a per-remote basis; see remote.<name>.proxy[m
[m
       http.proxyAuthMethod[m
           Set the method with which to authenticate against the HTTP proxy. This only takes effect if the configured proxy[m
           string contains a user name part (i.e. is of the form [4muser@host[24m or [4muser@host:port[24m). This can be overridden on a[m
           per-remote basis; see [1mremote.<name>.proxyAuthMethod[0m. Both can be overridden by the [1mGIT_HTTP_PROXY_AUTHMETHOD[0m[m
           environment variable. Possible values are:[m
[7m Manual page git-config(1) line 2461 (press h for help or q to quit)[27m[K[K[m
           ‚Ä¢   [1manyauth[0m - Automatically pick a suitable authentication method. It is assumed that the proxy answers an[m
               unauthenticated request with a 407 status code and one or more Proxy-authenticate headers with supported[m
               authentication methods. This is the default.[m
[m
           ‚Ä¢   [1mbasic[0m - HTTP Basic authentication[m
[m
           ‚Ä¢   [1mdigest[0m - HTTP Digest authentication; this prevents the password from being transmitted to the proxy in clear text[m
[m
           ‚Ä¢   [1mnegotiate[0m - GSS-Negotiate authentication (compare the --negotiate option of [1mcurl(1)[0m)[m
[m
           ‚Ä¢   [1mntlm[0m - NTLM authentication (compare the --ntlm option of [1mcurl(1)[0m)[m
[m
       http.proxySSLCert[m
           The pathname of a file that stores a client certificate to use to authenticate with an HTTPS proxy. Can be overridden[m
           by the [1mGIT_PROXY_SSL_CERT[0m environment variable.[m
[m
       http.proxySSLKey[m
           The pathname of a file that stores a private key to use to authenticate with an HTTPS proxy. Can be overridden by the[m
           [1mGIT_PROXY_SSL_KEY[0m environment variable.[m
[m
       http.proxySSLCertPasswordProtected[m
           Enable Git‚Äôs password prompt for the proxy SSL certificate. Otherwise OpenSSL will prompt the user, possibly many[m
           times, if the certificate or private key is encrypted. Can be overridden by the [1mGIT_PROXY_SSL_CERT_PASSWORD_PROTECTED[0m[m
           environment variable.[m
[m
       http.proxySSLCAInfo[m
           Pathname to the file containing the certificate bundle that should be used to verify the proxy with when using an[m
           HTTPS proxy. Can be overridden by the [1mGIT_PROXY_SSL_CAINFO[0m environment variable.[m
[m
       http.emptyAuth[m
           Attempt authentication without seeking a username or password. This can be used to attempt GSS-Negotiate[m
[7m Manual page git-config(1) line 2493 (press h for help or q to quit)[27m[K[K           authentication without specifying a username in the URL, as libcurl normally requires a username for authentication.[m
[m
       http.delegation[m
           Control GSSAPI credential delegation. The delegation is disabled by default in libcurl since version 7.21.7. Set[m
           parameter to tell the server what it is allowed to delegate when it comes to user credentials. Used with GSS/kerberos.[m
           Possible values are:[m
[m
           ‚Ä¢   [1mnone[0m - Don‚Äôt allow any delegation.[m
[m
           ‚Ä¢   [1mpolicy[0m - Delegates if and only if the OK-AS-DELEGATE flag is set in the Kerberos service ticket, which is a matter[m
               of realm policy.[m
[m
           ‚Ä¢   [1malways[0m - Unconditionally allow the server to delegate.[m
[m
       http.extraHeader[m
           Pass an additional HTTP header when communicating with a server. If more than one such entry exists, all of them are[m
           added as extra headers. To allow overriding the settings inherited from the system config, an empty value will reset[m
           the extra headers to the empty list.[m
[m
       http.cookieFile[m
           The pathname of a file containing previously stored cookie lines, which should be used in the Git http session, if[m
           they match the server. The file format of the file to read cookies from should be plain HTTP headers or the[m
           Netscape/Mozilla cookie file format (see [1mcurl(1)[0m). NOTE that the file specified with http.cookieFile is used only as[m
           input unless http.saveCookies is set.[m
[m
       http.saveCookies[m
           If set, store cookies received during requests to the file specified by http.cookieFile. Has no effect if[m
           http.cookieFile is unset.[m
[m
       http.version[m
           Use the specified HTTP protocol version when communicating with a server. If you want to force the default. The[m
           available and default version depend on libcurl. Currently the possible values of this option are:[m
[7m Manual page git-config(1) line 2525 (press h for help or q to quit)[27m[K[K[m
           ‚Ä¢   HTTP/2[m
[m
           ‚Ä¢   HTTP/1.1[m
[m
       http.sslVersion[m
           The SSL version to use when negotiating an SSL connection, if you want to force the default. The available and default[m
           version depend on whether libcurl was built against NSS or OpenSSL and the particular configuration of the crypto[m
           library in use. Internally this sets the [4mCURLOPT_SSL_VERSION[24m option; see the libcurl documentation for more details on[m
           the format of this option and for the ssl version supported. Currently the possible values of this option are:[m
[m
           ‚Ä¢   sslv2[m
[m
           ‚Ä¢   sslv3[m
[m
           ‚Ä¢   tlsv1[m
[m
           ‚Ä¢   tlsv1.0[m
[m
           ‚Ä¢   tlsv1.1[m
[m
           ‚Ä¢   tlsv1.2[m
[m
           ‚Ä¢   tlsv1.3[m
[m
           Can be overridden by the [1mGIT_SSL_VERSION[0m environment variable. To force git to use libcurl‚Äôs default ssl version and[m
           ignore any explicit http.sslversion option, set [1mGIT_SSL_VERSION[0m to the empty string.[m
[m
       http.sslCipherList[m
           A list of SSL ciphers to use when negotiating an SSL connection. The available ciphers depend on whether libcurl was[m
           built against NSS or OpenSSL and the particular configuration of the crypto library in use. Internally this sets the[m
           [4mCURLOPT_SSL_CIPHER_LIST[24m option; see the libcurl documentation for more details on the format of this list.[m
[7m Manual page git-config(1) line 2557 (press h for help or q to quit)[27m[K[K[m
           Can be overridden by the [1mGIT_SSL_CIPHER_LIST[0m environment variable. To force git to use libcurl‚Äôs default cipher list[m
           and ignore any explicit http.sslCipherList option, set [1mGIT_SSL_CIPHER_LIST[0m to the empty string.[m
[m
       http.sslVerify[m
           Whether to verify the SSL certificate when fetching or pushing over HTTPS. Defaults to true. Can be overridden by the[m
           [1mGIT_SSL_NO_VERIFY[0m environment variable.[m
[m
       http.sslCert[m
           File containing the SSL certificate when fetching or pushing over HTTPS. Can be overridden by the [1mGIT_SSL_CERT[0m[m
           environment variable.[m
[m
       http.sslKey[m
           File containing the SSL private key when fetching or pushing over HTTPS. Can be overridden by the [1mGIT_SSL_KEY[0m[m
           environment variable.[m
[m
       http.sslCertPasswordProtected[m
           Enable Git‚Äôs password prompt for the SSL certificate. Otherwise OpenSSL will prompt the user, possibly many times, if[m
           the certificate or private key is encrypted. Can be overridden by the [1mGIT_SSL_CERT_PASSWORD_PROTECTED[0m environment[m
           variable.[m
[m
       http.sslCAInfo[m
           File containing the certificates to verify the peer with when fetching or pushing over HTTPS. Can be overridden by the[m
           [1mGIT_SSL_CAINFO[0m environment variable.[m
[m
       http.sslCAPath[m
           Path containing files with the CA certificates to verify the peer with when fetching or pushing over HTTPS. Can be[m
           overridden by the [1mGIT_SSL_CAPATH[0m environment variable.[m
[m
       http.sslBackend[m
           Name of the SSL backend to use (e.g. "openssl" or "schannel"). This option is ignored if cURL lacks support for[m
           choosing the SSL backend at runtime.[m
[7m Manual page git-config(1) line 2589 (press h for help or q to quit)[27m[K[K[m
       http.schannelCheckRevoke[m
           Used to enforce or disable certificate revocation checks in cURL when http.sslBackend is set to "schannel". Defaults[m
           to [1mtrue[0m if unset. Only necessary to disable this if Git consistently errors and the message is about checking the[m
           revocation status of a certificate. This option is ignored if cURL lacks support for setting the relevant SSL option[m
           at runtime.[m
[m
       http.schannelUseSSLCAInfo[m
           As of cURL v7.60.0, the Secure Channel backend can use the certificate bundle provided via [1mhttp.sslCAInfo[0m, but that[m
           would override the Windows Certificate Store. Since this is not desirable by default, Git will tell cURL not to use[m
           that bundle by default when the [1mschannel[0m backend was configured via [1mhttp.sslBackend[0m, unless [1mhttp.schannelUseSSLCAInfo[0m[m
           overrides this behavior.[m
[m
       http.pinnedpubkey[m
           Public key of the https service. It may either be the filename of a PEM or DER encoded public key file or a string[m
           starting with [4msha256//[24m followed by the base64 encoded sha256 hash of the public key. See also libcurl[m
           [4mCURLOPT_PINNEDPUBLICKEY[24m. git will exit with an error if this option is set but not supported by cURL.[m
[m
       http.sslTry[m
           Attempt to use AUTH SSL/TLS and encrypted data transfers when connecting via regular FTP protocol. This might be[m
           needed if the FTP server requires it for security reasons or you wish to connect securely whenever remote FTP server[m
           supports it. Default is false since it might trigger certificate verification errors on misconfigured servers.[m
[m
       http.maxRequests[m
           How many HTTP requests to launch in parallel. Can be overridden by the [1mGIT_HTTP_MAX_REQUESTS[0m environment variable.[m
           Default is 5.[m
[m
       http.minSessions[m
           The number of curl sessions (counted across slots) to be kept across requests. They will not be ended with[m
           curl_easy_cleanup() until http_cleanup() is invoked. If USE_CURL_MULTI is not defined, this value will be capped at 1.[m
           Defaults to 1.[m
[m
[7m Manual page git-config(1) line 2621 (press h for help or q to quit)[27m[K[K       http.postBuffer[m
           Maximum size in bytes of the buffer used by smart HTTP transports when POSTing data to the remote system. For requests[m
           larger than this buffer size, HTTP/1.1 and Transfer-Encoding: chunked is used to avoid creating a massive pack file[m
           locally. Default is 1 MiB, which is sufficient for most requests.[m
[m
           Note that raising this limit is only effective for disabling chunked transfer encoding and therefore should be used[m
           only where the remote server or a proxy only supports HTTP/1.0 or is noncompliant with the HTTP standard. Raising this[m
           is not, in general, an effective solution for most push problems, but can increase memory consumption significantly[m
           since the entire buffer is allocated even for small pushes.[m
[m
       http.lowSpeedLimit, http.lowSpeedTime[m
           If the HTTP transfer speed is less than [4mhttp.lowSpeedLimit[24m for longer than [4mhttp.lowSpeedTime[24m seconds, the transfer is[m
           aborted. Can be overridden by the [1mGIT_HTTP_LOW_SPEED_LIMIT[0m and [1mGIT_HTTP_LOW_SPEED_TIME[0m environment variables.[m
[m
       http.noEPSV[m
           A boolean which disables using of EPSV ftp command by curl. This can helpful with some "poor" ftp servers which don‚Äôt[m
           support EPSV mode. Can be overridden by the [1mGIT_CURL_FTP_NO_EPSV[0m environment variable. Default is false (curl will use[m
           EPSV).[m
[m
       http.userAgent[m
           The HTTP USER_AGENT string presented to an HTTP server. The default value represents the version of the client Git[m
           such as git/1.7.1. This option allows you to override this value to a more common value such as Mozilla/4.0. This may[m
           be necessary, for instance, if connecting through a firewall that restricts HTTP connections to a set of common[m
           USER_AGENT strings (but not including those like git/1.7.1). Can be overridden by the [1mGIT_HTTP_USER_AGENT[0m environment[m
           variable.[m
[m
       http.followRedirects[m
           Whether git should follow HTTP redirects. If set to [1mtrue[0m, git will transparently follow any redirect issued by a[m
           server it encounters. If set to [1mfalse[0m, git will treat all redirects as errors. If set to [1minitial[0m, git will follow[m
           redirects only for the initial request to a remote, but not for subsequent follow-up HTTP requests. Since git uses the[m
           redirected URL as the base for the follow-up requests, this is generally sufficient. The default is [1minitial[0m.[m
[m
[7m Manual page git-config(1) line 2653 (press h for help or q to quit)[27m[K[K       http.<url>.*[m
           Any of the http.* options above can be applied selectively to some URLs. For a config key to match a URL, each element[m
           of the config key is compared to that of the URL, in the following order:[m
[m
            1. Scheme (e.g., [1mhttps[0m in [1mhttps://example.com/[0m). This field must match exactly between the config key and the URL.[m
[m
            2. Host/domain name (e.g., [1mexample.com[0m in [1mhttps://example.com/[0m). This field must match between the config key and the[m
               URL. It is possible to specify a [1m*[0m as part of the host name to match all subdomains at this level.[m
               [1mhttps://*.example.com/[0m for example would match [1mhttps://foo.example.com/[0m, but not [1mhttps://foo.bar.example.com/[0m.[m
[m
            3. Port number (e.g., [1m8080[0m in [1mhttp://example.com:8080/[0m). This field must match exactly between the config key and the[m
               URL. Omitted port numbers are automatically converted to the correct default for the scheme before matching.[m
[m
            4. Path (e.g., [1mrepo.git[0m in [1mhttps://example.com/repo.git[0m). The path field of the config key must match the path field[m
               of the URL either exactly or as a prefix of slash-delimited path elements. This means a config key with path [1mfoo/[0m[m
               matches URL path [1mfoo/bar[0m. A prefix can only match on a slash ([1m/[0m) boundary. Longer matches take precedence (so a[m
               config key with path [1mfoo/bar[0m is a better match to URL path [1mfoo/bar[0m than a config key with just path [1mfoo/[0m).[m
[m
            5. User name (e.g., [1muser[0m in [1mhttps://user@example.com/repo.git[0m). If the config key has a user name it must match the[m
               user name in the URL exactly. If the config key does not have a user name, that config key will match a URL with[m
               any user name (including none), but at a lower precedence than a config key with a user name.[m
[m
           The list above is ordered by decreasing precedence; a URL that matches a config key‚Äôs path is preferred to one that[m
           matches its user name. For example, if the URL is [1mhttps://user@example.com/foo/bar[0m a config key match of[m
           [1mhttps://example.com/foo[0m will be preferred over a config key match of [1mhttps://user@example.com[0m.[m
[m
           All URLs are normalized before attempting any matching (the password part, if embedded in the URL, is always ignored[m
           for matching purposes) so that equivalent URLs that are simply spelled differently will match properly. Environment[m
           variable settings always override any matches. The URLs that are matched against are those given directly to Git[m
           commands. This means any URLs visited as a result of a redirection do not participate in matching.[m
[m
       i18n.commitEncoding[m
[7m Manual page git-config(1) line 2685 (press h for help or q to quit)[27m[K[K           Character encoding the commit messages are stored in; Git itself does not care per se, but this information is[m
           necessary e.g. when importing commits from emails or in the gitk graphical history browser (and possibly at other[m
           places in the future or in other porcelains). See e.g.  [1mgit-mailinfo[0m(1). Defaults to [4mutf-8[24m.[m
[m
       i18n.logOutputEncoding[m
           Character encoding the commit messages are converted to when running [4mgit[24m [4mlog[24m and friends.[m
[m
       imap.folder[m
           The folder to drop the mails into, which is typically the Drafts folder. For example: "INBOX.Drafts", "INBOX/Drafts"[m
           or "[Gmail]/Drafts". Required.[m
[m
       imap.tunnel[m
           Command used to setup a tunnel to the IMAP server through which commands will be piped instead of using a direct[m
           network connection to the server. Required when imap.host is not set.[m
[m
       imap.host[m
           A URL identifying the server. Use an [1mimap://[0m prefix for non-secure connections and an [1mimaps://[0m prefix for secure[m
           connections. Ignored when imap.tunnel is set, but required otherwise.[m
[m
       imap.user[m
           The username to use when logging in to the server.[m
[m
       imap.pass[m
           The password to use when logging in to the server.[m
[m
       imap.port[m
           An integer port number to connect to on the server. Defaults to 143 for imap:// hosts and 993 for imaps:// hosts.[m
           Ignored when imap.tunnel is set.[m
[m
       imap.sslverify[m
           A boolean to enable/disable verification of the server certificate used by the SSL/TLS connection. Default is [1mtrue[0m.[m
           Ignored when imap.tunnel is set.[m
[7m Manual page git-config(1) line 2717 (press h for help or q to quit)[27m[K[K[m
       imap.preformattedHTML[m
           A boolean to enable/disable the use of html encoding when sending a patch. An html encoded patch will be bracketed[m
           with <pre> and have a content type of text/html. Ironically, enabling this option causes Thunderbird to send the patch[m
           as a plain/text, format=fixed email. Default is [1mfalse[0m.[m
[m
       imap.authMethod[m
           Specify authenticate method for authentication with IMAP server. If Git was built with the NO_CURL option, or if your[m
           curl version is older than 7.34.0, or if you‚Äôre running git-imap-send with the [1m--no-curl[0m option, the only supported[m
           method is [4mCRAM-MD5[24m. If this is not set then [4mgit[24m [4mimap-send[24m uses the basic IMAP plaintext LOGIN command.[m
[m
       index.recordEndOfIndexEntries[m
           Specifies whether the index file should include an "End Of Index Entry" section. This reduces index load time on[m
           multiprocessor machines but produces a message "ignoring EOIE extension" when reading the index using Git versions[m
           before 2.20. Defaults to [4mtrue[24m if index.threads has been explicitly enabled, [4mfalse[24m otherwise.[m
[m
       index.recordOffsetTable[m
           Specifies whether the index file should include an "Index Entry Offset Table" section. This reduces index load time on[m
           multiprocessor machines but produces a message "ignoring IEOT extension" when reading the index using Git versions[m
           before 2.20. Defaults to [4mtrue[24m if index.threads has been explicitly enabled, [4mfalse[24m otherwise.[m
[m
       index.sparse[m
           When enabled, write the index using sparse-directory entries. This has no effect unless [1mcore.sparseCheckout[0m and[m
           [1mcore.sparseCheckoutCone[0m are both enabled. Defaults to [4mfalse[24m.[m
[m
       index.threads[m
           Specifies the number of threads to spawn when loading the index. This is meant to reduce index load time on[m
           multiprocessor machines. Specifying 0 or [4mtrue[24m will cause Git to auto-detect the number of CPU‚Äôs and set the number of[m
           threads accordingly. Specifying 1 or [4mfalse[24m will disable multithreading. Defaults to [4mtrue[24m.[m
[m
       index.version[m
           Specify the version with which new index files should be initialized. This does not affect existing repositories. If[m
[7m Manual page git-config(1) line 2749 (press h for help or q to quit)[27m[K[K           [1mfeature.manyFiles[0m is enabled, then the default is 4.[m
[m
       init.templateDir[m
           Specify the directory from which templates will be copied. (See the "TEMPLATE DIRECTORY" section of [1mgit-init[0m(1).)[m
[m
       init.defaultBranch[m
           Allows overriding the default branch name e.g. when initializing a new repository.[m
[m
       instaweb.browser[m
           Specify the program that will be used to browse your working repository in gitweb. See [1mgit-instaweb[0m(1).[m
[m
       instaweb.httpd[m
           The HTTP daemon command-line to start gitweb on your working repository. See [1mgit-instaweb[0m(1).[m
[m
       instaweb.local[m
           If true the web server started by [1mgit-instaweb[0m(1) will be bound to the local IP (127.0.0.1).[m
[m
       instaweb.modulePath[m
           The default module path for [1mgit-instaweb[0m(1) to use instead of /usr/lib/apache2/modules. Only used if httpd is Apache.[m
[m
       instaweb.port[m
           The port number to bind the gitweb httpd to. See [1mgit-instaweb[0m(1).[m
[m
       interactive.singleKey[m
           In interactive commands, allow the user to provide one-letter input with a single key (i.e., without hitting enter).[m
           Currently this is used by the [1m--patch[0m mode of [1mgit-add[0m(1), [1mgit-checkout[0m(1), [1mgit-restore[0m(1), [1mgit-commit[0m(1), [1mgit-[0m[m
           [1mreset[0m(1), and [1mgit-stash[0m(1). Note that this setting is silently ignored if portable keystroke input is not available;[m
           requires the Perl module Term::ReadKey.[m
[m
       interactive.diffFilter[m
           When an interactive command (such as [1mgit[0m [1madd[0m [1m--patch[0m) shows a colorized diff, git will pipe the diff through the shell[m
           command defined by this configuration variable. The command may mark up the diff further for human consumption,[m
[7m Manual page git-config(1) line 2781 (press h for help or q to quit)[27m[K[K           provided that it retains a one-to-one correspondence with the lines in the original diff. Defaults to disabled (no[m
           filtering).[m
[m
       log.abbrevCommit[m
           If true, makes [1mgit-log[0m(1), [1mgit-show[0m(1), and [1mgit-whatchanged[0m(1) assume [1m--abbrev-commit[0m. You may override this option[m
           with [1m--no-abbrev-commit[0m.[m
[m
       log.date[m
           Set the default date-time mode for the [4mlog[24m command. Setting a value for log.date is similar to using [4mgit[24m [4mlog[24m's [1m--date[0m[m
           option. See [1mgit-log[0m(1) for details.[m
[m
       log.decorate[m
           Print out the ref names of any commits that are shown by the log command. If [4mshort[24m is specified, the ref name prefixes[m
           [4mrefs/heads/[24m, [4mrefs/tags/[24m and [4mrefs/remotes/[24m will not be printed. If [4mfull[24m is specified, the full ref name (including[m
           prefix) will be printed. If [4mauto[24m is specified, then if the output is going to a terminal, the ref names are shown as[m
           if [4mshort[24m were given, otherwise no ref names are shown. This is the same as the [1m--decorate[0m option of the [1mgit[0m [1mlog[0m.[m
[m
       log.excludeDecoration[m
           Exclude the specified patterns from the log decorations. This is similar to the [1m--decorate-refs-exclude[0m command-line[m
           option, but the config option can be overridden by the [1m--decorate-refs[0m option.[m
[m
       log.diffMerges[m
           Set default diff format to be used for merge commits. See [1m--diff-merges[0m in [1mgit-log[0m(1) for details. Defaults to[m
           [1mseparate[0m.[m
[m
       log.follow[m
           If [1mtrue[0m, [1mgit[0m [1mlog[0m will act as if the [1m--follow[0m option was used when a single <path> is given. This has the same[m
           limitations as [1m--follow[0m, i.e. it cannot be used to follow multiple files and does not work well on non-linear history.[m
[m
       log.graphColors[m
           A list of colors, separated by commas, that can be used to draw history lines in [1mgit[0m [1mlog[0m [1m--graph[0m.[m
[m
[7m Manual page git-config(1) line 2813 (press h for help or q to quit)[27m[K[K       log.showRoot[m
           If true, the initial commit will be shown as a big creation event. This is equivalent to a diff against an empty tree.[m
           Tools like [1mgit-log[0m(1) or [1mgit-whatchanged[0m(1), which normally hide the root commit will now show it. True by default.[m
[m
       log.showSignature[m
           If true, makes [1mgit-log[0m(1), [1mgit-show[0m(1), and [1mgit-whatchanged[0m(1) assume [1m--show-signature[0m.[m
[m
       log.mailmap[m
           If true, makes [1mgit-log[0m(1), [1mgit-show[0m(1), and [1mgit-whatchanged[0m(1) assume [1m--use-mailmap[0m, otherwise assume[m
           [1m--no-use-mailmap[0m. True by default.[m
[m
       lsrefs.unborn[m
           May be "advertise" (the default), "allow", or "ignore". If "advertise", the server will respond to the client sending[m
           "unborn" (as described in protocol-v2.txt) and will advertise support for this feature during the protocol v2[m
           capability advertisement. "allow" is the same as "advertise" except that the server will not advertise support for[m
           this feature; this is useful for load-balanced servers that cannot be updated atomically (for example), since the[m
           administrator could configure "allow", then after a delay, configure "advertise".[m
[m
       mailinfo.scissors[m
           If true, makes [1mgit-mailinfo[0m(1) (and therefore [1mgit-am[0m(1)) act by default as if the --scissors option was provided on[m
           the command-line. When active, this features removes everything from the message body before a scissors line (i.e.[m
           consisting mainly of ">8", "8<" and "-").[m
[m
       mailmap.file[m
           The location of an augmenting mailmap file. The default mailmap, located in the root of the repository, is loaded[m
           first, then the mailmap file pointed to by this variable. The location of the mailmap file may be in a repository[m
           subdirectory, or somewhere outside of the repository itself. See [1mgit-shortlog[0m(1) and [1mgit-blame[0m(1).[m
[m
       mailmap.blob[m
           Like [1mmailmap.file[0m, but consider the value as a reference to a blob in the repository. If both [1mmailmap.file[0m and[m
           [1mmailmap.blob[0m are given, both are parsed, with entries from [1mmailmap.file[0m taking precedence. In a bare repository, this[m
           defaults to [1mHEAD:.mailmap[0m. In a non-bare repository, it defaults to empty.[m
[7m Manual page git-config(1) line 2845 (press h for help or q to quit)[27m[K[K[m
       maintenance.auto[m
           This boolean config option controls whether some commands run [1mgit[0m [1mmaintenance[0m [1mrun[0m [1m--auto[0m after doing their normal[m
           work. Defaults to true.[m
[m
       maintenance.strategy[m
           This string config option provides a way to specify one of a few recommended schedules for background maintenance.[m
           This only affects which tasks are run during [1mgit[0m [1mmaintenance[0m [1mrun[0m [1m--schedule=X[0m commands, provided no [1m--task=<task>[0m[m
           arguments are provided. Further, if a [1mmaintenance.<task>.schedule[0m config value is set, then that value is used instead[m
           of the one provided by [1mmaintenance.strategy[0m. The possible strategy strings are:[m
[m
           ‚Ä¢   [1mnone[0m: This default setting implies no task are run at any schedule.[m
[m
           ‚Ä¢   [1mincremental[0m: This setting optimizes for performing small maintenance activities that do not delete any data. This[m
               does not schedule the [1mgc[0m task, but runs the [1mprefetch[0m and [1mcommit-graph[0m tasks hourly, the [1mloose-objects[0m and[m
               [1mincremental-repack[0m tasks daily, and the [1mpack-refs[0m task weekly.[m
[m
       maintenance.<task>.enabled[m
           This boolean config option controls whether the maintenance task with name [1m<task>[0m is run when no [1m--task[0m option is[m
           specified to [1mgit[0m [1mmaintenance[0m [1mrun[0m. These config values are ignored if a [1m--task[0m option exists. By default, only[m
           [1mmaintenance.gc.enabled[0m is true.[m
[m
       maintenance.<task>.schedule[m
           This config option controls whether or not the given [1m<task>[0m runs during a [1mgit[0m [1mmaintenance[0m [1mrun[0m [1m--schedule=<frequency>[0m[m
           command. The value must be one of "hourly", "daily", or "weekly".[m
[m
       maintenance.commit-graph.auto[m
           This integer config option controls how often the [1mcommit-graph[0m task should be run as part of [1mgit[0m [1mmaintenance[0m [1mrun[0m[m
           [1m--auto[0m. If zero, then the [1mcommit-graph[0m task will not run with the [1m--auto[0m option. A negative value will force the task[m
           to run every time. Otherwise, a positive value implies the command should run when the number of reachable commits[m
           that are not in the commit-graph file is at least the value of [1mmaintenance.commit-graph.auto[0m. The default value is[m
           100.[m
[7m Manual page git-config(1) line 2877 (press h for help or q to quit)[27m[K[K[m
       maintenance.loose-objects.auto[m
           This integer config option controls how often the [1mloose-objects[0m task should be run as part of [1mgit[0m [1mmaintenance[0m [1mrun[0m[m
           [1m--auto[0m. If zero, then the [1mloose-objects[0m task will not run with the [1m--auto[0m option. A negative value will force the task[m
           to run every time. Otherwise, a positive value implies the command should run when the number of loose objects is at[m
           least the value of [1mmaintenance.loose-objects.auto[0m. The default value is 100.[m
[m
       maintenance.incremental-repack.auto[m
           This integer config option controls how often the [1mincremental-repack[0m task should be run as part of [1mgit[0m [1mmaintenance[0m [1mrun[0m[m
           [1m--auto[0m. If zero, then the [1mincremental-repack[0m task will not run with the [1m--auto[0m option. A negative value will force the[m
           task to run every time. Otherwise, a positive value implies the command should run when the number of pack-files not[m
           in the multi-pack-index is at least the value of [1mmaintenance.incremental-repack.auto[0m. The default value is 10.[m
[m
       man.viewer[m
           Specify the programs that may be used to display help in the [4mman[24m format. See [1mgit-help[0m(1).[m
[m
       man.<tool>.cmd[m
           Specify the command to invoke the specified man viewer. The specified command is evaluated in shell with the man page[m
           passed as argument. (See [1mgit-help[0m(1).)[m
[m
       man.<tool>.path[m
           Override the path for the given tool that may be used to display help in the [4mman[24m format. See [1mgit-help[0m(1).[m
[m
       merge.conflictStyle[m
           Specify the style in which conflicted hunks are written out to working tree files upon merge. The default is "merge",[m
           which shows a [1m<<<<<<<[0m conflict marker, changes made by one side, a [1m=======[0m marker, changes made by the other side, and[m
           then a [1m>>>>>>>[0m marker. An alternate style, "diff3", adds a [1m|||||||[0m marker and the original text before the [1m=======[0m[m
           marker.[m
[m
       merge.defaultToUpstream[m
           If merge is called without any commit argument, merge the upstream branches configured for the current branch by using[m
           their last observed values stored in their remote-tracking branches. The values of the [1mbranch.<current[0m [1mbranch>.merge[0m[m
[7m Manual page git-config(1) line 2909 (press h for help or q to quit)[27m[K[K           that name the branches at the remote named by [1mbranch.<current[0m [1mbranch>.remote[0m are consulted, and then they are mapped[m
           via [1mremote.<remote>.fetch[0m to their corresponding remote-tracking branches, and the tips of these tracking branches are[m
           merged. Defaults to true.[m
[m
       merge.ff[m
           By default, Git does not create an extra merge commit when merging a commit that is a descendant of the current[m
           commit. Instead, the tip of the current branch is fast-forwarded. When set to [1mfalse[0m, this variable tells Git to create[m
           an extra merge commit in such a case (equivalent to giving the [1m--no-ff[0m option from the command line). When set to[m
           [1monly[0m, only such fast-forward merges are allowed (equivalent to giving the [1m--ff-only[0m option from the command line).[m
[m
       merge.verifySignatures[m
           If true, this is equivalent to the --verify-signatures command line option. See [1mgit-merge[0m(1) for details.[m
[m
       merge.branchdesc[m
           In addition to branch names, populate the log message with the branch description text associated with them. Defaults[m
           to false.[m
[m
       merge.log[m
           In addition to branch names, populate the log message with at most the specified number of one-line descriptions from[m
           the actual commits that are being merged. Defaults to false, and true is a synonym for 20.[m
[m
       merge.suppressDest[m
           By adding a glob that matches the names of integration branches to this multi-valued configuration variable, the[m
           default merge message computed for merges into these integration branches will omit "into <branch name>" from its[m
           title.[m
[m
           An element with an empty value can be used to clear the list of globs accumulated from previous configuration entries.[m
           When there is no [1mmerge.suppressDest[0m variable defined, the default value of [1mmaster[0m is used for backward compatibility.[m
[m
       merge.renameLimit[m
           The number of files to consider in the exhaustive portion of rename detection during a merge. If not specified,[m
           defaults to the value of diff.renameLimit. If neither merge.renameLimit nor diff.renameLimit are specified, currently[m
[7m Manual page git-config(1) line 2941 (press h for help or q to quit)[27m[K[K           defaults to 7000. This setting has no effect if rename detection is turned off.[m
[m
       merge.renames[m
           Whether Git detects renames. If set to "false", rename detection is disabled. If set to "true", basic rename detection[m
           is enabled. Defaults to the value of diff.renames.[m
[m
       merge.directoryRenames[m
           Whether Git detects directory renames, affecting what happens at merge time to new files added to a directory on one[m
           side of history when that directory was renamed on the other side of history. If merge.directoryRenames is set to[m
           "false", directory rename detection is disabled, meaning that such new files will be left behind in the old directory.[m
           If set to "true", directory rename detection is enabled, meaning that such new files will be moved into the new[m
           directory. If set to "conflict", a conflict will be reported for such paths. If merge.renames is false,[m
           merge.directoryRenames is ignored and treated as false. Defaults to "conflict".[m
[m
       merge.renormalize[m
           Tell Git that canonical representation of files in the repository has changed over time (e.g. earlier commits record[m
           text files with CRLF line endings, but recent ones use LF line endings). In such a repository, Git can convert the[m
           data recorded in commits to a canonical form before performing a merge to reduce unnecessary conflicts. For more[m
           information, see section "Merging branches with differing checkin/checkout attributes" in [1mgitattributes[0m(5).[m
[m
       merge.stat[m
           Whether to print the diffstat between ORIG_HEAD and the merge result at the end of the merge. True by default.[m
[m
       merge.autoStash[m
           When set to true, automatically create a temporary stash entry before the operation begins, and apply it after the[m
           operation ends. This means that you can run merge on a dirty worktree. However, use with care: the final stash[m
           application after a successful merge might result in non-trivial conflicts. This option can be overridden by the[m
           [1m--no-autostash[0m and [1m--autostash[0m options of [1mgit-merge[0m(1). Defaults to false.[m
[m
       merge.tool[m
           Controls which merge tool is used by [1mgit-mergetool[0m(1). The list below shows the valid built-in values. Any other value[m
           is treated as a custom merge tool and requires that a corresponding mergetool.<tool>.cmd variable is defined.[m
[7m Manual page git-config(1) line 2973 (press h for help or q to quit)[27m[K[K[m
       merge.guitool[m
           Controls which merge tool is used by [1mgit-mergetool[0m(1) when the -g/--gui flag is specified. The list below shows the[m
           valid built-in values. Any other value is treated as a custom merge tool and requires that a corresponding[m
           mergetool.<guitool>.cmd variable is defined.[m
[m
           ‚Ä¢   araxis[m
[m
           ‚Ä¢   bc[m
[m
           ‚Ä¢   bc3[m
[m
           ‚Ä¢   bc4[m
[m
           ‚Ä¢   codecompare[m
[m
           ‚Ä¢   deltawalker[m
[m
           ‚Ä¢   diffmerge[m
[m
           ‚Ä¢   diffuse[m
[m
           ‚Ä¢   ecmerge[m
[m
           ‚Ä¢   emerge[m
[m
           ‚Ä¢   examdiff[m
[m
           ‚Ä¢   guiffy[m
[m
           ‚Ä¢   gvimdiff[m
[m
[7m Manual page git-config(1) line 3005 (press h for help or q to quit)[27m[K[K           ‚Ä¢   gvimdiff1[m
[m
           ‚Ä¢   gvimdiff2[m
[m
           ‚Ä¢   gvimdiff3[m
[m
           ‚Ä¢   kdiff3[m
[m
           ‚Ä¢   meld[m
[m
           ‚Ä¢   nvimdiff[m
[m
           ‚Ä¢   nvimdiff1[m
[m
           ‚Ä¢   nvimdiff2[m
[m
           ‚Ä¢   nvimdiff3[m
[m
           ‚Ä¢   opendiff[m
[m
           ‚Ä¢   p4merge[m
[m
           ‚Ä¢   smerge[m
[m
           ‚Ä¢   tkdiff[m
[m
           ‚Ä¢   tortoisemerge[m
[m
           ‚Ä¢   vimdiff[m
[m
           ‚Ä¢   vimdiff1[m
[m
[7m Manual page git-config(1) line 3037 (press h for help or q to quit)[27m[K[K           ‚Ä¢   vimdiff2[m
[m
           ‚Ä¢   vimdiff3[m
[m
           ‚Ä¢   winmerge[m
[m
           ‚Ä¢   xxdiff[m
[m
       merge.verbosity[m
           Controls the amount of output shown by the recursive merge strategy. Level 0 outputs nothing except a final error[m
           message if conflicts were detected. Level 1 outputs only conflicts, 2 outputs conflicts and file changes. Level 5 and[m
           above outputs debugging information. The default is level 2. Can be overridden by the [1mGIT_MERGE_VERBOSITY[0m environment[m
           variable.[m
[m
       merge.<driver>.name[m
           Defines a human-readable name for a custom low-level merge driver. See [1mgitattributes[0m(5) for details.[m
[m
       merge.<driver>.driver[m
           Defines the command that implements a custom low-level merge driver. See [1mgitattributes[0m(5) for details.[m
[m
       merge.<driver>.recursive[m
           Names a low-level merge driver to be used when performing an internal merge between common ancestors. See[m
           [1mgitattributes[0m(5) for details.[m
[m
       mergetool.<tool>.path[m
           Override the path for the given tool. This is useful in case your tool is not in the PATH.[m
[m
       mergetool.<tool>.cmd[m
           Specify the command to invoke the specified merge tool. The specified command is evaluated in shell with the following[m
           variables available: [4mBASE[24m is the name of a temporary file containing the common base of the files to be merged, if[m
           available; [4mLOCAL[24m is the name of a temporary file containing the contents of the file on the current branch; [4mREMOTE[24m is[m
           the name of a temporary file containing the contents of the file from the branch being merged; [4mMERGED[24m contains the[m
[7m Manual page git-config(1) line 3069 (press h for help or q to quit)[27m[K[K           name of the file to which the merge tool should write the results of a successful merge.[m
[m
       mergetool.<tool>.hideResolved[m
           Allows the user to override the global [1mmergetool.hideResolved[0m value for a specific tool. See [1mmergetool.hideResolved[0m[m
           for the full description.[m
[m
       mergetool.<tool>.trustExitCode[m
           For a custom merge command, specify whether the exit code of the merge command can be used to determine whether the[m
           merge was successful. If this is not set to true then the merge target file timestamp is checked and the merge assumed[m
           to have been successful if the file has been updated, otherwise the user is prompted to indicate the success of the[m
           merge.[m
[m
       mergetool.meld.hasOutput[m
           Older versions of [1mmeld[0m do not support the [1m--output[0m option. Git will attempt to detect whether [1mmeld[0m supports [1m--output[0m[m
           by inspecting the output of [1mmeld[0m [1m--help[0m. Configuring [1mmergetool.meld.hasOutput[0m will make Git skip these checks and use[m
           the configured value instead. Setting [1mmergetool.meld.hasOutput[0m to [1mtrue[0m tells Git to unconditionally use the [1m--output[0m[m
           option, and [1mfalse[0m avoids using [1m--output[0m.[m
[m
       mergetool.meld.useAutoMerge[m
           When the [1m--auto-merge[0m is given, meld will merge all non-conflicting parts automatically, highlight the conflicting[m
           parts and wait for user decision. Setting [1mmergetool.meld.useAutoMerge[0m to [1mtrue[0m tells Git to unconditionally use the[m
           [1m--auto-merge[0m option with [1mmeld[0m. Setting this value to [1mauto[0m makes git detect whether [1m--auto-merge[0m is supported and will[m
           only use [1m--auto-merge[0m when available. A value of [1mfalse[0m avoids using [1m--auto-merge[0m altogether, and is the default value.[m
[m
       mergetool.hideResolved[m
           During a merge Git will automatically resolve as many conflicts as possible and write the [4mMERGED[24m file containing[m
           conflict markers around any conflicts that it cannot resolve; [4mLOCAL[24m and [4mREMOTE[24m normally represent the versions of the[m
           file from before Git‚Äôs conflict resolution. This flag causes [4mLOCAL[24m and [4mREMOTE[24m to be overwriten so that only the[m
           unresolved conflicts are presented to the merge tool. Can be configured per-tool via the [1mmergetool.<tool>.hideResolved[0m[m
           configuration variable. Defaults to [1mfalse[0m.[m
[m
       mergetool.keepBackup[m
[7m Manual page git-config(1) line 3101 (press h for help or q to quit)[27m[K[K           After performing a merge, the original file with conflict markers can be saved as a file with a [1m.orig[0m extension. If[m
           this variable is set to [1mfalse[0m then this file is not preserved. Defaults to [1mtrue[0m (i.e. keep the backup files).[m
[m
       mergetool.keepTemporaries[m
           When invoking a custom merge tool, Git uses a set of temporary files to pass to the tool. If the tool returns an error[m
           and this variable is set to [1mtrue[0m, then these temporary files will be preserved, otherwise they will be removed after[m
           the tool has exited. Defaults to [1mfalse[0m.[m
[m
       mergetool.writeToTemp[m
           Git writes temporary [4mBASE[24m, [4mLOCAL[24m, and [4mREMOTE[24m versions of conflicting files in the worktree by default. Git will[m
           attempt to use a temporary directory for these files when set [1mtrue[0m. Defaults to [1mfalse[0m.[m
[m
       mergetool.prompt[m
           Prompt before each invocation of the merge resolution program.[m
[m
       notes.mergeStrategy[m
           Which merge strategy to choose by default when resolving notes conflicts. Must be one of [1mmanual[0m, [1mours[0m, [1mtheirs[0m, [1munion[0m,[m
           or [1mcat_sort_uniq[0m. Defaults to [1mmanual[0m. See "NOTES MERGE STRATEGIES" section of [1mgit-notes[0m(1) for more information on[m
           each strategy.[m
[m
       notes.<name>.mergeStrategy[m
           Which merge strategy to choose when doing a notes merge into refs/notes/<name>. This overrides the more general[m
           "notes.mergeStrategy". See the "NOTES MERGE STRATEGIES" section in [1mgit-notes[0m(1) for more information on the available[m
           strategies.[m
[m
       notes.displayRef[m
           The (fully qualified) refname from which to show notes when showing commit messages. The value of this variable can be[m
           set to a glob, in which case notes from all matching refs will be shown. You may also specify this configuration[m
           variable several times. A warning will be issued for refs that do not exist, but a glob that does not match any refs[m
           is silently ignored.[m
[m
           This setting can be overridden with the [1mGIT_NOTES_DISPLAY_REF[0m environment variable, which must be a colon separated[m
[7m Manual page git-config(1) line 3133 (press h for help or q to quit)[27m[K[K           list of refs or globs.[m
[m
           The effective value of "core.notesRef" (possibly overridden by GIT_NOTES_REF) is also implicitly added to the list of[m
           refs to be displayed.[m
[m
       notes.rewrite.<command>[m
           When rewriting commits with <command> (currently [1mamend[0m or [1mrebase[0m) and this variable is set to [1mtrue[0m, Git automatically[m
           copies your notes from the original to the rewritten commit. Defaults to [1mtrue[0m, but see "notes.rewriteRef" below.[m
[m
       notes.rewriteMode[m
           When copying notes during a rewrite (see the "notes.rewrite.<command>" option), determines what to do if the target[m
           commit already has a note. Must be one of [1moverwrite[0m, [1mconcatenate[0m, [1mcat_sort_uniq[0m, or [1mignore[0m. Defaults to [1mconcatenate[0m.[m
[m
           This setting can be overridden with the [1mGIT_NOTES_REWRITE_MODE[0m environment variable.[m
[m
       notes.rewriteRef[m
           When copying notes during a rewrite, specifies the (fully qualified) ref whose notes should be copied. The ref may be[m
           a glob, in which case notes in all matching refs will be copied. You may also specify this configuration several[m
           times.[m
[m
           Does not have a default value; you must configure this variable to enable note rewriting. Set it to [1mrefs/notes/commits[0m[m
           to enable rewriting for the default commit notes.[m
[m
           This setting can be overridden with the [1mGIT_NOTES_REWRITE_REF[0m environment variable, which must be a colon separated[m
           list of refs or globs.[m
[m
       pack.window[m
           The size of the window used by [1mgit-pack-objects[0m(1) when no window size is given on the command line. Defaults to 10.[m
[m
       pack.depth[m
           The maximum delta depth used by [1mgit-pack-objects[0m(1) when no maximum depth is given on the command line. Defaults to[m
           50. Maximum value is 4095.[m
[7m Manual page git-config(1) line 3165 (press h for help or q to quit)[27m[K[K[m
       pack.windowMemory[m
           The maximum size of memory that is consumed by each thread in [1mgit-pack-objects[0m(1) for pack window memory when no limit[m
           is given on the command line. The value can be suffixed with "k", "m", or "g". When left unconfigured (or set[m
           explicitly to 0), there will be no limit.[m
[m
       pack.compression[m
           An integer -1..9, indicating the compression level for objects in a pack file. -1 is the zlib default. 0 means no[m
           compression, and 1..9 are various speed/size tradeoffs, 9 being slowest. If not set, defaults to core.compression. If[m
           that is not set, defaults to -1, the zlib default, which is "a default compromise between speed and compression[m
           (currently equivalent to level 6)."[m
[m
           Note that changing the compression level will not automatically recompress all existing objects. You can force[m
           recompression by passing the -F option to [1mgit-repack[0m(1).[m
[m
       pack.allowPackReuse[m
           When true, and when reachability bitmaps are enabled, pack-objects will try to send parts of the bitmapped packfile[m
           verbatim. This can reduce memory and CPU usage to serve fetches, but might result in sending a slightly larger pack.[m
           Defaults to true.[m
[m
       pack.island[m
           An extended regular expression configuring a set of delta islands. See "DELTA ISLANDS" in [1mgit-pack-objects[0m(1) for[m
           details.[m
[m
       pack.islandCore[m
           Specify an island name which gets to have its objects be packed first. This creates a kind of pseudo-pack at the front[m
           of one pack, so that the objects from the specified island are hopefully faster to copy into any pack that should be[m
           served to a user requesting these objects. In practice this means that the island specified should likely correspond[m
           to what is the most commonly cloned in the repo. See also "DELTA ISLANDS" in [1mgit-pack-objects[0m(1).[m
[m
       pack.deltaCacheSize[m
           The maximum memory in bytes used for caching deltas in [1mgit-pack-objects[0m(1) before writing them out to a pack. This[m
[7m Manual page git-config(1) line 3197 (press h for help or q to quit)[27m[K[K           cache is used to speed up the writing object phase by not having to recompute the final delta result once the best[m
           match for all objects is found. Repacking large repositories on machines which are tight with memory might be badly[m
           impacted by this though, especially if this cache pushes the system into swapping. A value of 0 means no limit. The[m
           smallest size of 1 byte may be used to virtually disable this cache. Defaults to 256 MiB.[m
[m
       pack.deltaCacheLimit[m
           The maximum size of a delta, that is cached in [1mgit-pack-objects[0m(1). This cache is used to speed up the writing object[m
           phase by not having to recompute the final delta result once the best match for all objects is found. Defaults to[m
           1000. Maximum value is 65535.[m
[m
       pack.threads[m
           Specifies the number of threads to spawn when searching for best delta matches. This requires that [1mgit-pack-objects[0m(1)[m
           be compiled with pthreads otherwise this option is ignored with a warning. This is meant to reduce packing time on[m
           multiprocessor machines. The required amount of memory for the delta search window is however multiplied by the number[m
           of threads. Specifying 0 will cause Git to auto-detect the number of CPU‚Äôs and set the number of threads accordingly.[m
[m
       pack.indexVersion[m
           Specify the default pack index version. Valid values are 1 for legacy pack index used by Git versions prior to 1.5.2,[m
           and 2 for the new pack index with capabilities for packs larger than 4 GB as well as proper protection against the[m
           repacking of corrupted packs. Version 2 is the default. Note that version 2 is enforced and this config option ignored[m
           whenever the corresponding pack is larger than 2 GB.[m
[m
           If you have an old Git that does not understand the version 2 [1m*.idx[0m file, cloning or fetching over a non native[m
           protocol (e.g. "http") that will copy both [1m*.pack[0m file and corresponding [1m*.idx[0m file from the other side may give you a[m
           repository that cannot be accessed with your older version of Git. If the [1m*.pack[0m file is smaller than 2 GB, however,[m
           you can use [1mgit-index-pack[0m(1) on the *.pack file to regenerate the [1m*.idx[0m file.[m
[m
       pack.packSizeLimit[m
           The maximum size of a pack. This setting only affects packing to a file when repacking, i.e. the git:// protocol is[m
           unaffected. It can be overridden by the [1m--max-pack-size[0m option of [1mgit-repack[0m(1). Reaching this limit results in the[m
           creation of multiple packfiles.[m
[m
[7m Manual page git-config(1) line 3229 (press h for help or q to quit)[27m[K[K           Note that this option is rarely useful, and may result in a larger total on-disk size (because Git will not store[m
           deltas between packs), as well as worse runtime performance (object lookup within multiple packs is slower than a[m
           single pack, and optimizations like reachability bitmaps cannot cope with multiple packs).[m
[m
           If you need to actively run Git using smaller packfiles (e.g., because your filesystem does not support large files),[m
           this option may help. But if your goal is to transmit a packfile over a medium that supports limited sizes (e.g.,[m
           removable media that cannot store the whole repository), you are likely better off creating a single large packfile[m
           and splitting it using a generic multi-volume archive tool (e.g., Unix [1msplit[0m).[m
[m
           The minimum size allowed is limited to 1 MiB. The default is unlimited. Common unit suffixes of [4mk[24m, [4mm[24m, or [4mg[24m are[m
           supported.[m
[m
       pack.useBitmaps[m
           When true, git will use pack bitmaps (if available) when packing to stdout (e.g., during the server side of a fetch).[m
           Defaults to true. You should not generally need to turn this off unless you are debugging pack bitmaps.[m
[m
       pack.useSparse[m
           When true, git will default to using the [4m--sparse[24m option in [4mgit[24m [4mpack-objects[24m when the [4m--revs[24m option is present. This[m
           algorithm only walks trees that appear in paths that introduce new objects. This can have significant performance[m
           benefits when computing a pack to send a small change. However, it is possible that extra objects are added to the[m
           pack-file if the included commits contain certain types of direct renames. Default is [1mtrue[0m.[m
[m
       pack.preferBitmapTips[m
           When selecting which commits will receive bitmaps, prefer a commit at the tip of any reference that is a suffix of any[m
           value of this configuration over any other commits in the "selection window".[m
[m
           Note that setting this configuration to [1mrefs/foo[0m does not mean that the commits at the tips of [1mrefs/foo/bar[0m and[m
           [1mrefs/foo/baz[0m will necessarily be selected. This is because commits are selected for bitmaps from within a series of[m
           windows of variable length.[m
[m
           If a commit at the tip of any reference which is a suffix of any value of this configuration is seen in a window, it[m
           is immediately given preference over any other commit in that window.[m
[7m Manual page git-config(1) line 3261 (press h for help or q to quit)[27m[K[K[m
       pack.writeBitmaps (deprecated)[m
           This is a deprecated synonym for [1mrepack.writeBitmaps[0m.[m
[m
       pack.writeBitmapHashCache[m
           When true, git will include a "hash cache" section in the bitmap index (if one is written). This cache can be used to[m
           feed git‚Äôs delta heuristics, potentially leading to better deltas between bitmapped and non-bitmapped objects (e.g.,[m
           when serving a fetch between an older, bitmapped pack and objects that have been pushed since the last gc). The[m
           downside is that it consumes 4 bytes per object of disk space. Defaults to true.[m
[m
           When writing a multi-pack reachability bitmap, no new namehashes are computed; instead, any namehashes stored in an[m
           existing bitmap are permuted into their appropriate location when writing a new bitmap.[m
[m
       pack.writeReverseIndex[m
           When true, git will write a corresponding .rev file (see: [1mDocumentation/technical/pack-format.txt[0m[3]) for each new[m
           packfile that it writes in all places except for [1mgit-fast-import[0m(1) and in the bulk checkin mechanism. Defaults to[m
           false.[m
[m
       pager.<cmd>[m
           If the value is boolean, turns on or off pagination of the output of a particular Git subcommand when writing to a[m
           tty. Otherwise, turns on pagination for the subcommand using the pager specified by the value of [1mpager.<cmd>[0m. If[m
           [1m--paginate[0m or [1m--no-pager[0m is specified on the command line, it takes precedence over this option. To disable pagination[m
           for all commands, set [1mcore.pager[0m or [1mGIT_PAGER[0m to [1mcat[0m.[m
[m
       pretty.<name>[m
           Alias for a --pretty= format string, as specified in [1mgit-log[0m(1). Any aliases defined here can be used just as the[m
           built-in pretty formats could. For example, running [1mgit[0m [1mconfig[0m [1mpretty.changelog[0m [1m"format:*[0m [1m%H[0m [1m%s"[0m would cause the[m
           invocation [1mgit[0m [1mlog[0m [1m--pretty=changelog[0m to be equivalent to running [1mgit[0m [1mlog[0m [1m"--pretty=format:*[0m [1m%H[0m [1m%s"[0m. Note that an[m
           alias with the same name as a built-in format will be silently ignored.[m
[m
       protocol.allow[m
           If set, provide a user defined default policy for all protocols which don‚Äôt explicitly have a policy[m
[7m Manual page git-config(1) line 3293 (press h for help or q to quit)[27m[K[K[?1l>[?1049l[23;0;0t[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur[00m$ git add -h
[?2004lusage: git add [<options>] [--] <pathspec>...

    -n, --dry-run         dry run
    -v, --verbose         be verbose

    -i, --interactive     interactive picking
    -p, --patch           select hunks interactively
    -e, --edit            edit current diff and apply
    -f, --force           allow adding otherwise ignored files
    -u, --update          update tracked files
    --renormalize         renormalize EOL of tracked files (implies -u)
    -N, --intent-to-add   record only the fact that the path will be added later
    -A, --all             add changes from all tracked and untracked files
    --ignore-removal      ignore paths removed in the working tree (same as --no-all)
    --refresh             don't add, only refresh the index
    --ignore-errors       just skip files which cannot be added because of errors
    --ignore-missing      check if - even missing - files are ignored in dry run
    --sparse              allow updating entries outside of the sparse-checkout cone
    --chmod (+|-)x        override the executable bit of the listed files
    --pathspec-from-file <file>
                          read pathspec from file
    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character

[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur[00m$ cd
[?2004l[?2004h]0;parag@TIGER04577: ~[01;32mparag@TIGER04577[00m:[01;34m~[00m$ cd /home/parag/.local/share/[K[K[K[K[K[K[K[K[K[K[K[K[K
[?2004l[?2004h]0;parag@TIGER04577: ~[01;32mparag@TIGER04577[00m:[01;34m~[00m$ ll
[?2004ltotal 668
drwxr-x--- 3 parag parag   4096 Mar 12 17:49 [0m[01;34m.[0m/
drwxr-xr-x 3 root  root    4096 Mar  7 12:53 [01;34m..[0m/
-rw------- 1 parag parag   7490 Mar 12 17:47 .bash_history
-rw-r--r-- 1 parag parag    220 Mar  7 12:53 .bash_logout
-rw-r--r-- 1 parag parag   3771 Mar  7 12:53 .bashrc
-rw-r--r-- 1 parag parag    119 Mar 12 17:49 .gitconfig
-rw------- 1 parag parag     31 Mar 12 17:49 .lesshst
drwxr-xr-x 3 parag parag   4096 Mar 11 18:54 [01;34m.local[0m/
-rw-r--r-- 1 parag parag      0 Mar 12 12:46 .motd_shown
-rw-r--r-- 1 parag parag    807 Mar  7 12:53 .profile
-rw-r--r-- 1 parag parag      0 Mar  8 14:41 .sudo_as_admin_successful
-rw------- 1 parag parag  20180 Mar 12 16:48 .viminfo
-rw-r--r-- 1 parag parag 241664 Mar 12 17:49 git_session
-rw-r--r-- 1 parag parag 372873 Mar 12 17:47 my_unix_session
[?2004h]0;parag@TIGER04577: ~[01;32mparag@TIGER04577[00m:[01;34m~[00m$ cd  [K/[7mmnt/c/Users/parag.thakur[27mmnt/c/Users/parag.thakur
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur[00m$ cd Desktop/
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop[00m$ mkdir module[K[K[K[K[K[Kgit [K_folder
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop[00m$ mv my_unix_session git_folder/
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop[00m$ cd git_folder/
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git inn[Kit
[?2004lInitialized empty Git repository in /mnt/c/Users/parag.thakur/Desktop/git_folder/.git/
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ ll
[?2004ltotal 364
drwxrwxrwx 1 parag parag    512 Mar 12 17:56 [0m[34;42m.[0m/
drwxrwxrwx 1 parag parag    512 Mar 12 17:56 [34;42m..[0m/
drwxrwxrwx 1 parag parag    512 Mar 12 17:56 [34;42m.git[0m/
-rwxrwxrwx 1 parag parag 372550 Mar 12 16:57 [01;32mmy_unix_session[0m*
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ mb my_unix_session sheel[K[Kll_session
[?2004lCommand 'mb' not found, but can be installed with:
sudo apt install mrbayes
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ mb my_unix_session shell_session[1P[1@v
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ ll
[?2004ltotal 364
drwxrwxrwx 1 parag parag    512 Mar 12 17:58 [0m[34;42m.[0m/
drwxrwxrwx 1 parag parag    512 Mar 12 17:56 [34;42m..[0m/
drwxrwxrwx 1 parag parag    512 Mar 12 17:56 [34;42m.git[0m/
-rwxrwxrwx 1 parag parag 372550 Mar 12 16:57 [01;32mshell_session[0m*
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git add shell_session 
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git add Li[KICENSE
[?2004lfatal: pathspec 'LICENSE' did not match any files
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git add LICENSE[K[K[K[K[K[K[K[7mLICENSE[27mLICENSE
[?2004lfatal: pathspec 'LICENSE' did not match any files
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ GIT C[K[K[K[K[Kgit commit [7m-m 'Initial project version'[27m-m 'Initial project version'
[?2004l[main (root-commit) f4e21d5] Initial project version
 1 file changed, 3954 insertions(+)
 create mode 100644 shell_session
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ [7mgit clone --bare my_project my_project.git[27mgit clone --bare my_project my_project.git[C[1P my_project.git[1P my_project.git[1P my_project.git[1P my_project.git[1P my_project.git[1P my_project.git[1P my_project.git[1P my_project.git[1P my_project.git[1P my_project.gitg my_project.giti my_project.gitt my_project.git_ my_project.gitf my_project.gito my_project.gitl my_project.gitd my_project.gite my_project.gitr my_project.git[C[C[C[C[C[C[C[C[C[C[C
[?2004lfatal: repository 'git_folder' does not exist
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ [7mgit config --global user.name "Mona Lisa"[27mgit config --global user.name "Mona Lisa"[1P"[1P"[1P"[1P"[1P"[1P"[1P"[1P"[1P"p"a"r"a"g"-"t"h"a"k"u"r"
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ [7mgit config --global user.name[27mgit config --global user.name
[?2004lparag-thakur
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ [7mgit config --global user.email[27mgit config --global user.email
[?2004lparag.thakur@tigeranalytics.com
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git add shell_session 
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git coadd shell_session config --global user.email[1Pname "parag-thakur"[2Plone --bare git_folder my_project.git[3Pommit -m 'Initial project version'
[?2004lOn branch main
nothing to commit, working tree clean
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ exit
[?2004lexit

Script done on 2024-03-12 18:43:02+05:30 [COMMAND_EXIT_CODE="1"]
Script started on 2024-03-18 12:57:27+05:30 [TERM="xterm-256color" TTY="/dev/pts/1" COLUMNS="129" LINES="32"]
[?2004h]0;parag@TIGER04577: ~[01;32mparag@TIGER04577[00m:[01;34m~[00m$ exit
[?2004lexit

Script done on 2024-03-18 12:57:36+05:30 [COMMAND_EXIT_CODE="0"]
Script started on 2024-03-18 12:56:04+05:30 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="129" LINES="32"]
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur[00m$ pwd
[?2004l/mnt/c/Users/parag.thakur
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur[00m$ cd
[?2004l[?2004h]0;parag@TIGER04577: ~[01;32mparag@TIGER04577[00m:[01;34m~[00m$ ll
[?2004ltotal 684
drwxr-x--- 3 parag parag   4096 Mar 18 12:48 [0m[01;34m.[0m/
drwxr-xr-x 3 root  root    4096 Mar  7 12:53 [01;34m..[0m/
-rw------- 1 parag parag   8636 Mar 18 12:48 .bash_history
-rw-r--r-- 1 parag parag    220 Mar  7 12:53 .bash_logout
-rw-r--r-- 1 parag parag   3771 Mar  7 12:53 .bashrc
-rw-r--r-- 1 parag parag    119 Mar 12 18:38 .gitconfig
-rw------- 1 parag parag     31 Mar 12 17:49 .lesshst
drwxr-xr-x 3 parag parag   4096 Mar 11 18:54 [01;34m.local[0m/
-rw-r--r-- 1 parag parag      0 Mar 18 12:32 .motd_shown
-rw-r--r-- 1 parag parag    807 Mar  7 12:53 .profile
-rw-r--r-- 1 parag parag      0 Mar  8 14:41 .sudo_as_admin_successful
-rw------- 1 parag parag  20229 Mar 18 12:48 .viminfo
-rw-r--r-- 1 parag parag 252827 Mar 12 18:43 git_session
-rw-r--r-- 1 parag parag 372873 Mar 12 17:47 my_unix_session
[?2004h]0;parag@TIGER04577: ~[01;32mparag@TIGER04577[00m:[01;34m~[00m$ llcdpwdclearvi git_session [4@my_unix[C[C[C[C[C[C[C[C[C^C[?2004l[?2004h[?2004l
[?2004h]0;parag@TIGER04577: ~[01;32mparag@TIGER04577[00m:[01;34m~[00m$ scr[K[K[K[7mgit_session[27mgit_sessionsgit_sessioncgit_sessionrgit_sessionigit_sessionpgit_sessiontgit_session git_session-git_sessionagit_session git_session~git_session/git_session
[?2004lScript started, output log file is '/home/parag/git_session'.
[?2004h]0;parag@TIGER04577: ~[01;32mparag@TIGER04577[00m:[01;34m~[00m$ exit
[?2004lexit
Script done.
[?2004h]0;parag@TIGER04577: ~[01;32mparag@TIGER04577[00m:[01;34m~[00m$ pwd
[?2004l/home/parag
[?2004h]0;parag@TIGER04577: ~[01;32mparag@TIGER04577[00m:[01;34m~[00m$ cd [7m/mnt/c/Users/parag.thakur[27m[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C/mnt/c/Users/parag.thakur
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur[00m$ [7m script -a ~/git_session[27m script -a ~/git_session
[?2004lScript started, output log file is '/home/parag/git_session'.
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur[00m$ [7mgit status[27mgit status
[?2004lfatal: not a git repository (or any parent up to mount point /mnt)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur[00m$ cd Desktop/git_folder/
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git staa[Ktus
[?2004lOn branch main
nothing to commit, working tree clean
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ [7mecho 'My Project' > README[27mecho 'My Project' > README
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git status
[?2004lOn branch main
Untracked files:
  (use "git add <file>..." to include in what will be committed)
	[31mREADME[m

nothing added to commit but untScript started on 2024-03-18 12:58:01+05:30 [TERM="xterm-256color" TTY="/dev/pts/1" COLUMNS="129" LINES="32"]
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur[00m$ [7mgit status[27mgit status
[?2004lfatal: not a git repository (or any parent up to mount point /mnt)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur[00m$ cd Desktop/git_folder/
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git staa[Ktus
[?2004lOn branch main
nothing to commit, working tree clean
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ [7mecho 'My Project' > README[27mecho 'My Project' > README
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git status
[?2004lOn branch main
Untracked files:
  (use "git add <file>..." to include in what will be committed)
	[31mREADME[m

nothing added to commit but untracked files present (use "git add" to track)
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git add Re[K[K[7mREADME[27mREADME
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git status
[?2004lOn branch main
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	[32mnew file:   README[m

[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ ls
[?2004l[0m[01;32mREADME[0m  [01;32mshell_session[0m
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ gi[K[Klsgit status -s
[?2004l[32mA[m  README
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git doiff[K[K[K[Kiff
[?2004l[?1h=[K[?1l>[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ [7m git difftool --tool-help[27m git difftool --tool-help
[?2004l'git difftool --tool=<tool>' may be set to one of the following:
		vimdiff
		vimdiff1
		vimdiff2
		vimdiff3

The following tools are valid, but not currently available:
		araxis
		bc
		bc3
		bc4
		codecompare
		deltawalker
		diffmerge
		diffuse
		ecmerge
		emerge
		examdiff
		guiffy
		gvimdiff
		gvimdiff1
		gvimdiff2
		gvimdiff3
		kdiff3
		kompare
		meld
		nvimdiff
		nvimdiff1
		nvimdiff2
		nvimdiff3
		opendiff
		p4merge
		smerge
		tkdiff
		winmerge
		xxdiff

Some of the tools listed above only work in a windowed
environment. If run in a terminal-only session, they will fail.
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ lig[K[K[Kgit loh[Kg
[?2004l[?1h=[33mcommit f4e21d5311a8c2d888ce4d8ce45ce2bffb553055[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m)[m[m
Author: Parag Thakur <parag.thakur@tigeranalytics.com>[m
Date:   Tue Mar 12 17:59:28 2024 +0530[m
[m
    Initial project version[m
[K[?1l>[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desracked files present (use "git add" to track)
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git add Re[K[K[7mREADME[27mREADME
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git status
[?2004lOn branch main
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	[32mnew file:   README[m

[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ ls
[?2004l[0m[01;32mREADME[0m  [01;32mshell_session[0m
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ gi[K[Klsgit status -s
[?2004l[32mA[m  README
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git doiff[K[K[K[Kiff
[?2004l[?1h=[K[?1l>[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ [7m git difftool --tool-help[27m git difftool --tool-help
[?2004l'git difftool --tool=<tool>' may be set to one of the following:
		vimdiff
		vimdiff1
		vimdiff2
		vimdiff3

The following tools are valid, but not currently available:
		araxis
		bc
		bc3
		bc4
		codecompare
		deltawalker
		diffmerge
		diffuse
		ecmerge
		emerge
		examdiff
		guiffy
		gvimdiff
		gvimdiff1
		gvimdiff2
		gvimdiff3
		kdiff3
		kompare
		meld
		nvimdiff
		nvimdiff1
		nvimdiff2
		nvimdiff3
		opendiff
		p4merge
		smerge
		tkdiff
		winmerge
		xxdiff

Some of the tools listed above only work in a windowed
environment. If run in a terminal-only session, they will fail.
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ lig[K[K[Kgit loh[Kg
[?2004l[?1h=[33mcommit f4e21d5311a8c2d888ce4d8ce45ce2bffb553055[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m)[m[m
Author: Parag Thakur <parag.thakur@tigeranalytics.com>[m
Date:   Tue Mar 12 17:59:28 2024 +0530[m
[m
    Initial project version[m
[K[?1l>[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git log --stat
[?2004l[?1h=[33mcommit f4e21d5311a8c2d888ce4d8ce45ce2bffb553055[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m)[m[m
Author: Parag Thakur <parag.thakur@tigeranalytics.com>[m
Date:   Tue Mar 12 17:59:28 2024 +0530[m
[m
    Initial project version[m
[m
 shell_session | 3954 [32m++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[m[m
 1 file changed, 3954 insertions(+)[m
[K[?1l>[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git log --stat[K [7m--pretty=oneline[27m--pretty=oneline
[?2004l[?1h=[33mf4e21d5311a8c2d888ce4d8ce45ce2bffb553055[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m)[m Initial project version[m
[K[?1l>[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git log --pretty=onelinestat[K[K [7m--pretty=format:"%h - %an, %ar : %s"[27m--pretty=format:"%h - %an, %ar : %s"
[?2004l[?1h=f4e21d5 - Parag Thakur, 6 days ago : Initial project version[m
[K[?1l>[?2004h]0ktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git log --stat
[?2004l[?1h=[33mcommit f4e21d5311a8c2d888ce4d8ce45ce2bffb553055[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m)[m[m
Author: Parag Thakur <parag.thakur@tigeranalytics.com>[m
Date:   Tue Mar 12 17:59:28 2024 +0530[m
[m
    Initial project version[m
[m
 shell_session | 3954 [32m++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[m[m
 1 file changed, 3954 insertions(+)[m
[K[?1l>[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git log --stat[K [7m--pretty=oneline[27m--pretty=oneline
[?2004l[?1h=[33mf4e21d5311a8c2d888ce4d8ce45ce2bffb553055[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m)[m Initial project version[m
[K[?1l>[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git log --pretty=onelinestat[K[K [7m--pretty=format:"%h - %an, %ar : %s"[27m--pretty=format:"%h - %an, %ar : %s"
[?2004l[?1h=f4e21d5 - Parag Thakur, 6 days ago : Initial project version[m
[K[?1l>[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git log --pretty=format:"%h - %an, %ar : %s"oneline[Kstat[K[K v[K[7m --pretty=format:"%h %s" --graph[27m --pretty=format:"%h %s" --graph
[?2004l[?1h=* f4e21d5 Initial project version[m
[K[?1l>[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ [7mgit log --since=2.weeks[27mgit log --since=2.weeks
[?2004l[?1h=[33mcommit f4e21d5311a8c2d888ce4d8ce45ce2bffb553055[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m)[m[m
Author: Parag Thakur <parag.thakur@tigeranalytics.com>[m
Date:   Tue Mar 12 17:59:28 2024 +0530[m
[m
    Initial project version[m
[K[?1l>[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git commit -m ""r"e"a"d"m"e"[C "d"[1P"f"i"l"e"
[?2004l[main f1543c6] readme file
 1 file changed, 1 insertion(+)
 create mode 100644 README
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ vi [K[K[Kcat trial.txt
[?2004lcat: trial.txt: No such file or directory
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ vi trial.tc[Kxt
[?2004l[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;32r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[32;1H"trial.txt" [New][2;1H‚ñΩ[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[2;1H[94m~                                                                                                                                [3;1H~                                                                                                                                [4;1H~                                                                                                                                [5;1H~                                                                                                                                [6;1H~                                                                                                                                [7;1H~                          ;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git log --pretty=format:"%h - %an, %ar : %s"oneline[Kstat[K[K v[K[7m --pretty=format:"%h %s" --graph[27m --pretty=format:"%h %s" --graph
[?2004l[?1h=* f4e21d5 Initial project version[m
[K[?1l>[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ [7mgit log --since=2.weeks[27mgit log --since=2.weeks
[?2004l[?1h=[33mcommit f4e21d5311a8c2d888ce4d8ce45ce2bffb553055[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m)[m[m
Author: Parag Thakur <parag.thakur@tigeranalytics.com>[m
Date:   Tue Mar 12 17:59:28 2024 +0530[m
[m
    Initial project version[m
[K[?1l>[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git commit -m ""r"e"a"d"m"e"[C "d"[1P"f"i"l"e"
[?2004l[main f1543c6] readme file
 1 file changed, 1 insertion(+)
 create mode 100644 README
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ vi [K[K[Kcat trial.txt
[?2004lcat: trial.txt: No such file or directory
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ vi trial.tc[Kxt
[?2004l[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;32r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[32;1H"trial.txt" [New][2;1H‚ñΩ[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[2;1H[94m~                                                                                                                                [3;1H~                                                                                                                                [4;1H~                                                                                                                                [5;1H~                                                                                                                                [6;1H~                                                                                                                                [7;1H~                                                                                                                                [8;1H~                                                                                                                                [9;1H~                                                                                                                                [10;1H~                                                                                                                                [11;1H~                                                                                                                                [12;1H~                                                                                                                                [13;1H~                                                                                                                                [14;1H~                                                                                                                                [15;1H~                                                                                                                                [16;1H~                                                                                                                                [17;1H~                                                                                                                                                                                                          [8;1H~                                                                                                                                [9;1H~                                                                                                                                [10;1H~                                                                                                                                [11;1H~                                                                                                                                [12;1H~                                                                                                                                [13;1H~                                                                                                                                [14;1H~                                                                                                                                [15;1H~                                                                                                                                [16;1H~                                                                                                                                [17;1H~                                                                                                                                [18;1H~                                                                                                                                [19;1H~                                                                                                                                [20;1H~                                                                                                                                [21;1H~                                                                                                                                [22;1H~                                                                                                                                [23;1H~                                                                                                                                [24;1H~                                                                                                                                [25;1H~                                                                                                                                [26;1H~                                                                                                                                [27;1H~                                                                                                                                [28;1H~                                                                                                                                [29;1H~                                                                                                                                [30;1H~                                                                                                                                [31;1H~                                                                                                                                [m[32;112H0,0-1[9CAll[1;1H[?25h[?12$p[?25l[32;102H:[1;1H[32;1H[K[32;1H:[?25hwq![?25l[?2004l[>4;m"trial.txt" [New] 0L, 0B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git add trial.txt 
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git add --amend
[?2004lerror: unknown option `amend'
usage: git add [<options>] [--] <pathspec>...

    -n, --dry-run         dry run
    -v, --verbose                              [18;1H~                                                                                                                                [19;1H~                                                                                                                                [20;1H~                                                                                                                                [21;1H~                                                                                                                                [22;1H~                                                                                                                                [23;1H~                                                                                                                                [24;1H~                                                                                                                                [25;1H~                                                                                                                                [26;1H~                                                                                                                                [27;1H~                                                                                                                                [28;1H~                                                                                                                                [29;1H~                                                                                                                                [30;1H~                                                                                                                                [31;1H~                                                                                                                                [m[32;112H0,0-1[9CAll[1;1H[?25h[?12$p[?25l[32;102H:[1;1H[32;1H[K[32;1H:[?25hwq![?25l[?2004l[>4;m"trial.txt" [New] 0L, 0B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git add trial.txt 
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git add --amend
[?2004lerror: unknown option `amend'
usage: git add [<options>] [--] <pathspec>...

    -n, --dry-run         dry run
    -v, --verbose         be verbose

    -i, --interactive     interactive picking
    -p, --patch           select hunks interactively
    -e, --edit            edit current diff and apply
    -f, --force           allow adding otherwise ignored files
    -u, --update          update tracked files
    --renormalize         renormalize EOL of tracked files (implies -u)
    -N, --intent-to-add   record only the fact that the path will be added later
    -A, --all             add changes from all tracked and untracked files
    --ignore-removal      ignore paths removed in the working tree (same as --no-all)
    --refresh             don't add, only refresh the index
    --ignore-errors       just skip files which cannot be added because of errors
    --ignore-missing      check if - even missing - files are ignored in dry run
    --sparse              allow updating entries outside of the sparse-checkout cone
    --chmod (+|-)x        override the executable bit of the listed files
    --pathspec-from-file <file>
                          read pathspec from file
    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character

[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git add --amend[C[1Pamend
[?2004lerror: unknown switch `a'
usage:       be verbose

    -i, --interactive     interactive picking
    -p, --patch           select hunks interactively
    -e, --edit            edit current diff and apply
    -f, --force           allow adding otherwise ignored files
    -u, --update          update tracked files
    --renormalize         renormalize EOL of tracked files (implies -u)
    -N, --intent-to-add   record only the fact that the path will be added later
    -A, --all             add changes from all tracked and untracked files
    --ignore-removal      ignore paths removed in the working tree (same as --no-all)
    --refresh             don't add, only refresh the index
    --ignore-errors       just skip files which cannot be added because of errors
    --ignore-missing      check if - even missing - files are ignored in dry run
    --sparse              allow updating entries outside of the sparse-checkout cone
    --chmod (+|-)x        override the executable bit of the listed files
    --pathspec-from-file <file>
                          read pathspec from file
    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character

[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git add --amend[C[1Pamend
[?2004lerror: unknown switch `a'
usage: git add [<options>] [--] <pathspec>...

    -n, --dry-run         dry run
    -v, --verbose         be verbose

    -i, --interactive     interactive picking
    -p, --patch           select hunks interactively
    -e, --edit            edit current diff and apply
    -f, --force           allow adding otherwise ignored files
    -u, --update          update tracked files
    --renormalize         renormalize EOL of tracked files (implies -u)
    -N, --intent-to-add   record only the fact that the path will be added later
    -A, --all             add changes from all tracked and untracked files
    --ignore-removal      ignore paths removed in the working tree (same as --no-all)
    --refresh             don't add, only refresh the index
    --ignore-errors       just skip files which cannot be added because of errors
    --ignore-missing      check if - even missing - files are ignored in dry run
    --sparse              allow updating entries outside of the sparse-checkout cone
    --chmod (+|-)x        override the executable bit of the listed files
    --pathspec-from-file <file>
                          read pathspec from file
    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character

[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git add -amend-amend[1P --amend[1P --amend[1P --amendc --amendo --amendm --amendm --amendi --amendt --amend
[?2004lhint: Waiting for your editor to close the file... [?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;32r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[32;1H"/mnt/c/Users/parag.thakur/Desktop/git_folder/.git/COMMIT_EDITMSG" 12L, 287B[2;1H‚ñΩ[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H[38;5;130mreadme file[m[2;1H[K[3;1H[34m# Please enter the commit message for your changes. Lines starting[m[3;67H[K[4;1H[34m# with '#' will be ignored, and an empty message aborts the commit.
#
# Date:      Mon Mar 18 14:46:39 2024 +0530
#
# On branch [m[35mmain[m
[34m# [m[35mChanges to be committed:[m
[34m#       [m[32mnew file[m[34m: [m[31m  README[m
[34m#       [m[32mnew file[m[34m: [m[31m  trial.txt[m
[34m#[m
[94m~                                                                                                                                [14;1H~                                                                        git add [<options>] [--] <pathspec>...

    -n, --dry-run         dry run
    -v, --verbose         be verbose

    -i, --interactive     interactive picking
    -p, --patch           select hunks interactively
    -e, --edit            edit current diff and apply
    -f, --force           allow adding otherwise ignored files
    -u, --update          update tracked files
    --renormalize         renormalize EOL of tracked files (implies -u)
    -N, --intent-to-add   record only the fact that the path will be added later
    -A, --all             add changes from all tracked and untracked files
    --ignore-removal      ignore paths removed in the working tree (same as --no-all)
    --refresh             don't add, only refresh the index
    --ignore-errors       just skip files which cannot be added because of errors
    --ignore-missing      check if - even missing - files are ignored in dry run
    --sparse              allow updating entries outside of the sparse-checkout cone
    --chmod (+|-)x        override the executable bit of the listed files
    --pathspec-from-file <file>
                          read pathspec from file
    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character

[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git add -amend-amend[1P --amend[1P --amend[1P --amendc --amendo --amendm --amendm --amendi --amendt --amend
[?2004lhint: Waiting for your editor to close the file... [?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;32r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[32;1H"/mnt/c/Users/parag.thakur/Desktop/git_folder/.git/COMMIT_EDITMSG" 12L, 287B[2;1H‚ñΩ[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H[38;5;130mreadme file[m[2;1H[K[3;1H[34m# Please enter the commit message for your changes. Lines starting[m[3;67H[K[4;1H[34m# with '#' will be ignored, and an empty message aborts the commit.
#
# Date:      Mon Mar 18 14:46:39 2024 +0530
#
# On branch [m[35mmain[m
[34m# [m[35mChanges to be committed:[m
[34m#       [m[32mnew file[m[34m: [m[31m  README[m
[34m#       [m[32mnew file[m[34m: [m[31m  trial.txt[m
[34m#[m
[94m~                                                                                                                                [14;1H~                                                                                                                                [15;1H~                                                                                                                                [16;1H~                                                                                                                                [17;1H~                                                                                                                                [18;1H~                                                                                                                                [19;1H~                                                                                                                                [20;1H~                                                                                                                                [21;1H~                                                                                                                                [22;1H~                                                                                                                                [23;1H~                                                                                                                                [24;1H~                                                                                                                                [25;1H~                                                                [15;1H~                                                                                                                                [16;1H~                                                                                                                                [17;1H~                                                                                                                                [18;1H~                                                                                                                                [19;1H~                                                                                                                                [20;1H~                                                                                                                                [21;1H~                                                                                                                                [22;1H~                                                                                                                                [23;1H~                                                                                                                                [24;1H~                                                                                                                                [25;1H~                                                                                                                                [26;1H~                                                                                                                                [27;1H~                                                                                                                                [28;1H~                                                                                                                                [29;1H~                                                                                                                                [30;1H~                                                                                                                                [31;1H~                                                                                                                                [m[32;112H1,1[11CAll[1;1H[?25h[?12$p[?25l[32;102H:[1;1H[32;1H[K[32;1H:[?25hQ[?25l[97m[41mE492: Not an editor command: Q[1;1H[m[32;112H1,1[11CAll[1;1H[?25h[?25l[32;102H:[1;1H[32;1H[K[32;1H:[?25hq[?25l[?2004l[>4;m[23;2t[23;1t[32;1H[K[32;1H[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[K[main ed5f148] readme file
 Date: Mon Mar 18 14:46:39 2024 +0530
 2 files changed, 1 insertion(+)
 create mode 100644 README
 create mode 100644 trial.txt
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git log
[?2004l[?1h=[33mcommit ed5f148bcc4a21cffc7fbb3aa671127080f9b70b[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m)[m[m
Author: parag-thakur <parag.thakur@tigeranalytics.com>[m
Date:   Mon Mar 18 14:46:39 2024 +0530[m
[m
    readme file[m
[m
[33mcommit f4e21d5311a8c2d888ce4d8ce45ce2bffb553055[m[m
Author: Parag Thakur <parag.thakur@tigeranalytics.com>[m
Date:   Tue Mar 12 17:59:28 2024 +0530[m
[m
    Initial project version[m
[K[?1l>[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git push 
[?2004lfatal: No configured push destination.
Either specify the URL from the command-line or configure a remote repository using

    git remote add <name> <url>

and then push using the remote name

    git push <name>

[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git status
[?2004l                                                                                                                         [26;1H~                                                                                                                                [27;1H~                                                                                                                                [28;1H~                                                                                                                                [29;1H~                                                                                                                                [30;1H~                                                                                                                                [31;1H~                                                                                                                                [m[32;112H1,1[11CAll[1;1H[?25h[?12$p[?25l[32;102H:[1;1H[32;1H[K[32;1H:[?25hQ[?25l[97m[41mE492: Not an editor command: Q[1;1H[m[32;112H1,1[11CAll[1;1H[?25h[?25l[32;102H:[1;1H[32;1H[K[32;1H:[?25hq[?25l[?2004l[>4;m[23;2t[23;1t[32;1H[K[32;1H[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[K[main ed5f148] readme file
 Date: Mon Mar 18 14:46:39 2024 +0530
 2 files changed, 1 insertion(+)
 create mode 100644 README
 create mode 100644 trial.txt
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git log
[?2004l[?1h=[33mcommit ed5f148bcc4a21cffc7fbb3aa671127080f9b70b[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m)[m[m
Author: parag-thakur <parag.thakur@tigeranalytics.com>[m
Date:   Mon Mar 18 14:46:39 2024 +0530[m
[m
    readme file[m
[m
[33mcommit f4e21d5311a8c2d888ce4d8ce45ce2bffb553055[m[m
Author: Parag Thakur <parag.thakur@tigeranalytics.com>[m
Date:   Tue Mar 12 17:59:28 2024 +0530[m
[m
    Initial project version[m
[K[?1l>[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git push 
[?2004lfatal: No configured push destination.
Either specify the URL from the command-line or configure a remote repository using

    git remote add <name> <url>

and then push using the remote name

    git push <name>

[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git status
[?2004lOn branch main
nothing to commit, working tree clean
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git restro[K[Kore 
.git/          README         shell_session  trial.txt      
]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git restore trial.txt
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git staatu[K[K[Ktus
[?2004lOn branch main
nothing to commit, working tree clean
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git rm trial.txt Re[KEADME 
[?2004lrm 'README'
rm 'trial.txt'
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ ls
[?2004l[0m[01;32mshell_session[0m
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ cd ..
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/DeOn branch main
nothing to commit, working tree clean
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git restro[K[Kore 
.git/          README         shell_session  trial.txt      
]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git restore trial.txt
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git staatu[K[K[Ktus
[?2004lOn branch main
nothing to commit, working tree clean
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ git rm trial.txt Re[KEADME 
[?2004lrm 'README'
rm 'trial.txt'
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ ls
[?2004l[0m[01;32mshell_session[0m
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/git_folder[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/git_folder[00m$ cd ..
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop[00m$ cd [K[K[K[7mgit clone https://github.com/schacon/ticgit[27mgit clone https://github.com/schacon/ticgit
[?2004lCloning into 'ticgit'...
remote: Enumerating objects: 1857, done.[K
Receiving objects:   0% (1/1857)Receiving objects:   1% (19/1857)Receiving objects:   2% (38/1857)Receiving objects:   3% (56/1857)Receiving objects:   4% (75/1857)Receiving objects:   5% (93/1857)Receiving objects:   6% (112/1857)Receiving objects:   7% (130/1857)Receiving objects:   8% (149/1857)Receiving objects:   9% (168/1857)Receiving objects:  10% (186/1857)Receiving objects:  11% (205/1857)Receiving objects:  12% (223/1857)Receiving objects:  13% (242/1857)Receiving objects:  14% (260/1857)Receiving objects:  15% (279/1857)Receiving objects:  16% (298/1857)Receiving objects:  17% (316/1857)Receiving objects:  18% (335/1857)Receiving objects:  19% (353/1857)Receiving objects:  20% (372/1857)Receiving objects:  21% (390/1857)Receiving objects:  22% (409/1857)Receiving objects:  23% (428/1857)Receiving objects:  24% (446/1857)Receiving objects:  25% (465/1857)Receiving objects:  26% (483/1857)Receiving objects:  27% (502/1857)Receiving objects:  28% (520/1857)Receiving objects:  29% (539/1857)Receiving objects:  30% (558/1857)Receiving objects:  31% (576/1857)Receiving objects:  32% (595/1857)Receiving objects:  33% (613/1857)Receiving objects:  34% (632/1857)Receiving objects:  35% (650/1857)Receiving objects:  36% (669/1857)Receiving objects:  37% (688/1857)Receiving objects:  38% (706/1857)Receiving objects:  39% (725/1857)Receiving objects:  40% (743/1857)Receiving objects:  41% (762/1857)Receiving objects:  42% (780/1857)Receiving objects:  43% (799/1857)Receiving objects:  44% (818/1857)Receiving objects:  45% (836/1857)Receiving objects:  46% (855/1857)Receiving objects:  47% (873/1857)Receiving objects:  48% (892/1857)Receiving objects:  49% (910/1857)Receiving objects:  50% (929/1857)Receiving objects:  51% (948/1857)Receiving objects:  52% (966/1857)Receiving objects:  53% (985/1857)Receiving objects:  54% (1003/1857)Receiving objects:  55% (1022/1857)Receiving objects:  56% (1040/1857)Receiving objects:  57% (1059/1857)Receiving objects:  58% (1078/1857)Receiving objects:  59% (1096/1857)Receiving objects:  60% (1115/1857)Receiving objects:  61% (1133/1857)Receiving objects:  62% (1152/1857)Receiving objects:  63% (1170/1857)Receiving objects:  64% (1189/1857)Receiving objects:  65% (1208/1857)Receiving objects:  66% (122sktop[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop[00m$ cd [K[K[K[7mgit clone https://github.com/schacon/ticgit[27mgit clone https://github.com/schacon/ticgit
[?2004lCloning into 'ticgit'...
remote: Enumerating objects: 1857, done.[K
Receiving objects:   0% (1/1857)Receiving objects:   1% (19/1857)Receiving objects:   2% (38/1857)Receiving objects:   3% (56/1857)Receiving objects:   4% (75/1857)Receiving objects:   5% (93/1857)Receiving objects:   6% (112/1857)Receiving objects:   7% (130/1857)Receiving objects:   8% (149/1857)Receiving objects:   9% (168/1857)Receiving objects:  10% (186/1857)Receiving objects:  11% (205/1857)Receiving objects:  12% (223/1857)Receiving objects:  13% (242/1857)Receiving objects:  14% (260/1857)Receiving objects:  15% (279/1857)Receiving objects:  16% (298/1857)Receiving objects:  17% (316/1857)Receiving objects:  18% (335/1857)Receiving objects:  19% (353/1857)Receiving objects:  20% (372/1857)Receiving objects:  21% (390/1857)Receiving objects:  22% (409/1857)Receiving objects:  23% (428/1857)Receiving objects:  24% (446/1857)Receiving objects:  25% (465/1857)Receiving objects:  26% (483/1857)Receiving objects:  27% (502/1857)Receiving objects:  28% (520/1857)Receiving objects:  29% (539/1857)Receiving objects:  30% (558/1857)Receiving objects:  31% (576/1857)Receiving objects:  32% (595/1857)Receiving objects:  33% (613/1857)Receiving objects:  34% (632/1857)Receiving objects:  35% (650/1857)Receiving objects:  36% (669/1857)Receiving objects:  37% (688/1857)Receiving objects:  38% (706/1857)Receiving objects:  39% (725/1857)Receiving objects:  40% (743/1857)Receiving objects:  41% (762/1857)Receiving objects:  42% (780/1857)Receiving objects:  43% (799/1857)Receiving objects:  44% (818/1857)Receiving objects:  45% (836/1857)Receiving objects:  46% (855/1857)Receiving objects:  47% (873/1857)Receiving objects:  48% (892/1857)Receiving objects:  49% (910/1857)Receiving objects:  50% (929/1857)Receiving objects:  51% (948/1857)Receiving objects:  52% (966/1857)Receiving objects:  53% (985/1857)Receiving objects:  54% (1003/1857)Receiving objects:  55% (1022/1857)Receiving objects:  56% (1040/1857)Receiving objects:  57% (1059/1857)Receiving objects:  58% (1078/1857)Receiving objects:  59% (1096/1857)Receiving objects:  60% (1115/1857)Receiving objects:  61% (1133/1857)Receiving objects:  62% (1152/1857)Receiving objects:  63% (1170/1857)Receiving objects:  64% (1189/1857)Receiving objects:  65% (1208/1857)Receiving objects:  66% (1226/1857)Receiving objects:  67% (1245/1857)Receiving objects:  68% (1263/1857)remote: Total 1857 (delta 0), reused 0 (delta 0), pack-reused 1857[K
Receiving objects:  69% (1282/1857)Receiving objects:  70% (1300/1857)Receiving objects:  71% (1319/1857)Receiving objects:  72% (1338/1857)Receiving objects:  73% (1356/1857)Receiving objects:  74% (1375/1857)Receiving objects:  75% (1393/1857)Receiving objects:  76% (1412/1857)Receiving objects:  77% (1430/1857)Receiving objects:  78% (1449/1857)Receiving objects:  79% (1468/1857)Receiving objects:  80% (1486/1857)Receiving objects:  81% (1505/1857)Receiving objects:  82% (1523/1857)Receiving objects:  83% (1542/1857)Receiving objects:  84% (1560/1857)Receiving objects:  85% (1579/1857)Receiving objects:  86% (1598/1857)Receiving objects:  87% (1616/1857)Receiving objects:  88% (1635/1857)Receiving objects:  89% (1653/1857)Receiving objects:  90% (1672/1857)Receiving objects:  91% (1690/1857)Receiving objects:  92% (1709/1857)Receiving objects:  93% (1728/1857)Receiving objects:  94% (1746/1857)Receiving objects:  95% (1765/1857)Receiving objects:  96% (1783/1857)Receiving objects:  97% (1802/1857)Receiving objects:  98% (1820/1857)Receiving objects:  99% (1839/1857)Receiving objects: 100% (1857/1857)Receiving objects: 100% (1857/1857), 334.06 KiB | 2.49 MiB/s, done.
Resolving deltas:   0% (0/837)Resolving deltas:   1% (9/8376/1857)Receiving objects:  67% (1245/1857)Receiving objects:  68% (1263/1857)remote: Total 1857 (delta 0), reused 0 (delta 0), pack-reused 1857[K
Receiving objects:  69% (1282/1857)Receiving objects:  70% (1300/1857)Receiving objects:  71% (1319/1857)Receiving objects:  72% (1338/1857)Receiving objects:  73% (1356/1857)Receiving objects:  74% (1375/1857)Receiving objects:  75% (1393/1857)Receiving objects:  76% (1412/1857)Receiving objects:  77% (1430/1857)Receiving objects:  78% (1449/1857)Receiving objects:  79% (1468/1857)Receiving objects:  80% (1486/1857)Receiving objects:  81% (1505/1857)Receiving objects:  82% (1523/1857)Receiving objects:  83% (1542/1857)Receiving objects:  84% (1560/1857)Receiving objects:  85% (1579/1857)Receiving objects:  86% (1598/1857)Receiving objects:  87% (1616/1857)Receiving objects:  88% (1635/1857)Receiving objects:  89% (1653/1857)Receiving objects:  90% (1672/1857)Receiving objects:  91% (1690/1857)Receiving objects:  92% (1709/1857)Receiving objects:  93% (1728/1857)Receiving objects:  94% (1746/1857)Receiving objects:  95% (1765/1857)Receiving objects:  96% (1783/1857)Receiving objects:  97% (1802/1857)Receiving objects:  98% (1820/1857)Receiving objects:  99% (1839/1857)Receiving objects: 100% (1857/1857)Receiving objects: 100% (1857/1857), 334.06 KiB | 2.49 MiB/s, done.
Resolving deltas:   0% (0/837)Resolving deltas:   1% (9/837)Resolving deltas:   2% (17/837)Resolving deltas:   3% (26/837)Resolving deltas:   4% (34/837)Resolving deltas:   5% (42/837)Resolving deltas:   6% (51/837)Resolving deltas:   7% (59/837)Resolving deltas:   8% (67/837)Resolving deltas:   9% (76/837)Resolving deltas:  10% (84/837)Resolving deltas:  11% (93/837)Resolving deltas:  12% (101/837)Resolving deltas:  13% (109/837)Resolving deltas:  14% (118/837)Resolving deltas:  15% (126/837)Resolving deltas:  16% (134/837)Resolving deltas:  17% (143/837)Resolving deltas:  18% (151/837)Resolving deltas:  19% (160/837)Resolving deltas:  20% (168/837)Resolving deltas:  21% (176/837)Resolving deltas:  22% (185/837)Resolving deltas:  23% (193/837)Resolving deltas:  24% (201/837)Resolving deltas:  25% (210/837)Resolving deltas:  26% (218/837)Resolving deltas:  27% (226/837)Resolving deltas:  28% (235/837)Resolving deltas:  29% (243/837)Resolving deltas:  30% (252/837)Resolving deltas:  31% (260/837)Resolving deltas:  32% (268/837)Resolving deltas:  33% (277/837)Resolving deltas:  34% (285/837)Resolving deltas:  35% (293/837)Resolving deltas:  36% (302/837)Resolving deltas:  37% (310/837)Resolving deltas:  38% (319/837)Resolving deltas:  39% (327/837)Resolving deltas:  40% (335/837)Resolving deltas:  41% (344/837)Resolving deltas:  42% (352/837)Resolving deltas:  43% (360/837)Resolving deltas:  44% (369/837)Resolving deltas:  45% (377/837)Resolving deltas:  46% (386/837)Resolving deltas:  47% (394/837)Resolving deltas:  48% (402/837)Resolving deltas:  49% (411/837)Resolving deltas:  50% (419/837)Resolving deltas:  51% (427/837)Resolving deltas:  52% (436/837)Resolving deltas:  53% (444/837)Resolving deltas:  54% (452/837)Resolving deltas:  55% (461/837)Resolving deltas:  56% (469/837)Resolving deltas:  57% (478/837)Resolving deltas:  58% (486/837)Resolving deltas:  59% (494/837)Resolving deltas:  60% (503/837)Resolving deltas:  61% (511/837)Resolving deltas:  62% (519/837)Resolving deltas:  63% (528/837)Resolving deltas:  64% (536/837)Resolving deltas:  65% (545/837)Resolving deltas:  66% (553/837)Resolving deltas:  67% (561/837)Resolving deltas:  68% (570/837)Resolving deltas:  69% (578/837)Resolving deltas:  70% (586/837)Resolving deltas:  71% (595/837)Resolving deltas:  72% (603/837)Resolving deltas:  73% (612/837)Resolving deltas:  74% (620/837)Resolving deltas:  75% (628/837)Resolving deltas:  76% (637/837)Resolving deltas:  77% (645/837)Resolving deltas:  78% (653/837)Resolving deltas:  79% (662/837)Resolving deltas:  80% (670/837)Resolving deltas:  81% (678/837)Resolving deltas:  82% (687/837))Resolving deltas:   2% (17/837)Resolving deltas:   3% (26/837)Resolving deltas:   4% (34/837)Resolving deltas:   5% (42/837)Resolving deltas:   6% (51/837)Resolving deltas:   7% (59/837)Resolving deltas:   8% (67/837)Resolving deltas:   9% (76/837)Resolving deltas:  10% (84/837)Resolving deltas:  11% (93/837)Resolving deltas:  12% (101/837)Resolving deltas:  13% (109/837)Resolving deltas:  14% (118/837)Resolving deltas:  15% (126/837)Resolving deltas:  16% (134/837)Resolving deltas:  17% (143/837)Resolving deltas:  18% (151/837)Resolving deltas:  19% (160/837)Resolving deltas:  20% (168/837)Resolving deltas:  21% (176/837)Resolving deltas:  22% (185/837)Resolving deltas:  23% (193/837)Resolving deltas:  24% (201/837)Resolving deltas:  25% (210/837)Resolving deltas:  26% (218/837)Resolving deltas:  27% (226/837)Resolving deltas:  28% (235/837)Resolving deltas:  29% (243/837)Resolving deltas:  30% (252/837)Resolving deltas:  31% (260/837)Resolving deltas:  32% (268/837)Resolving deltas:  33% (277/837)Resolving deltas:  34% (285/837)Resolving deltas:  35% (293/837)Resolving deltas:  36% (302/837)Resolving deltas:  37% (310/837)Resolving deltas:  38% (319/837)Resolving deltas:  39% (327/837)Resolving deltas:  40% (335/837)Resolving deltas:  41% (344/837)Resolving deltas:  42% (352/837)Resolving deltas:  43% (360/837)Resolving deltas:  44% (369/837)Resolving deltas:  45% (377/837)Resolving deltas:  46% (386/837)Resolving deltas:  47% (394/837)Resolving deltas:  48% (402/837)Resolving deltas:  49% (411/837)Resolving deltas:  50% (419/837)Resolving deltas:  51% (427/837)Resolving deltas:  52% (436/837)Resolving deltas:  53% (444/837)Resolving deltas:  54% (452/837)Resolving deltas:  55% (461/837)Resolving deltas:  56% (469/837)Resolving deltas:  57% (478/837)Resolving deltas:  58% (486/837)Resolving deltas:  59% (494/837)Resolving deltas:  60% (503/837)Resolving deltas:  61% (511/837)Resolving deltas:  62% (519/837)Resolving deltas:  63% (528/837)Resolving deltas:  64% (536/837)Resolving deltas:  65% (545/837)Resolving deltas:  66% (553/837)Resolving deltas:  67% (561/837)Resolving deltas:  68% (570/837)Resolving deltas:  69% (578/837)Resolving deltas:  70% (586/837)Resolving deltas:  71% (595/837)Resolving deltas:  72% (603/837)Resolving deltas:  73% (612/837)Resolving deltas:  74% (620/837)Resolving deltas:  75% (628/837)Resolving deltas:  76% (637/837)Resolving deltas:  77% (645/837)Resolving deltas:  78% (653/837)Resolving deltas:  79% (662/837)Resolving deltas:  80% (670/837)Resolving deltas:  81% (678/837)Resolving deltas:  82% (687/837)Resolving deltas:  83% (695/837)Resolving deltas:  84% (704/837)Resolving deltas:  85% (712/837)Resolving deltas:  86% (720/837)Resolving deltas:  87% (729/837)Resolving deltas:  88% (737/837)Resolving deltas:  89% (745/837)Resolving deltas:  90% (754/837)Resolving deltas:  91% (762/837)Resolving deltas:  92% (771/837)Resolving deltas:  93% (779/837)Resolving deltas:  94% (787/837)Resolving deltas:  95% (796/837)Resolving deltas:  96% (804/837)Resolving deltas:  97% (812/837)Resolving deltas:  98% (821/837)Resolving deltas:  99% (829/837)Resolving deltas: 100% (837/837)Resolving deltas: 100% (837/837), done.
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop[00m$ cd ticgit/
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git remote 
[?2004lorigin
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git remote -v
[?2004lorigin	https://github.com/schacon/ticgit (fetch)
origin	https://github.com/schacon/ticgit (push)
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ ll[Ks
[?Resolving deltas:  83% (695/837)Resolving deltas:  84% (704/837)Resolving deltas:  85% (712/837)Resolving deltas:  86% (720/837)Resolving deltas:  87% (729/837)Resolving deltas:  88% (737/837)Resolving deltas:  89% (745/837)Resolving deltas:  90% (754/837)Resolving deltas:  91% (762/837)Resolving deltas:  92% (771/837)Resolving deltas:  93% (779/837)Resolving deltas:  94% (787/837)Resolving deltas:  95% (796/837)Resolving deltas:  96% (804/837)Resolving deltas:  97% (812/837)Resolving deltas:  98% (821/837)Resolving deltas:  99% (829/837)Resolving deltas: 100% (837/837)Resolving deltas: 100% (837/837), done.
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop[00m$ cd ticgit/
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git remote 
[?2004lorigin
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git remote -v
[?2004lorigin	https://github.com/schacon/ticgit (fetch)
origin	https://github.com/schacon/ticgit (push)
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ ll[Ks
[?2004l[0m[01;32mLICENSE_GPL[0m  [01;32mLICENSE_MIT[0m  [01;32mREADME.mkd[0m  [01;32mRakefile[0m  [01;32mTODO[0m  [34;42mbin[0m  [34;42mexamples[0m  [34;42mlib[0m  [34;42mnote[0m  [34;42mspec[0m  [01;32mticgit-ng.gemspec[0m
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ cd g[K[K[K[Kgit remote 
[?2004lorigin
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git remote shiw[K[Kow origin
[?2004l* remote origin
  Fetch URL: https://github.com/schacon/ticgit
  Push  URL: https://github.com/schacon/ticgit
  HEAD branch: master
  Remote branches:
    master tracked
    ticgit tracked
  Local branch configured for 'git pull':
    master merges with remote master
  Local ref configured for 'git push':
    master pushes to master (up to date)
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ [7mgit remote add pb https://github.com/paulboone/ticgit[27mgit remote add pb https://github.com/paulboone/ticgit
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git remoet[K[Kte -v
[?2004lorigin	https://github.com/schacon/ticgit (fetch)
origin	https://github.com/schacon/ticgit (push)
pb	https://github.com/paulboone/ticgit (fetch)
pb	https://github.com/paulboone/ticgit (push)
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git remote rename pb paul
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git remote
[?2004lorigin
paul
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git remote remove paukl[K[Kk[Kl
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git rmeot[K[K[K[Kemote
[?2004lorigin
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.tha2004l[0m[01;32mLICENSE_GPL[0m  [01;32mLICENSE_MIT[0m  [01;32mREADME.mkd[0m  [01;32mRakefile[0m  [01;32mTODO[0m  [34;42mbin[0m  [34;42mexamples[0m  [34;42mlib[0m  [34;42mnote[0m  [34;42mspec[0m  [01;32mticgit-ng.gemspec[0m
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ cd g[K[K[K[Kgit remote 
[?2004lorigin
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git remote shiw[K[Kow origin
[?2004l* remote origin
  Fetch URL: https://github.com/schacon/ticgit
  Push  URL: https://github.com/schacon/ticgit
  HEAD branch: master
  Remote branches:
    master tracked
    ticgit tracked
  Local branch configured for 'git pull':
    master merges with remote master
  Local ref configured for 'git push':
    master pushes to master (up to date)
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ [7mgit remote add pb https://github.com/paulboone/ticgit[27mgit remote add pb https://github.com/paulboone/ticgit
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git remoet[K[Kte -v
[?2004lorigin	https://github.com/schacon/ticgit (fetch)
origin	https://github.com/schacon/ticgit (push)
pb	https://github.com/paulboone/ticgit (fetch)
pb	https://github.com/paulboone/ticgit (push)
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git remote rename pb paul
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git remote
[?2004lorigin
paul
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git remote remove paukl[K[Kk[Kl
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git rmeot[K[K[K[Kemote
[?2004lorigin
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git tag
[?2004l[?1h=[K[?1l>[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git tag -l
[?2004l[?1h=[K[?1l>[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git atg[K[K[Katg[K[K[Ktag -a v1.0 -m ""m"y" "v"e"r"s"i"o"n" "1"."0"
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git tag
[?2004l[?1h=v1.0[m
[K[?1l>[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git show v1.0
[?2004l[?1h=[33mtag v1.0[m[m
Tagger: parag-thakur <parag.thakur@tigeranalytics.com>[m
Date:   Mon Mar 18 15:14:07 2024 +0530[m
[m
my version 1.0[m
[m
[33mcommit 847256809a3d518cd36b8f81859401416fe8d945[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m, [m[1;33mtag: v1.0[m[33m, [m[1;31morigin/master[m[33m, [m[1;31morigin/HEAD[m[33m)[m[m
Author: Jeff Welling <Jeff.Welling@Gmail.com>[m
Date:   Tue Apr 26 17:29:17 2011 -0700[m
[m
    Added note to clarify which is the canonical TicGit-ng repo[mkur/Desktop/ticgit[00m$ git tag
[?2004l[?1h=[K[?1l>[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git tag -l
[?2004l[?1h=[K[?1l>[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git atg[K[K[Katg[K[K[Ktag -a v1.0 -m ""m"y" "v"e"r"s"i"o"n" "1"."0"
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git tag
[?2004l[?1h=v1.0[m
[K[?1l>[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git show v1.0
[?2004l[?1h=[33mtag v1.0[m[m
Tagger: parag-thakur <parag.thakur@tigeranalytics.com>[m
Date:   Mon Mar 18 15:14:07 2024 +0530[m
[m
my version 1.0[m
[m
[33mcommit 847256809a3d518cd36b8f81859401416fe8d945[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m, [m[1;33mtag: v1.0[m[33m, [m[1;31morigin/master[m[33m, [m[1;31morigin/HEAD[m[33m)[m[m
Author: Jeff Welling <Jeff.Welling@Gmail.com>[m
Date:   Tue Apr 26 17:29:17 2011 -0700[m
[m
    Added note to clarify which is the canonical TicGit-ng repo[m
[m
[1mdiff --git a/README.mkd b/README.mkd[m[m
[1mindex ab92035..9ea9ff9 100644[m[m
[1m--- a/README.mkd[m[m
[1m+++ b/README.mkd[m[m
[36m@@ -1,3 +1,6 @@[m[m
[32m+[m[32mNote: the original TicGit author has pulled all the TicGit-ng changes into his repository, creating a potentially confusing situ[m [32m[m[32mation. The schacon TicGit repo, this one, is not consistently maintained. For up to date TicGit-ng info and code, check the canon[m [32m[m[32mical TicGit-ng repository at[m[41m  [m[m
[32m+[m[32mhttps://github.com/jeffWelling/ticgit[m[m
[32m+[m[m
 ## TicGit-ng ##[m[m
 [m[m
 This project provides a ticketing system built on Git that is kept in a[m[m
[K[?1l>[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git tag v1.0-lw
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git tag
[?2004l[?1h=v1.0[m
v1.0-lw[m
[K[?1l>[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git show v1.0-lw
[?2004l[?1h=[33mcommit 847256809a3d518cd36b8f81859401416fe8d945[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m, [m[1;33mtag: v1.0-lw[m[33m, [m[1;33mtag: v1.0[m[33m, [m[1;31morigin/master[m[33m, [m[1;31morigin/HEAD[m[33m)[m[m
Author: Jeff Welling <Jeff.Welling@Gmail.com>[m
Date:   Tue Apr 26 17:29:17 2011 -0700[m
[m
    Added note to clarify which is the canonical TicGit-ng repo[m
[m
[1mdiff --git a/README.mkd b/README.mkd[m[m
[1mindex ab92035..9ea9ff9 100644[m[m
[1m--- a/README.mkd[m[m
[1m+++ b/README.mkd[m[m
[36m@@ -1,3 +1,6 @@[m[m
[32m+[m[32mNote: the original TicGit author has pulled all the TicGit-ng changes into his repository, creating a potentially confusing situ[m [32m[m[32mation. The schacon TicGit repo, this one, is not consistently maintained. For up to date TicGit-ng info and code, check the canon[m [32m[m[32mical TicGit-ng repository at[m[41m  [m[m
[32m+[m[32mhttps://github.com/jeffWelling/ticgit[m[m
[32m+[m[m
 ## TicGit-ng ##[m[m
 [m[m
 This project provides a ticketing system built on Git that is kept in a[m[m
[K[?1l>[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ [7mgit log --pretty=oneline[27mgi
[m
[1mdiff --git a/README.mkd b/README.mkd[m[m
[1mindex ab92035..9ea9ff9 100644[m[m
[1m--- a/README.mkd[m[m
[1m+++ b/README.mkd[m[m
[36m@@ -1,3 +1,6 @@[m[m
[32m+[m[32mNote: the original TicGit author has pulled all the TicGit-ng changes into his repository, creating a potentially confusing situ[m [32m[m[32mation. The schacon TicGit repo, this one, is not consistently maintained. For up to date TicGit-ng info and code, check the canon[m [32m[m[32mical TicGit-ng repository at[m[41m  [m[m
[32m+[m[32mhttps://github.com/jeffWelling/ticgit[m[m
[32m+[m[m
 ## TicGit-ng ##[m[m
 [m[m
 This project provides a ticketing system built on Git that is kept in a[m[m
[K[?1l>[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git tag v1.0-lw
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git tag
[?2004l[?1h=v1.0[m
v1.0-lw[m
[K[?1l>[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git show v1.0-lw
[?2004l[?1h=[33mcommit 847256809a3d518cd36b8f81859401416fe8d945[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m, [m[1;33mtag: v1.0-lw[m[33m, [m[1;33mtag: v1.0[m[33m, [m[1;31morigin/master[m[33m, [m[1;31morigin/HEAD[m[33m)[m[m
Author: Jeff Welling <Jeff.Welling@Gmail.com>[m
Date:   Tue Apr 26 17:29:17 2011 -0700[m
[m
    Added note to clarify which is the canonical TicGit-ng repo[m
[m
[1mdiff --git a/README.mkd b/README.mkd[m[m
[1mindex ab92035..9ea9ff9 100644[m[m
[1m--- a/README.mkd[m[m
[1m+++ b/README.mkd[m[m
[36m@@ -1,3 +1,6 @@[m[m
[32m+[m[32mNote: the original TicGit author has pulled all the TicGit-ng changes into his repository, creating a potentially confusing situ[m [32m[m[32mation. The schacon TicGit repo, this one, is not consistently maintained. For up to date TicGit-ng info and code, check the canon[m [32m[m[32mical TicGit-ng repository at[m[41m  [m[m
[32m+[m[32mhttps://github.com/jeffWelling/ticgit[m[m
[32m+[m[m
 ## TicGit-ng ##[m[m
 [m[m
 This project provides a ticketing system built on Git that is kept in a[m[m
[K[?1l>[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ [7mgit log --pretty=oneline[27mgit log --pretty=oneline
[?2004l[?1h=[33m847256809a3d518cd36b8f81859401416fe8d945[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m, [m[1;33mtag: v1.0-lw[m[33m, [m[1;33mtag: v1.0[m[33m, [m[1;31morigin/master[m[33m, [m[1;31morigin/HEAD[m[33m)[m Added note to clar[m [33m[m[33m[m[1;36m[m[1;32m[m[33m[m[1;33m[m[33m[m[1;33m[m[33m[m[1;31m[m[33m[m[1;31m[m[33m[mify which is the canonical TicGit-ng repo[m
[33mcd95b7eb8d8fb7560dc820b1e20edff427429707[m Merge branch 'hotfix-1.0.2.2'[m
[33me4932587f8eee941565849c8ac9fa56bfb4a000a[m Bumped version to 1.0.2.2[m
[33m470d7afa8de9aa612cf711a7c07d702bdbcc3a1d[m Fixed bug where 'ti comment' was prepopulated with a ruby object[m
[33mb2015390494e8ae2e10393c95df89ee44ce4ec1a[m Merge branch 'hotfix-1.0.2.1'[m
[33m871eb64b61414d9633b8056ddb3d66e77609f8a6[m Bumped version to 1.0.2.1[m
[33m37092ec5e38287b98b6b3d52bb4c0a0ae2d776b0[m Fixed bug where the comments (#s) appeared as first comment[m
[33m27afa7ce172ecc2b44bbda855e6caca1d6c7f7c1[m Merge branch 'release-1.0.2'[m
[33m48f34b3b28a3df2278430cf8b87b45c971c67d95[m Bumped version to 1.0.2[m
[33m4f7043d484f9ff7852cec1cbc0af823961642fa8[m Added *.swp to .gitignore, for files vim uses[m
[33m31db5151f52c16c02aa7a65fa8a514317ddb8b85[m fix rdoc rake task[m
[33m0178a68eb37d1013ec343f9eef476ac56e9926cc[m rspec 2 task fixed[m
[33mf496146353247138at log --pretty=oneline
[?2004l[?1h=[33m847256809a3d518cd36b8f81859401416fe8d945[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m, [m[1;33mtag: v1.0-lw[m[33m, [m[1;33mtag: v1.0[m[33m, [m[1;31morigin/master[m[33m, [m[1;31morigin/HEAD[m[33m)[m Added note to clar[m [33m[m[33m[m[1;36m[m[1;32m[m[33m[m[1;33m[m[33m[m[1;33m[m[33m[m[1;31m[m[33m[m[1;31m[m[33m[mify which is the canonical TicGit-ng repo[m
[33mcd95b7eb8d8fb7560dc820b1e20edff427429707[m Merge branch 'hotfix-1.0.2.2'[m
[33me4932587f8eee941565849c8ac9fa56bfb4a000a[m Bumped version to 1.0.2.2[m
[33m470d7afa8de9aa612cf711a7c07d702bdbcc3a1d[m Fixed bug where 'ti comment' was prepopulated with a ruby object[m
[33mb2015390494e8ae2e10393c95df89ee44ce4ec1a[m Merge branch 'hotfix-1.0.2.1'[m
[33m871eb64b61414d9633b8056ddb3d66e77609f8a6[m Bumped version to 1.0.2.1[m
[33m37092ec5e38287b98b6b3d52bb4c0a0ae2d776b0[m Fixed bug where the comments (#s) appeared as first comment[m
[33m27afa7ce172ecc2b44bbda855e6caca1d6c7f7c1[m Merge branch 'release-1.0.2'[m
[33m48f34b3b28a3df2278430cf8b87b45c971c67d95[m Bumped version to 1.0.2[m
[33m4f7043d484f9ff7852cec1cbc0af823961642fa8[m Added *.swp to .gitignore, for files vim uses[m
[33m31db5151f52c16c02aa7a65fa8a514317ddb8b85[m fix rdoc rake task[m
[33m0178a68eb37d1013ec343f9eef476ac56e9926cc[m rspec 2 task fixed[m
[33mf496146353247138a7251590762364a2cc82f1c9[m Rakefile[m
[33m49f6312bb4852499d505578d58ddf2306316101c[m Merge branch 'ruby19' into deving[m
[33m4c31fec749a7247728825d9d60ab834ff91ad72d[m Only use monkeypatch if we aren't using 1.9[m
[33m0d954536b63574b0d36a2bd4581f0ddd1c2bd949[m Merge branch 'ruby19' into deving[m
[33m2d0f1a600d42af38c364f67f783838178b84410b[m Revert "Changed cli_spec back, but filed a bug to sort ti help commands"[m
[33mc67e16ebd1ea4ce898b898e45f12f5a49002d270[m Merge branch 'ruby19' into deving[m
[33md94e91cfe0de7936c00746fac7f5cb085091425c[m Changed cli_spec back, but filed a bug to sort ti help commands[m
[33m7f4450bbd0249139201cbbaa40c2cb91f7f01cc6[m green specs and looks like it`s ok on ruby 1.9.2[m
[33m5b85fe901f21d3ad660c8003cc0451d3a582ecc1[m Merge branch 'hotfix-1.0.1.3' into deving[m
[33md75ad827ce8c16ae4c296ed5e159f5d01100865e[m Merge branch 'hotfix-1.0.1.3'[m
[33m63ddc9b2bb3e59abae322a157e8a13007c995bab[m Bumped version to 1.0.1.3[m
[33md08e6bc35ee44738a6663928e217155e6b566c07[m Permanently squashed branch-choosing bug[m
[33m1ea46e5f97cbb96d06a5d0d3d373c0196c0c4f41[m Merge branch 'sync_with_other_repos' into deving[m
[33m9ff44b7f67de9173ec4a470b1daf9799b25aed27[m Permanently squashed branch-choosing bug[m
[33m500db3a24bfb3dfb4c5b64b4ce55ed01f69a9ba2[m Fixed indentation oopsy[m
[33m1e60fbd4bfec7fdb45e7cae590cd82b4aa918fca[m Merge branch 'deving' into sync_with_other_repos[m
[33m86535a7eea03c115a3393995866e20ba6f6d4b8e[m Merge branch 'hotfix-1.0.1.2' into deving[m
[33m29231e046ae83502350c677382a31d50ba9c41d9[m Merge branch 'hotfix-1.0.1.2'[m
:[K[K[?1l>[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ 
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git tad[Kg 0[K-d v1.0-lw
[?2004lDeleted tag 'v1.0-lw' (was 8472568)
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git tag -d v1.0-lw[K[K[K
[?2004lDeleted tag 'v1.0' (was e951b14)
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git tag
[?2004l[?1h=[K[?1l>[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ clear
[?2004l[H[2J7251590762364a2cc82f1c9[m Rakefile[m
[33m49f6312bb4852499d505578d58ddf2306316101c[m Merge branch 'ruby19' into deving[m
[33m4c31fec749a7247728825d9d60ab834ff91ad72d[m Only use monkeypatch if we aren't using 1.9[m
[33m0d954536b63574b0d36a2bd4581f0ddd1c2bd949[m Merge branch 'ruby19' into deving[m
[33m2d0f1a600d42af38c364f67f783838178b84410b[m Revert "Changed cli_spec back, but filed a bug to sort ti help commands"[m
[33mc67e16ebd1ea4ce898b898e45f12f5a49002d270[m Merge branch 'ruby19' into deving[m
[33md94e91cfe0de7936c00746fac7f5cb085091425c[m Changed cli_spec back, but filed a bug to sort ti help commands[m
[33m7f4450bbd0249139201cbbaa40c2cb91f7f01cc6[m green specs and looks like it`s ok on ruby 1.9.2[m
[33m5b85fe901f21d3ad660c8003cc0451d3a582ecc1[m Merge branch 'hotfix-1.0.1.3' into deving[m
[33md75ad827ce8c16ae4c296ed5e159f5d01100865e[m Merge branch 'hotfix-1.0.1.3'[m
[33m63ddc9b2bb3e59abae322a157e8a13007c995bab[m Bumped version to 1.0.1.3[m
[33md08e6bc35ee44738a6663928e217155e6b566c07[m Permanently squashed branch-choosing bug[m
[33m1ea46e5f97cbb96d06a5d0d3d373c0196c0c4f41[m Merge branch 'sync_with_other_repos' into deving[m
[33m9ff44b7f67de9173ec4a470b1daf9799b25aed27[m Permanently squashed branch-choosing bug[m
[33m500db3a24bfb3dfb4c5b64b4ce55ed01f69a9ba2[m Fixed indentation oopsy[m
[33m1e60fbd4bfec7fdb45e7cae590cd82b4aa918fca[m Merge branch 'deving' into sync_with_other_repos[m
[33m86535a7eea03c115a3393995866e20ba6f6d4b8e[m Merge branch 'hotfix-1.0.1.2' into deving[m
[33m29231e046ae83502350c677382a31d50ba9c41d9[m Merge branch 'hotfix-1.0.1.2'[m
:[K[K[?1l>[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ 
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git tad[Kg 0[K-d v1.0-lw
[?2004lDeleted tag 'v1.0-lw' (was 8472568)
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git tag -d v1.0-lw[K[K[K
[?2004lDeleted tag 'v1.0' (was e951b14)
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git tag
[?2004l[?1h=[K[?1l>[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ clear
[?2004l[H[2J[3J[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ [7mgit config --global alias.co checkout[27mgit config --global alias.co checkout
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ [7mgit config --global alias.last 'log -1 HEAD'[27mgit config --global alias.last 'log -1 HEAD'
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ gut[K[Kit lawst[K[Ks[K[Kst
[?2004l[?1h=[33mcommit 847256809a3d518cd36b8f81859401416fe8d945[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m, [m[1;31morigin/master[m[33m, [m[1;31morigin/HEAD[m[33m)[m[m
Author: Jeff Welling <Jeff.Welling@Gmail.com>[m
Date:   Tue Apr 26 17:29:17 2011 -0700[m
[m
    Added note to clarify which is the canonical TicGit-ng repo[m
[K[?1l>[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git branch -[Ktesting
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;[3J[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ [7mgit config --global alias.co checkout[27mgit config --global alias.co checkout
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ [7mgit config --global alias.last 'log -1 HEAD'[27mgit config --global alias.last 'log -1 HEAD'
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ gut[K[Kit lawst[K[Ks[K[Kst
[?2004l[?1h=[33mcommit 847256809a3d518cd36b8f81859401416fe8d945[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m, [m[1;31morigin/master[m[33m, [m[1;31morigin/HEAD[m[33m)[m[m
Author: Jeff Welling <Jeff.Welling@Gmail.com>[m
Date:   Tue Apr 26 17:29:17 2011 -0700[m
[m
    Added note to clarify which is the canonical TicGit-ng repo[m
[K[?1l>[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git branch -[Ktesting
[?2004l[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git branch
[?2004l[?1h=* [32mmaster[m[m
  testing[m[m
[K[?1l>[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git che[K[K[Kswitch -v n[K[K[Kc new
[?2004lSwitched to a new branch 'new'
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git switch -c new[7Pbranch\[K
[?2004l[?1h=  master[m[m
* [32mnew[m[m
  testing[m[m
[K[?1l>[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git check[K[K[K[K[Kswitch master
[?2004lSwitched to branch 'master'
Your branch is up to date with 'origin/master'.
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git bracn[K[Knch -d new
[?2004lDeleted branch new (was 8472568).
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ git bra[Kanch -v
[?2004l[?1h=* [32mmaster [m 8472568 Added note to clarify which is the canonical TicGit-ng repo[m
  testing[m 8472568 Added note to clarify which is the canonical TicGit-ng repo[m
[K[?1l>[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ [7mgit branch --no-merged[27mgit branch --no-merged
[?2004l[?1h=[K[?1l>[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ gitk
[?2004lapplication-specific initialization failed: no display name and no $DISPLAY environment variable
Error in startup script: no display name and no $DISPLAY environment variable
    while executing
"load /usr/lib/x86_64-linux-gnu/libtk8.6.so"
    ("package ifneeded Tk 8.6.12" script)
    invoked from within
"package require Tk"
    (file "/usr/bin/gitk" line 10)
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ gitk git log 
[?2004lapplication-specific initialization failed: no display name and no $DISPLAY environment variable
Error in startup script: no display name and no $DISPLAY environment variable
    while executing
"load /usr/lib/x86_64-linux-gnu/libtk8.6.so"
    ("package ifneeded Tk 8.6.12" script)
    invoked from within
"package require Tk"
    (file "/usr/bin/gitk" line 10)
[?2004h]0;parag@TIGER04577: /mnt/c/Users/parag.thakur/Desktop/ticgit[01;32mparag@TIGER04577[00m:[01;34m/mnt/c/Users/parag.thakur/Desktop/ticgit[00m$ exit
[?2004lexit

Script done on 2024-03-18 17:44:08+05:30 [COMMAND_EXIT_CODE="1"]
